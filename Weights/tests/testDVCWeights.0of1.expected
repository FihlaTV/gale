StGermain Framework revision 3947. Copyright (C) 2003-2005 VPAC.
StGermain Domain Library revision 3947. Copyright (C) 2003-2007 VPAC.
StGermain Finite Element Framework revision 695. Copyright (C) 2003-2005 VPAC.
StGermain FEM Discretisation Framework revision 695. Copyright (C) 2003-2005 VPAC.
StGermain SLE Library revision 695. Copyright (C) 2003-2005 VPAC.
StGermain PETSc-LinearAlgebra Interface revision 695. Copyright (C) 2003-2005 VPAC.
StGermain FEM Assembly Library revision 695. Copyright (C) 2003-2005 VPAC.
-----------------------------
3D functions:  
-----------------------------

****************************
Test _DVCWeights_ConstructGrid function 
****************************
size of element:
	 x = (-1.000000, 1.000000)
	 y = (-1.000000, 1.000000) 
	 z = (-1.000000, 1.000000)
Resolution: 
	 (x, y, z) = (2, 2, 2)
cell[0]:	Particle Index: -1
 		Values: (N: 2, S: -2, E: 1, W: -2, U: 4, D: -2) 
 		Coords: (-0.500000, -0.500000,-0.500000) 	 Done = 0
cell[1]:	Particle Index: -1
 		Values: (N: 3, S: -2, E: -2, W: 0, U: 5, D: -2) 
 		Coords: (0.500000, -0.500000,-0.500000) 	 Done = 0
cell[2]:	Particle Index: -1
 		Values: (N: -2, S: 0, E: 3, W: -2, U: 6, D: -2) 
 		Coords: (-0.500000, 0.500000,-0.500000) 	 Done = 0
cell[3]:	Particle Index: -1
 		Values: (N: -2, S: 1, E: -2, W: 2, U: 7, D: -2) 
 		Coords: (0.500000, 0.500000,-0.500000) 	 Done = 0
cell[4]:	Particle Index: -1
 		Values: (N: 6, S: -2, E: 5, W: -2, U: -2, D: 0) 
 		Coords: (-0.500000, -0.500000,0.500000) 	 Done = 0
cell[5]:	Particle Index: -1
 		Values: (N: 7, S: -2, E: -2, W: 4, U: -2, D: 1) 
 		Coords: (0.500000, -0.500000,0.500000) 	 Done = 0
cell[6]:	Particle Index: -1
 		Values: (N: -2, S: 4, E: 7, W: -2, U: -2, D: 2) 
 		Coords: (-0.500000, 0.500000,0.500000) 	 Done = 0
cell[7]:	Particle Index: -1
 		Values: (N: -2, S: 5, E: -2, W: 6, U: -2, D: 3) 
 		Coords: (0.500000, 0.500000,0.500000) 	 Done = 0
****************************
Test _DVCWeights_InitialiseStructs function 
****************************
bchain[0]: No of new_claimed_cells = 50, No of new_bound_cells = 50
bchain[1]: No of new_claimed_cells = 50, No of new_bound_cells = 50
bchain[2]: No of new_claimed_cells = 50, No of new_bound_cells = 50
bchain[3]: No of new_claimed_cells = 50, No of new_bound_cells = 50
bchain[4]: No of new_claimed_cells = 50, No of new_bound_cells = 50
bchain[5]: No of new_claimed_cells = 50, No of new_bound_cells = 50
bchain[6]: No of new_claimed_cells = 50, No of new_bound_cells = 50
bchain[7]: No of new_claimed_cells = 50, No of new_bound_cells = 50
****************************
Test _DVCWeights_ResetGrid function 
****************************
numz * numy * numx = 8
cells[0].p = -1 	 cells[0].done = 0
cells[1].p = -1 	 cells[1].done = 0
cells[2].p = -1 	 cells[2].done = 0
cells[3].p = -1 	 cells[3].done = 0
cells[4].p = -1 	 cells[4].done = 0
cells[5].p = -1 	 cells[5].done = 0
cells[6].p = -1 	 cells[6].done = 0
cells[7].p = -1 	 cells[7].done = 0
****************************
Test _DVCWeights_CreateVoronoi function 
****************************
pList[0]:		 coords: (x, y, z) = (0.333333, 0.333333, 0.333333)
pList[1]:		 coords: (x, y, z) = (0.333333, 0.333333, 0.666667)
pList[2]:		 coords: (x, y, z) = (0.333333, 0.666667, 0.333333)
pList[3]:		 coords: (x, y, z) = (0.333333, 0.666667, 0.666667)
pList[4]:		 coords: (x, y, z) = (0.666667, 0.333333, 0.333333)
pList[5]:		 coords: (x, y, z) = (0.666667, 0.333333, 0.666667)
pList[6]:		 coords: (x, y, z) = (0.666667, 0.666667, 0.333333)
pList[7]:		 coords: (x, y, z) = (0.666667, 0.666667, 0.666667)

(dx, dy, dz) = (1.000000, 1.000000, 1.000000)	da = 1.000000

bchain[0]: 	 index = 7 
		 sizeofboundary = 0 
		 numclaimed = 0 
		 totalclaimed = 1
		 new_bound_cells_malloced = 50 
		 new_claimed_cells_malloced = 50 
		 done = 0
bchain[1]: 	 index = 7 
		 sizeofboundary = 0 
		 numclaimed = 0 
		 totalclaimed = 1
		 new_bound_cells_malloced = 50 
		 new_claimed_cells_malloced = 50 
		 done = 0
bchain[2]: 	 index = 7 
		 sizeofboundary = 0 
		 numclaimed = 0 
		 totalclaimed = 1
		 new_bound_cells_malloced = 50 
		 new_claimed_cells_malloced = 50 
		 done = 0
bchain[3]: 	 index = 7 
		 sizeofboundary = 0 
		 numclaimed = 0 
		 totalclaimed = 1
		 new_bound_cells_malloced = 50 
		 new_claimed_cells_malloced = 50 
		 done = 0
bchain[4]: 	 index = 7 
		 sizeofboundary = 0 
		 numclaimed = 0 
		 totalclaimed = 1
		 new_bound_cells_malloced = 50 
		 new_claimed_cells_malloced = 50 
		 done = 0
bchain[5]: 	 index = 7 
		 sizeofboundary = 0 
		 numclaimed = 0 
		 totalclaimed = 1
		 new_bound_cells_malloced = 50 
		 new_claimed_cells_malloced = 50 
		 done = 0
bchain[6]: 	 index = 7 
		 sizeofboundary = 0 
		 numclaimed = 0 
		 totalclaimed = 1
		 new_bound_cells_malloced = 50 
		 new_claimed_cells_malloced = 50 
		 done = 0
bchain[7]: 	 index = 7 
		 sizeofboundary = 0 
		 numclaimed = 0 
		 totalclaimed = 1
		 new_bound_cells_malloced = 50 
		 new_claimed_cells_malloced = 50 
		 done = 0
pList[0]:
		 coords: (x, y, z) = (0.333333, 0.333333, 0.333333)
		 centroids: (cx, cy, cz) = (0.000000, 0.000000 0.000000)
		 weight = 0.000000
pList[1]:
		 coords: (x, y, z) = (0.333333, 0.333333, 0.666667)
		 centroids: (cx, cy, cz) = (0.000000, 0.000000 0.000000)
		 weight = 0.000000
pList[2]:
		 coords: (x, y, z) = (0.333333, 0.666667, 0.333333)
		 centroids: (cx, cy, cz) = (0.000000, 0.000000 0.000000)
		 weight = 0.000000
pList[3]:
		 coords: (x, y, z) = (0.333333, 0.666667, 0.666667)
		 centroids: (cx, cy, cz) = (0.000000, 0.000000 0.000000)
		 weight = 0.000000
pList[4]:
		 coords: (x, y, z) = (0.666667, 0.333333, 0.333333)
		 centroids: (cx, cy, cz) = (0.000000, 0.000000 0.000000)
		 weight = 0.000000
pList[5]:
		 coords: (x, y, z) = (0.666667, 0.333333, 0.666667)
		 centroids: (cx, cy, cz) = (0.000000, 0.000000 0.000000)
		 weight = 0.000000
pList[6]:
		 coords: (x, y, z) = (0.666667, 0.666667, 0.333333)
		 centroids: (cx, cy, cz) = (0.000000, 0.000000 0.000000)
		 weight = 0.000000
pList[7]:
		 coords: (x, y, z) = (0.666667, 0.666667, 0.666667)
		 centroids: (cx, cy, cz) = (0.000000, 0.000000 0.000000)
		 weight = 0.000000
****************************
Test _DVCWeights_GetCentroids function 
****************************
pList[0]:
		 coords: (x, y, z) = (0.333333, 0.333333, 0.333333)
		 centroids: (cx, cy, cz) = (-0.071429, -0.071429 -0.071429)
		 weight = 7.000000
pList[1]:
		 coords: (x, y, z) = (0.333333, 0.333333, 0.666667)
		 centroids: (cx, cy, cz) = (0.000000, 0.000000 0.000000)
		 weight = 0.000000
pList[2]:
		 coords: (x, y, z) = (0.333333, 0.666667, 0.333333)
		 centroids: (cx, cy, cz) = (0.000000, 0.000000 0.000000)
		 weight = 0.000000
pList[3]:
		 coords: (x, y, z) = (0.333333, 0.666667, 0.666667)
		 centroids: (cx, cy, cz) = (0.000000, 0.000000 0.000000)
		 weight = 0.000000
pList[4]:
		 coords: (x, y, z) = (0.666667, 0.333333, 0.333333)
		 centroids: (cx, cy, cz) = (0.000000, 0.000000 0.000000)
		 weight = 0.000000
pList[5]:
		 coords: (x, y, z) = (0.666667, 0.333333, 0.666667)
		 centroids: (cx, cy, cz) = (0.000000, 0.000000 0.000000)
		 weight = 0.000000
pList[6]:
		 coords: (x, y, z) = (0.666667, 0.666667, 0.333333)
		 centroids: (cx, cy, cz) = (0.000000, 0.000000 0.000000)
		 weight = 0.000000
pList[7]:
		 coords: (x, y, z) = (0.666667, 0.666667, 0.666667)
		 centroids: (cx, cy, cz) = (0.500000, 0.500000 0.500000)
		 weight = 1.000000
****************************
Test _DVCWeights_DistanceSquared function 
****************************
particle0:
		 coords: (x, y, z) = (0.500000, 0.500000, 0.500000)
particle1:
		 coords: (x, y, z) = (0.250000, 0.250000, 0.000000)
calculated distance^2 between particles = 0.375000 

-----------------------------
2D functions:  
-----------------------------

****************************
Test _DVCWeights_ConstructGrid2D function 
****************************
size of element:
	 x = (-1.000000, 1.000000)
	 y = (-1.000000, 1.000000) 
Resolution: 
	 (x, y) = (2, 2)
cells2d[0]:	Particle Index: -1 
 		Values: (N: 2, S: -2, E: 1, W: -2) 
 		Coords: (-0.500000, -0.500000) 	 Done = 0
cells2d[1]:	Particle Index: -1 
 		Values: (N: 3, S: -2, E: -2, W: 0) 
 		Coords: (0.500000, -0.500000) 	 Done = 0
cells2d[2]:	Particle Index: -1 
 		Values: (N: -2, S: 0, E: 3, W: -2) 
 		Coords: (-0.500000, 0.500000) 	 Done = 0
cells2d[3]:	Particle Index: -1 
 		Values: (N: -2, S: 1, E: -2, W: 2) 
 		Coords: (0.500000, 0.500000) 	 Done = 0
****************************
Test _DVCWeights_InitialiseStructs2D function 
****************************
bchain2D[0]: No of new_claimed_cells = 50, No of new_bound_cells = 50
bchain2D[1]: No of new_claimed_cells = 50, No of new_bound_cells = 50
bchain2D[2]: No of new_claimed_cells = 50, No of new_bound_cells = 50
bchain2D[3]: No of new_claimed_cells = 50, No of new_bound_cells = 50
****************************
Test _DVCWeights_ResetGrid2D function 
****************************
numz * numy = 4
cells2D[0].p = -1 	 cells2D[0].done = 0
cells2D[1].p = -1 	 cells2D[1].done = 0
cells2D[2].p = -1 	 cells2D[2].done = 0
cells2D[3].p = -1 	 cells2D[3].done = 0
****************************
Test _DVCWeights_CreateVoronoi2D function 
****************************
pList2D[0]:		 coords: (x, y) = (0.333333, 0.333333)
pList2D[1]:		 coords: (x, y) = (0.333333, 0.666667)
pList2D[2]:		 coords: (x, y) = (0.666667, 0.333333)
pList2D[3]:		 coords: (x, y) = (0.666667, 0.666667)

(dx, dy) = (1.000000, 1.000000)	da = 1.000000

bchain2D[0]: 	  index = 3 
		 sizeofboundary = 0 
		 numclaimed = 0 
		 totalclaimed = 1
		 new_bound_cells_malloced = 50 
		 new_claimed_cells_malloced = 50 
		 done = 0
bchain2D[1]: 	  index = 3 
		 sizeofboundary = 0 
		 numclaimed = 0 
		 totalclaimed = 1
		 new_bound_cells_malloced = 50 
		 new_claimed_cells_malloced = 50 
		 done = 0
bchain2D[2]: 	  index = 3 
		 sizeofboundary = 0 
		 numclaimed = 0 
		 totalclaimed = 1
		 new_bound_cells_malloced = 50 
		 new_claimed_cells_malloced = 50 
		 done = 0
bchain2D[3]: 	  index = 3 
		 sizeofboundary = 0 
		 numclaimed = 0 
		 totalclaimed = 1
		 new_bound_cells_malloced = 50 
		 new_claimed_cells_malloced = 50 
		 done = 0
pList2D[0]:
		 coords: (x, y) = (0.333333, 0.333333)
		 centroids: (cx, cy) = (0.000000, 0.000000)
		 weight = 0.000000
pList2D[1]:
		 coords: (x, y) = (0.333333, 0.666667)
		 centroids: (cx, cy) = (0.000000, 0.000000)
		 weight = 0.000000
pList2D[2]:
		 coords: (x, y) = (0.666667, 0.333333)
		 centroids: (cx, cy) = (0.000000, 0.000000)
		 weight = 0.000000
pList2D[3]:
		 coords: (x, y) = (0.666667, 0.666667)
		 centroids: (cx, cy) = (0.000000, 0.000000)
		 weight = 0.000000
****************************
Test _DVCWeights_GetCentroids2D function 
****************************
pList2D[0]:
		 coords: (x, y) = (0.333333, 0.333333)
		 centroids: (cx, cy) = (-0.166667, -0.166667)
		 weight = 3.000000
pList2D[1]:
		 coords: (x, y) = (0.333333, 0.666667)
		 centroids: (cx, cy) = (0.000000, 0.000000)
		 weight = 0.000000
pList2D[2]:
		 coords: (x, y) = (0.666667, 0.333333)
		 centroids: (cx, cy) = (0.000000, 0.000000)
		 weight = 0.000000
pList2D[3]:
		 coords: (x, y) = (0.666667, 0.666667)
		 centroids: (cx, cy) = (0.500000, 0.500000)
		 weight = 1.000000
****************************
Test _DVCWeights_DistanceSquared2D function 
****************************
particle0:
		 coords: (x, y) = (0.500000, 0.500000)
particle1:
		 coords: (x, y) = (0.250000, 0.250000)
calculated distance^2 between particles = 0.125000 
