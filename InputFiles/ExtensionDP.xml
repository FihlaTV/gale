<?xml version="1.0"?>
<!DOCTYPE StGermainData SYSTEM "stgermain.dtd">

<StGermainData xmlns="http://www.vpac.org/StGermain/XML_IO_Handler/Jun2003">

	<include> Underworld/BaseApps/ExtensionBaseApp.xml </include>
<!--	<include> PICellerator/PopulationControl.xml </include>-->
	
	<list name="plugins" mergeType="merge">
		<!-- Output Plugins -->
		<param>StgFEM_FrequentOutput</param>	
		<param>Underworld_Vrms</param>	
		<param>StgFEM_CPUTime</param>	
	</list>

	<struct name="components" mergeType="merge">

       <!--
            Geometry of the problem
	 ____________________________________________
	I                                            I    
	I         Compressible background            I   
	I ___________________________________________I
	I                                            I
	I                                            I
	I          Incompressible Bar                I
	I                                            I
	I                    _                       I
	I___________________[ ]______________________I
	                     l-> small notch          

       -->

		<!--This component defines the gravity-->
		<struct name="buoyancyForceTerm">
			<param name="Type">BuoyancyForceTerm</param>
			<param name="ForceVector">mom_force</param>
			<param name="TemperatureField">TemperatureField</param>
			<param name="Swarm">picIntegrationPoints</param>
			<param name="gravity">gravity</param>
		</struct>

		<!-- Definition of the geometry -->
		<struct name="backgroundShape">
		        <!--Compressible background-->
			<param name="Type">Everywhere</param>
		</struct>	
		<struct name="box">
			<!--Definition of the bar without the small notch-->
			<param name="Type">Box</param>
			<param name="startX"> minX </param> <param name="endX"> maxX </param>
			<param name="startY"> 0.0 </param>  <param name="endY"> 0.7 </param>
			<param name="startZ"> minZ </param> <param name="endZ"> maxZ </param>
		</struct>
		<struct name="weakZone">
			<!--Definition of the small notch-->
			<param name="Type">Box</param>
			<param name="startX"> 0.985 </param> <param name="endX"> 1.015 </param>
			<param name="startY"> 0.0 </param>   <param name="endY"> 0.03 </param>
			<param name="startZ"> minZ </param>  <param name="endZ"> maxZ </param>
		</struct>		
		<struct name="barShape">
			<!--Bar = Box - weakZone-->
			<param name="Type">Intersection</param>
			<list name="shapes">
				<param>box</param>
				<param>!weakZone</param>
			</list>
		</struct>	
		
		<!-- Definition of the materials -->
		<struct name="backgroundViscosity">
		        <!--Compressible background-->
			<param name="Type">MaterialViscosity</param>
			<param name="eta0">1.0e-2</param>
		</struct>	
		<struct name="compressible">
		        <!--This component is necessary when you use a compressible layer
			It defines the compressible properties of the layer -->
			<param name="Type">Compressible</param>
			<param name="GeometryMesh">mesh-linear</param>
			<param name="StiffnessMatrix">c_matrix</param>
			<param name="Swarm">picIntegrationPoints</param>			
			<param name="oneOnLambda">10.0</param>
		</struct>	

		<struct name="barViscosity">
			<!--Viscous rheology of the bar-->
			<param name="Type">MaterialViscosity</param>
			<param name="eta0">100.0</param>
		</struct>	
		<struct name="strainWeakening">
			<!--This component is used by plastic rheology
			it defines the strain weakening behaviour of the
			material
			see component documentation for more details-->
			<param name="Type">StrainWeakening</param>
			<param name="TimeIntegrator">timeIntegrator</param>
			<param name="MaterialPointsSwarm">materialSwarm</param>
			<param name="softeningStrain">0.1</param>
			<param name="initialDamageFraction">0.0</param>
			<param name="initialDamageWavenumber">0.5</param>
			<param name="initialDamageFactor">0.5</param>
			<param name="healingRate">0.0</param>
		</struct>		
		<struct name="yielding">
			<!--Mechanical properties of the plastic rheology
			see component documentation for more details-->
			<param name="Type">DruckerPrager</param>
			<param name="StrainWeakening">strainWeakening</param>
			<param name="PressureField">PressureField</param>
			<param name="MaterialPointsSwarm">materialSwarm</param>
			<param name="StrainRateField">StrainRateField</param>
			<param name="Context">context</param>
			<param name="cohesion">10.0</param>
			<param name="cohesionAfterSoftening">0.1</param>
			<param name="frictionCoefficient">0.0</param>
			<param name="frictionCoefficientAfterSoftening">0.0</param>
			<param name="minimumYieldStress">0.001</param>
		</struct>

		<!-- Assembly of the geometry and the material -->
		<struct name="background">
		        <!--Compressible background-->
			<!--defined by : a geometry (backgroundShape), a viscous
			rheology (backgroundViscosity) and some compressible
			propertie (compressible)-->
			<param name="Type">RheologyMaterial</param>
			<param name="Shape">backgroundShape</param>
			<param name="Compressible">compressible</param>
			<param name="Rheology">backgroundViscosity</param>
		</struct>

		<struct name="bar">
			<!--Incompresssible bar-->
			<!--defined by : a geometry (Shape), a viscous rheology
			(barViscosity) and a plastic rheology (yielding)-->
			<param name="Type">RheologyMaterial</param>
			<param name="Shape">barShape</param>
			<param name="density">1.0</param><!--the density is used for the gravity-->
			<list name="Rheology">
				<param>barViscosity</param>
				<param>yielding</param>
			</list>
		</struct>
	</struct>

	<!-- Simulation control -->
	<param name="maxTimeSteps"> 100 </param> <!--The simulation ends after solving for the number of timesteps indicated here-->
	<param name="outputPath"> ./output </param><!--The name of the directory where the results are stored-->
	<param name="dumpEvery"> 1 </param>        <!--Frequency of the ouput-->	

	<!-- Non-linear stuff -->
	<param name="nonLinearMaxIterations"> 20 </param> <!--number of iterations before considering that the algorithme fails to converge within a timestep-->		

	<param name="gravity">10.</param>
	
	<!-- Journal Control -->
	<!-- These parameters are needed to control the amount of informations printed on screen-->
	<param name="journal.info.Context-verbose">True</param>
	<param name="journal-level.info.Stg_ComponentFactory">2</param>
	<param name="journal.debug">t</param>
	<param name="journal-enable-branch.debug.StgFEM">t</param>
	<param name="journal-level-branch.debug.StgFEM"> 2 </param>	
	
	<!-- Geometry & Mesh setup -->
	<param name="dim"> 2 </param>            <!--this is a 2D problem-->
	<param name="elementResI"> 120 </param>  <!--number of elements in x-direction-->
	<param name="elementResJ"> 60 </param>   <!--number of elements in y-direction-->
	<param name="elementResK"> 1 </param>    <!--number of elements in z-direction (not necessary here)-->
	<param name="shadowDepth"> 1 </param>

        <!--The following 6 parameters define the size of the box (or the cube in 3D)-->
	<param name="minX"> 0.0 </param>
	<param name="minY"> 0.0 </param>
	<param name="minZ"> 0.0 </param>
	<param name="maxX"> 2.0 </param>
	<param name="maxY"> 1.0 </param>
	<param name="maxZ"> 1.0 </param>

	<param name="allowUnbalancing"> True </param>

	<!-- Set up BCs and ICs -->
	<!--This file defines the boundary conditions for this problem-->
	<include> Underworld/VariableConditions/velocityBCs.extension.xml </include>

	<!-- Integration Scheme configuration -->
	<param name="particlesPerCell"> 20 </param>

	<!-- Visualisation stuff -->
	<!--The end of the file is for vizualisation purpose-->
	<include>Underworld/Viewports/StrainRateInvariantVP.xml</include>
	<include>Underworld/Viewports/ParticleMaterialAndNodalVelocityVP.xml</include>
	<include>window.xml</include>
	<struct name="components" mergeType="merge">
		<struct name="window" mergeType="merge">
			<list name="Viewport">
				<param>StrainRateInvariantVP</param>
				<param>ParticleMaterialAndNodalVelocityVP</param>
			</list>	
		</struct>
	</struct>
 
</StGermainData>
