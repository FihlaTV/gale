#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\begin_preamble
\usepackage{hyperref}

\let\myUrl\url
\renewcommand{\url}[1]{(\myUrl{#1})}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language swedish
\papercolumns 1
\papersides 2
\paperpagestyle headings
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\noindent
\align center

\color none
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\begin_inset Graphics
	filename gale_cover.png
	lyxscale 30
	width 75page%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Title
Gale
\end_layout

\begin_layout Author
© California Institute of Technology
\begin_inset Newline newline
\end_inset

Walter Landry and Luke Hodkinson
\begin_inset Newline newline
\end_inset

Version 2.0.1
\end_layout

\begin_layout Date
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph*
About the cover:
\end_layout

\begin_layout Standard
A 3D simulation of a mid-ocean ridge courtesy of Garrett Ito.
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raggedbottom
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Preface
\end_layout

\begin_layout Section
Who Will Use Gale?
\end_layout

\begin_layout Standard
The main audience for Gale is research scientists interested in modeling
 tectonic processes on long geological time scales.
 Examples of problems that can be solved are the development of tectonic
 structures associated with extension and compression, especially where
 localization is important.
 You do not have to be an expert in finite element analysis or scientific
 computing to use this software.
\end_layout

\begin_layout Section
Citation
\end_layout

\begin_layout Standard
Computational Infrastructure for Geodynamics (CIG) is making this source
 code available to you in the hope that the software will enhance your research
 in geophysics.
 The underlying C code for the finite element package was donated to CIG
 in July of 2005.
 A number of individuals have contributed a significant portion of their
 careers toward the development of Gale.
 It is essential that you recognize these individuals in the normal scientific
 practice by making appropriate acknowledgments.
 
\end_layout

\begin_layout Standard
The code is based on the method described in 
\end_layout

\begin_layout Itemize
Moresi, L.N., F.
 Dufour, and H.-B.
 Mühlhaus (2003), A Lagrangian integration point finite element method for
 large deformation modeling of viscoelastic geomaterials, 
\emph on
J.
 Comp.
 Phys., 184
\series bold
,
\series default
\emph default
 476-497.
 
\end_layout

\begin_layout Standard
The code was originally developed by the Victorian Partnership for Advanced
 Computing (VPAC) and Louis Moresi's group at Monash University.
 Walter Landry of CIG and Luke Hodkinson of VPAC have enhanced the code
 to satisfy the requirements of the long-term tectonics community.
 Roger Buck, Gus Correa, Robert Bialas, Guillaume Duclaux, John Sheehan,
 Garrett Ito, 
\color none
Noah Fay, Neil de Laplante, Matthieu Quinquis, Patrice Rey, Lara O'Dwyer,
 Louise Kellogg, Laetitia Le Pourhiet, Leonardo Da Cruz, Jolante Van Wijk,
 Tristan Salles, Mark Fleharty, Taichi Sato, and Lester Anderson
\color inherit
 provided valuable user testing.
 The Gale team requests that in your oral presentations and in your papers
 that you indicate your use of this code and acknowledge the authors of
 the code, CIG 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

www.geodynamics.org
\end_layout

\end_inset

, Victoria Partnership for Advanced Computing 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

www.vpac.org
\end_layout

\end_inset

, and Monash University 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

www.monash.edu
\end_layout

\end_inset

.
\end_layout

\begin_layout Section
Support
\end_layout

\begin_layout Standard
Gale development is supported by a grant from the National Science Foundation
 to CIG, managed by the California Institute of Technology, under Grant
 No.
 EAR-0406751.
 However, most of the software components below Gale have been developed
 by the Victoria Partnership for Advanced Computing (VPAC) and Monash University.
 Some of the support for VPAC has come from subawards from CIG.
\end_layout

\begin_layout Standard
Any opinions, findings, and conclusions or recommendations expressed in
 this material are those of the authors and do not necessarily reflect the
 views of the National Science Foundation.
 
\end_layout

\begin_layout Section
Gale History
\end_layout

\begin_layout Standard
Gale arose from discussions at an NSF-sponsored workshop on Tectonic Modeling
 held in Breckenridge, Colorado, in June 2005; see Geodynamic Modeling of
 Tectonics Processes 2005 workshop report 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

www.geodynamics.org/cig/workinggroups/long/workshops/2005/issues
\end_layout

\end_inset

.
 At that workshop, members of the tectonics community advocated that CIG
 develop a new open-source software package for solving tectonic problems.
 Existing private codes have seen a great deal of use in crustal and lithospheri
c deformation problems such as orogenesis, rifting, and subduction.
 They have also been coupled with surface erosion models, as well as being
 employed for deeper mantle dynamics problems.
 Gale is an open-source code that is intended to cover these research areas
\color none
, with the addition of 3D capability.
\end_layout

\begin_layout Standard
The development of Gale was jump-started by building on top of Underworld
 
\begin_inset CommandInset citation
LatexCommand cite
key "Underworld"

\end_inset

, a mantle convection code developed by Louis Moresi's group at Monash and
 the Victorian Partnership for Advanced Computing (VPAC).
 Underworld was created as a parallel version of Ellipsis3D 
\begin_inset CommandInset citation
LatexCommand cite
key "Ellipsis"

\end_inset

, a mantle convection code which grew out of CitCom 
\begin_inset CommandInset citation
LatexCommand cite
key "Citcom"

\end_inset

.
 Walter Landry of CIG and Luke Hodkinson of VPAC are the primary developers
 of the Gale-specific components.
\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Section
About Gale
\end_layout

\begin_layout Standard
Gale is a parallel, two- or three-dimensional code that solves problems
 related to orogenesis, rifting, and subduction.
 Gale starts with a collection of particles to track material properties
 such as density and, for strain-softening materials, strain.
 At each point in time, a finite element mesh is superimposed over the particles.
 This allows Gale to simulate  problems with large deformations and irregular
 boundaries.
\end_layout

\begin_layout Standard
CIG developed Gale in response to community demand by building on existing
 work by VPAC and Louis Moresi's group at Monash University.
 The code is being released under the GNU General Public License.
\end_layout

\begin_layout Section
Gale Computational Approach and Governing Equations
\end_layout

\begin_layout Subsection
Infrastructure
\end_layout

\begin_layout Standard
Particles are the fundamental object in Gale.
 Particles store all of the material properties, including density, integrated
 strain, and thermal diffusivity.
 A logically regular finite element mesh is created at each time step.
 Material properties are interpolated from the particles to the mesh, and
 the Stokes equations are then solved on that mesh.
 This mesh can become quite distorted, as the boundaries of the mesh will
 be stretched to cover the particles wherever they go.
 Once the Stokes equations are solved, the mesh is retained only to provide
 a good initial guess for the next time step.
\end_layout

\begin_layout Subsection
Units
\end_layout

\begin_layout Standard
Gale has no internal knowledge of units.
 So if you tell Gale that a box is 10 units across, it does not know or
 care whether it is 10 cm or 10 km.
 You only have to make sure that you are consistent.
 For example, if you give velocities in cm/year, make sure that your viscosities
 and lengths also use cm and years.
 However, you may have to scale your units to make the solver work (see
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Scaling"

\end_inset

).
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Basic-Equations"

\end_inset

Basic Equations
\end_layout

\begin_layout Standard
We start by decomposing the stress tensor 
\begin_inset Formula $\sigma$
\end_inset

 into pressure 
\begin_inset Formula $p$
\end_inset

 and deviatoric stress 
\begin_inset Formula $\tau$
\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\sigma_{ij}=\tau_{ij}-p\delta_{ij},\label{eq:stress}
\end{equation}

\end_inset

where 
\begin_inset Formula $\delta$
\end_inset

 is the Kronecker delta.
 In its simplest form, Gale solves a conservation equation for momentum
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\tau_{ij,j}-p_{,i}=0,\label{eq:simple momentum conservation}
\end{equation}

\end_inset

subject to the (incompressible) continuity equation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
v_{i,i}=0,\label{eq:continuity}
\end{equation}

\end_inset

where 
\begin_inset Formula $v$
\end_inset

 is the velocity.
 We use the convention that repeated indices (e.g., 
\begin_inset Formula $v_{i,i}$
\end_inset

) imply a sum over all dimensions.
 So in three dimensions
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
v_{i,i}\equiv v_{x,x}+v_{y,y}+v_{z,z}.\label{eq:implicit summation}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Note that there is no explicit time dependency in Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:simple momentum conservation"

\end_inset

.
 Gale simulates creeping flows, so acceleration terms are neglected and
 material motion evolves through a series of equilibria.
 If your boundary condition has a time dependent component, then you may
 infer a time.
 For example, if the boundaries move inwards at 1 mm/sec, then the solution
 when the boundaries have moved 5 mm would correspond to 5 seconds.
\end_layout

\begin_layout Standard
Assuming a simple Newtonian fluid, we can write 
\begin_inset Formula $\tau$
\end_inset

 in terms of the rate of strain tensor 
\begin_inset Formula $\dot{\varepsilon}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\tau_{ij}=2\eta\dot{\varepsilon}_{ij}\equiv\eta\left(v_{i,j}+v_{j,i}\right),\label{eq:stress strain}
\end{equation}

\end_inset

where 
\begin_inset Formula $\eta$
\end_inset

 is the viscosity.
\end_layout

\begin_layout Standard
Note that equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:simple momentum conservation"

\end_inset

 has no dependence on the magnitude of the velocity.
 Rather, only the derivative of the velocity comes into play.
 This means that, in the absence of boundary conditions, you can take a
 valid solution, add 
\begin_inset Formula $10^{40}$
\end_inset

 to all of the velocity components, and you will still have a valid solution.
 In practice, if you do not specify the velocity somewhere, the code will
 have problems finding a solution.
\end_layout

\begin_layout Standard
This means that, in 2D, you must specify 
\begin_inset Formula $v_{x}$
\end_inset

 and 
\begin_inset Formula $v_{y}$
\end_inset

 for at least in one point in your simulation (it does not have to be the
 same point).
 
\end_layout

\begin_layout Subsection
Gravity
\end_layout

\begin_layout Standard
Equations 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:simple momentum conservation"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:continuity"

\end_inset

 do not include the effect of gravity.
 Gravity is accounted for by adding a body force term to Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:simple momentum conservation"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\tau_{ij,j}-p_{,i}=f_{i},\label{eq:body force}
\end{equation}

\end_inset

where
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{array}{ccc}
f_{x} & = & 0\\
f_{y} & = & -g\rho\\
f_{z} & = & 0
\end{array}.\label{eq:gravity body force}
\end{equation}

\end_inset

 Note that the vertical direction is in the 
\begin_inset Formula $y$
\end_inset

 direction, not the 
\begin_inset Formula $z$
\end_inset

 direction.
 This makes it easy to switch between 2D and 3D models without rewriting
 the entire input file.
\end_layout

\begin_layout Subsection
Divergence Forces
\begin_inset CommandInset label
LatexCommand label
name "sub:Divergence-Forces"

\end_inset


\end_layout

\begin_layout Standard
It can sometimes be convenient to create a model where material is created
 within the simulation.
 For example, magma chambers can be fed through small channels that emanate
 from far away, outside the simulation.
 Simulating these small channels would be too computationally expensive.
 Instead, we can model the magma as just being created in the chamber.
\end_layout

\begin_layout Standard
You do this by adding a divergence term to the continuity Equation (Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:continuity"

\end_inset

),
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
v_{i,i}=d,\label{eq:divergence}
\end{equation}

\end_inset

 where 
\begin_inset Formula $d$
\end_inset

 is a scalar that can depend on anything: time, space, strain, etc.
 In this form, the divergence modifies the velocity.
 However, since the velocity and pressure are not really independent, you
 can also think of it as setting a condition on the pressure.
 For example, consider a one dimensional isoviscous case with no gravity.
 You can write the momentum Equation (Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:simple momentum conservation"

\end_inset

) as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\eta\left(v_{i,jj}+v_{j,ij}\right)+p_{,i}=0.\label{eq:1D momentum}
\end{equation}

\end_inset

 In one dimension, Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:divergence"

\end_inset

 becomes
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
v_{x,x}=d,\label{eq:1D divergence}
\end{equation}

\end_inset

 which implies
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
2\eta d_{,x}+p_{,x}=0.\label{eq:pressure_divergence_derivative}
\end{equation}

\end_inset

 So if you specify the divergence as a constant in one region and zero outside,
 that is equivalent to specifying a pressure drop across the boundary of
 the region.
 This result also holds in general for spherical and ellipsoidal regions,
 although not if the viscosity varies across the boundary of the region.
\end_layout

\begin_layout Subsection
Rheology
\end_layout

\begin_layout Standard
Gale incorporates a number of different rheologies and allows you to create
 your own.
 For more complicated, non-linear rheologies, Gale still solves Equation
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:stress strain"

\end_inset

 for the velocity.
 However, because the viscosity may depend on the velocity and its derivatives,
 Gale now has to iterate until it reaches a self consistent solution for
 the viscosity and velocity.
 See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Uzawa-Algorithm"

\end_inset

 for more details.
 For details on the existing rheologies, see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Materials"

\end_inset

.
 
\end_layout

\begin_layout Subsection
Temperature
\end_layout

\begin_layout Standard
Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:body force"

\end_inset

 does not explicitly include the effect of temperature and heat transfer.
 Temperature can be implicitly included by using a temperature dependent
 viscosity and/or modifying the gravitational force to have a thermal buoyancy
 term.
 To make the simulation completely self consistent, we solve the energy
 equation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial T}{\partial t}+v\cdot\nabla T=\kappa\nabla^{2}T+Q,\label{eq:energy}
\end{equation}

\end_inset

where 
\begin_inset Formula $T$
\end_inset

 is the temperature, 
\begin_inset Formula $\kappa$
\end_inset

 is the thermal diffusivity, and 
\begin_inset Formula $Q$
\end_inset

 is the rate of energy production (e.g., from radiogenic sources).
 Note that Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:energy"

\end_inset

 introduces time into the equation.
\end_layout

\begin_layout Subsection
Numerical Solution
\end_layout

\begin_layout Subsubsection
Finite Elements
\end_layout

\begin_layout Standard
Gale can use a few different types of finite elements to represent the solution.
 The recommended elements are quadratic (
\begin_inset Formula $Q_{2}$
\end_inset

) elements for the velocity and temperature, and discontinuous linear (
\begin_inset Formula $P_{-1}$
\end_inset

) elements for the pressure.
 These elements are mathematically well behaved and have been used in other
 computational codes with success.
\end_layout

\begin_layout Standard
If, for some reason, you wish use a different element type, Gale also supports
 linear (
\begin_inset Formula $Q_{1}$
\end_inset

) and piecewise constant (
\begin_inset Formula $P_{0}$
\end_inset

) elements.
 One formulation common in many solid earth modelling codes is to use 
\begin_inset Formula $Q_{1}$
\end_inset

 elements for the velocity and 
\begin_inset Formula $P_{0}$
\end_inset

 elements for the pressure.
 This formulation gives rise to a checkerboard instability.
 While this instability is not always fatal, dealing with it can be difficult
 and error prone.
\end_layout

\begin_layout Standard
Previous versions of Gale did not support 
\begin_inset Formula $Q_{2}$
\end_inset

 or 
\begin_inset Formula $P_{-1}$
\end_inset

 elements, so the recommendation was to use 
\begin_inset Formula $Q_{1}$
\end_inset

 elements for both the velocity and pressure.
 This formulation has its own instability that is fixed by adding an artificial
 compressibility.
 In principle, this artificial compressibility should be small and get smaller
 as resolution increases.
 In practice, for realistic geologic problems, the artificial compressibility
 was far too large and dramatically altered the dynamics.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Thermal-Advection"

\end_inset

Thermal Advection and Diffusion
\end_layout

\begin_layout Standard
Gale uses the Stream Upwind Petrov-Galerkin (SUPG) method to solve the energy
 equation (eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:energy"

\end_inset

).
 This should normally work without any modification.
 However, if the elements in your model gets significantly distorted, you
 may see anomalously high temperature variations.
 To fix this, you can modify 
\family typewriter
supgFactor
\family default
, as detailed in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Temperature-components"

\end_inset

.
 
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Scaling"

\end_inset

Scaling
\end_layout

\begin_layout Standard
One thing to note is that Equations 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:simple momentum conservation"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:continuity"

\end_inset

 have different units.
 So, if you have a viscosity of 
\begin_inset Formula $10^{25}Pa\cdot s$
\end_inset

 and you express your viscosities in 
\begin_inset Formula $Pa\cdot s$
\end_inset

, the numbers in the two equations will be too disparate and cause the solver
 to fail.
 One workaround is to scale the units of time and mass (e.g., seconds and
 kg) so that the viscosities are around 1.
 So if the viscosities are around 
\begin_inset Formula $10^{25}$
\end_inset

, then scale time and mass as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{ccc}
s & \rightarrow & 10^{25}s,\\
kg & \rightarrow & 10^{50}kg.
\end{array}
\]

\end_inset

 This implies that a viscosity of 
\begin_inset Formula $10^{25}Pa\cdot s$
\end_inset

 becomes 1, and a velocity of 
\begin_inset Formula $10^{-11}m/s$
\end_inset

 becomes 
\begin_inset Formula $10^{14}$
\end_inset

.
 Viscosities become small and velocities become large.
\end_layout

\begin_layout Standard
Scaling it this way means that you do not have to scale the length or stresses.
 You also do not have to scale the density or gravity, since they only appear
 when multiplied by each other.
 The main things you have to change are the viscosities and velocities.
 For thermal simulations, you also have to scale the thermal diffusivity
 and heat production rate.
 If you are using the 
\family typewriter
NonNewtonian
\family default
 Rheology (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:NonNewtonian"

\end_inset

), you have to scale 
\family typewriter
A
\family default
, 
\family typewriter
refStrainRate
\family default
, 
\family typewriter
minViscosity
\family default
, and 
\family typewriter
maxViscosity
\family default
.
 For example, 
\family typewriter
A
\family default
 has units of 
\begin_inset Formula $s^{-1}Pa^{-n}$
\end_inset

, so in this case 
\begin_inset Formula $A_{new}=A_{old}10^{25}$
\end_inset

.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Uzawa-Algorithm"

\end_inset

Uzawa Algorithm
\end_layout

\begin_layout Standard
Using standard finite-element techniques, you can collect all of the terms
 together and represent them in matrix form
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\left(\begin{array}{cc}
K & G\\
G^{T} & C
\end{array}\right)\left(\begin{array}{c}
v\\
p
\end{array}\right)=\left(\begin{array}{c}
f\\
d
\end{array}\right),\label{eq:matrix form}
\end{equation}

\end_inset

where 
\begin_inset Formula $K$
\end_inset

 is a complicated submatrix depending on material properties, 
\begin_inset Formula $G$
\end_inset

 is the simple gradient operator, C is a compressibility term (if the material
 is compressible), 
\begin_inset Formula $f$
\end_inset

 is the body force (e.g., gravity), and 
\begin_inset Formula $d$
\end_inset

 is the divergence term.
 This implies the separate relations
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{array}{ccc}
Kv+Gp & = & f\\
G^{T}v+Cp & = & d
\end{array}.\label{eq:expanded matrix}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
In order to solve this, it turns out to be useful to solve a simplified
 form of
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left(G^{T}K^{-1}G\right)z=r,
\]

\end_inset

 where 
\begin_inset Formula $r$
\end_inset

 is given and 
\begin_inset Formula $z$
\end_inset

 is unknown.
 Starting from an approximate solution to this equation makes it easier
 to find a solution to the complete equation.
 The choice used in Gale is to approximate 
\begin_inset Formula $G^{T}K^{-1}G$
\end_inset

 with 
\begin_inset Formula 
\[
Q\equiv G^{T}\left[diag\left(K\right)\right]^{-1}G.
\]

\end_inset

 
\begin_inset Formula $Q$
\end_inset

 is known as a preconditioner.
 To actually solve Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:expanded matrix"

\end_inset

, we use the Uzawa algorithm 
\begin_inset CommandInset citation
LatexCommand cite
key "Uzawa"

\end_inset

.
 In particular, the steps are
\end_layout

\begin_layout Enumerate
Start with an initial guess of 
\begin_inset Formula $q_{0}$
\end_inset

 of the pressure-like variable.
\end_layout

\begin_layout Enumerate
Solve 
\begin_inset Formula $K\, u_{0}=f-Gq_{0}$
\end_inset

 for 
\begin_inset Formula $u_{0}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Calculate the residual 
\begin_inset Formula $r_{0}=G^{T}u_{0}+Cq_{0}-d$
\end_inset

.
\end_layout

\begin_layout Enumerate
do
\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

k=1
\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Solve 
\begin_inset Formula $Qz_{k-1}=r_{k-1}$
\end_inset

 for 
\begin_inset Formula $z_{k-1}$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

if k==1
\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $s_{1}=z_{0}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

else
\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $\beta=\frac{z_{k-1}^{T}r_{k-1}}{z_{k-2}^{T}r_{k-2}}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $s_{k}=r_{k-1}+\beta s_{k-1}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

end if
\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Solve 
\begin_inset Formula $Ku^{*}=Gs_{k}$
\end_inset

 for 
\begin_inset Formula $u^{*}$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $\alpha=\frac{z_{k-1}^{T}r_{k-1}}{s_{k}^{T}\left(G^{T}u^{*}-Ms_{k}\right)}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $q_{k+1}=q_{k}+\alpha s_{k}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $u_{k+1}=u_{k}-\alpha u^{*}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $r_{k}=r_{k-1}-\alpha\left(G^{T}u^{*}-Ms_{k}\right)$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

k=k+1
\end_layout

\begin_layout Enumerate
while 
\begin_inset Formula $\left(u_{k+1}-u_{k}\right)/u_{k+1}>linear\, tolerance$
\end_inset


\end_layout

\begin_layout Standard
That will give us a single solution to Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:expanded matrix"

\end_inset

 with a certain viscosity.
 However, because of yielding or strain-rate dependent rheologies, the viscosity
 will change and the solution will not be consistent.
 To make it consistent, we need to recompute the viscosities with the new
 solution for the pressure and velocity.
 Then we solve Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:expanded matrix"

\end_inset

 again using our previous solution for the pressure as a starting point.
 We continue this process until the change in the velocity is less than
 the non-linear tolerance.
\end_layout

\begin_layout Chapter
Installation and Getting Help
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Installation of Gale on a desktop or laptop machine is, in most cases, very
 easy.
 Binary packages have been created for Linux, Mac OS X, and Windows.
 Installation on other architectures or on parallel machines requires building
 the software from the source code, which can be difficult for inexperienced
 users.
 
\end_layout

\begin_layout Section
Binaries
\end_layout

\begin_layout Standard
If you do not need to run on parallel machines, the easiest way to install
 Gale is to download binaries for your platform from the Gale website 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

geodynamics.org/cig/software/packages/long/gale/
\end_layout

\end_inset

.
 Then you can run Gale from the command line or DOS prompt.
 CIG provides binaries for Linux, Mac OS X, and Windows.
\end_layout

\begin_layout Section
Building from Source
\end_layout

\begin_layout Standard
Read this only if the binaries are not sufficient for you.
 
\end_layout

\begin_layout Subsection
System Requirements
\end_layout

\begin_layout Standard
Gale works on a variety of computational platforms.
 In order to build Gale, you must have a C++ compiler and the headers and
 development libraries for
\end_layout

\begin_layout Itemize
MPI
\end_layout

\begin_layout Itemize
PETSc 3.0 (not 3.1!)
\end_layout

\begin_layout Itemize
libxml2
\end_layout

\begin_layout Itemize
HDF5
\end_layout

\begin_layout Standard
You must also have python 2.2.1 or greater installed.
 If you do not already have MPI, then in many cases PETSc can install a
 version for you.
 Installing PETSc also requires a Blas/Lapack implementation, which, again,
 PETSc can install for you.
\end_layout

\begin_layout Standard
HDF5 is not strictly required, but checkpointing and visualization will
 not work without it.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sec:Downloading-the-Code"

\end_inset

Downloading the Code
\end_layout

\begin_layout Standard
You can get the source for the latest release from the Gale website 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

geodynamics.org/cig/software/packages/long/gale/
\end_layout

\end_inset

.
 In that tarball is the file INSTALL.
 For some platforms, there are platform-specific instructions.
 Generally, the hardest part is not installing Gale itself, but PETSc.
\end_layout

\begin_layout Subsubsection
Source Code Repository (Experts Only)
\end_layout

\begin_layout Standard
Advanced users and software developers may be interested in downloading
 the latest Gale source code directly from the CIG source code repository,
 instead of using the prepared source package.
 To check whether you have a Mercurial client installed on your machine,
 type:
\end_layout

\begin_layout LyX-Code
hg
\end_layout

\begin_layout Standard
You should get a help message that starts with:
\end_layout

\begin_layout LyX-Code
Mercurial Distributed SCM
\end_layout

\begin_layout LyX-Code
...
\end_layout

\begin_layout Standard
Otherwise, you will need to download and install a Mercurial client, available
 at the Mercurial Website 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

mercurial.selenic.com
\end_layout

\end_inset

.
 Then the code can be checked out with the following commands: 
\end_layout

\begin_layout LyX-Code
hg clone http://geodynamics.org/hg/long/3D/gale gale
\end_layout

\begin_layout LyX-Code
hg clone http://geodynamics.org/hg/long/3D/gale/PICellerator gale/PICellerator
\end_layout

\begin_layout LyX-Code
hg clone http://geodynamics.org/hg/long/3D/gale/StGermain gale/StGermain
\end_layout

\begin_layout LyX-Code
hg clone http://geodynamics.org/hg/long/3D/gale/StgDomain gale/StgDomain
\end_layout

\begin_layout LyX-Code
hg clone http://geodynamics.org/hg/long/3D/gale/StgFEM gale/StgFEM 
\end_layout

\begin_layout LyX-Code
hg clone http://geodynamics.org/hg/long/3D/gale/Underworld gale/Underworld
\end_layout

\begin_layout LyX-Code
hg clone http://geodynamics.org/hg/long/3D/gale/config gale/config
\end_layout

\begin_layout LyX-Code
hg clone http://geodynamics.org/hg/long/3D/gale/gLucifer gale/gLucifer
\end_layout

\begin_layout Standard
You can then update your checkout with the commands
\end_layout

\begin_layout LyX-Code
cd gale
\end_layout

\begin_layout LyX-Code
hg pull -u
\end_layout

\begin_layout LyX-Code
cd PICellerator
\end_layout

\begin_layout LyX-Code
hg pull -u
\end_layout

\begin_layout LyX-Code
cd ../StGermain
\end_layout

\begin_layout LyX-Code
hg pull -u
\end_layout

\begin_layout LyX-Code
cd ../StgDomain
\end_layout

\begin_layout LyX-Code
hg pull -u
\end_layout

\begin_layout LyX-Code
cd ../StgFEM
\end_layout

\begin_layout LyX-Code
hg pull -u
\end_layout

\begin_layout LyX-Code
cd ../Underworld
\end_layout

\begin_layout LyX-Code
hg pull -u
\end_layout

\begin_layout LyX-Code
cd ../config
\end_layout

\begin_layout LyX-Code
hg pull -u
\end_layout

\begin_layout LyX-Code
cd ../gLucifer
\end_layout

\begin_layout LyX-Code
hg pull -u
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Section
Support
\end_layout

\begin_layout Standard
The primary point of support for Gale is the CIG Long-Term Crustal Dynamics
 Mailing List 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

cig-long@geodynamics.org
\end_layout

\end_inset

.
 Feel free to send questions, comments, feature requests, and bugs to the
 list.
 The mailing list is archived at
\end_layout

\begin_layout LyX-Code
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

geodynamics.org/pipermail/cig-long/
\end_layout

\end_inset


\end_layout

\begin_layout Standard
You may also use the bug tracker
\end_layout

\begin_layout LyX-Code
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

geodynamics.org/roundup
\end_layout

\end_inset


\end_layout

\begin_layout Standard
to submit bugs and requests for new features.
\end_layout

\begin_layout Chapter
Running Gale
\end_layout

\begin_layout Section
Basic Usage
\end_layout

\begin_layout Standard
If you downloaded binaries for your platform, you can run the Gale executable
 directly.
 For example,
\end_layout

\begin_layout LyX-Code
./Gale-2_0_1 input/cookbook/yielding.json
\end_layout

\begin_layout Standard
will output 
\end_layout

\begin_layout LyX-Code
TimeStep = 0, Time = 0
\end_layout

\begin_layout LyX-Code
TimeStep = 1, Time = 0.021503
\end_layout

\begin_layout LyX-Code
TimeStep = 2, Time = 0.0427746
\end_layout

\begin_layout LyX-Code
TimeStep = 3, Time = 0.0638247
\end_layout

\begin_layout LyX-Code
TimeStep = 4, Time = 0.0846619
\end_layout

\begin_layout LyX-Code
TimeStep = 5, Time = 0.105288
\end_layout

\begin_layout LyX-Code
TimeStep = 6, Time = 0.125705
\end_layout

\begin_layout LyX-Code
TimeStep = 7, Time = 0.145914
\end_layout

\begin_layout LyX-Code
TimeStep = 8, Time = 0.165918
\end_layout

\begin_layout LyX-Code
TimeStep = 9, Time = 0.185726
\end_layout

\begin_layout LyX-Code
TimeStep = 10, Time = 0.205284
\end_layout

\begin_layout Standard
It will also create a great deal of output in the directory 
\family typewriter
output
\family default
/.
\end_layout

\begin_layout Standard
If you do not specify an input file, you will get no output.
 If Gale cannot find the file, you will get an error:
\end_layout

\begin_layout LyX-Code

\size small
Error on line 1 at column 1
\end_layout

\begin_layout LyX-Code

\size small
	not a value
\end_layout

\begin_layout LyX-Code

\size small
Error: Could not read input file input/cookbook/foo.json.
 Exiting.
\end_layout

\begin_layout Standard
Due to quirks in some implementations of MPI, you may have to specify the
 complete path to the input file (e.g., 
\family typewriter
./Gale-2_0_1 /home/juser/gale/input/cookbook/yielding.
\family default
json).
\end_layout

\begin_layout Standard
For examples of how to create your own input files, see Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Cookbooks"

\end_inset

.
 For a complete description of the input file format, see Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Input-File-Format"

\end_inset

.
 
\end_layout

\begin_layout Standard
If you compile Gale yourself, you can run it from where you installed it.
 If running in parallel on your own machine, prepend 
\family typewriter
mpirun
\family default
 or 
\family typewriter
mpiexec
\family default
 (depending on your local implementation of MPI).
 For example, if your computer has two cores, then
\end_layout

\begin_layout LyX-Code
mpirun -np 2 bin/Gale /home/juser/gale/input/cookbook/yielding.json
\end_layout

\begin_layout Standard
will use both cores.
\end_layout

\begin_layout Section
Advanced Usage
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Yield-Fix"

\end_inset

Drucker-Prager Rheology
\end_layout

\begin_layout Standard
The Drucker-Prager rheology models a material that is rigid until the shear
 stress reaches a breaking, or yield, stress.
 Once the material yields, Gale reduces the viscosity of the material such
 that, given the strains applied to the material, the induced stress will
 now equal the yield stress.
 Unfortunately, there are two problems with this.
\end_layout

\begin_layout Enumerate
This is a numerical process, so the viscosity may be set too low.
 If the viscosity is too low, then the material will slip too easily, and
 there may be problems with numerical convergence.
\end_layout

\begin_layout Enumerate
There is no length scale inherent in this method.
 So as you increase resolution, you will get finer and finer faults.
 This would not be too much of a problem if you just got the same faults,
 but more finely resolved.
 But what happens is that you tend to get more and more faults everywhere.
 The algorithm never converges to a single answer, and so it is difficult
 to say whether any results you get are reasonable.
 Moreover, if the size of your faults is always only a few points, you may
 get a systematic error in the fault angles 
\begin_inset CommandInset citation
LatexCommand cite
key "Shear angles"

\end_inset

.
\end_layout

\begin_layout Standard
Gale has two ways of solving this problem.
 One is to just set the minimum viscosity.
 This robustly solves the first problem.
 It also, in a sense, solves the second problem.
 Consider a model problem where two blocks are sliding against each other
 as in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Two-blocks-sliding"

\end_inset

.
 If the yielding stress only depends on cohesion, then a length scale naturally
 comes out
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
L_{\eta_{min}}=\frac{\eta_{min}v}{C},
\]

\end_inset

 where 
\begin_inset Formula $\eta_{min}$
\end_inset

 is the minimum viscosity, 
\begin_inset Formula $v$
\end_inset

 is the velocity of the sliding blocks, and 
\begin_inset Formula $C$
\end_inset

 is the cohesion.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/yielding.pdf

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Two-blocks-sliding"

\end_inset

Two blocks sliding past each other with a yielding region between them.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
For a general Drucker-Prager rheology, though, the yield stress depends
 on the pressure as well.
 In that case, as you look at material deeper and deeper in the earth, where
 the pressure, and hence yield stress, is higher, then the length scale
 will get shorter and shorter.
 If you set 
\begin_inset Formula $\eta_{min}$
\end_inset

 such that, at the surface, you get a reasonable length scale for your resolutio
n, then the length scale will be much smaller and unresolved in the mantle.
\end_layout

\begin_layout Standard
So the other solution Gale provides is to set a maximum strain rate.
 It does this by looking at what the strain rate is, and making sure that
 the viscosity is not set so low such that the strain rate will exceed the
 maximum strain rate.
 This provides a length scale even more simply
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
L_{\dot{\epsilon}_{max}}=\frac{v}{\dot{\epsilon}_{max}}.
\]

\end_inset


\end_layout

\begin_layout Standard
In practice, both of these quantities may need to be set.
 A minimum viscosity may assist in taming irregularities arising from activities
 on the surface, such as landslides.
 A maximum strain rate, in the mean time, will assist in ensuring that the
 code is convergent.
\end_layout

\begin_layout Subsection
Direct Solvers
\end_layout

\begin_layout Standard
If you have a problem with strong viscosity gradients, the default solver
 (GMRES) may converge very slowly.
 Strong viscosity gradients occur when you start with materials with different
 viscosities (e.g., Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Falling-Sphere"

\end_inset

), or when materials yield.
\end_layout

\begin_layout Standard
One solution is to use a direct solver instead of GMRES.
 PETSc has a facility where you can use command-line arguments to change
 the solver.
 For example, on a single machine, to use a direct LU solve, you only need
 to append arguments to the command line
\end_layout

\begin_layout LyX-Code
./Gale-2_0_0  input/cookbook/yielding.json -pc_type lu -ksp_type preonly
\end_layout

\begin_layout Standard
In parallel, the analogous approach would be to use Mumps, a parallel direct
 solver.
 You first need to make sure that your version of PETSc was installed with
 Mumps.
 If you built PETSc yourself, you need to add the option 
\begin_inset Quotes sld
\end_inset


\family typewriter
--download-mumps=yes
\family default

\begin_inset Quotes srd
\end_inset

 when configuring.
\end_layout

\begin_layout Standard
Once that is done, enabling it is again just appending a few arguments to
 the command line
\end_layout

\begin_layout LyX-Code
./Gale-2_0_0  input/cookbook/yielding.json -pc_factor_mat_solver_package mumps
 
\backslash

\end_layout

\begin_layout LyX-Code
-ksp_type preonly -pc_type lu -mat_mumps_icntl_14 100
\end_layout

\begin_layout Standard
Note that this is different from previous versions of Gale.
 PETSc changed the syntax for calling Mumps solvers.
 Also, Mumps changed the default amount of memory it allocates.
 This is not an issue for small simulations, but larger simulations can
 easily run out of memory.
 The option 
\begin_inset Quotes sld
\end_inset


\family typewriter
-mat_mumps_icntl_14 100
\family default

\begin_inset Quotes sld
\end_inset

 tells Mumps to allocate more memory.
\end_layout

\begin_layout Subsection
Command-Line Parameters
\end_layout

\begin_layout Standard
You can also change the default values of the input file without modifying
 that file by appending arguments.
 For example, to change only the number of time steps from the default value
 of 10 to 20, use the following command
\end_layout

\begin_layout LyX-Code
./Gale-2_0_0  input/cookbook/yielding.json --maxTimeSteps=20
\end_layout

\begin_layout Standard
You can append any number of modified parameters in one unbroken line (here
 shown wrapped around)
\end_layout

\begin_layout LyX-Code

\size small
./Gale-2_0_0  input/cookbook/yielding.json --maxTimeSteps=20 --dim=3 --elementResI
=64 
\begin_inset Newline newline
\end_inset

--elementResJ=64 --elementResK=64 --particlesPerCell=60 --checkpointEvery=10
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Checkpointing"

\end_inset

Checkpointing
\end_layout

\begin_layout Standard
Gale can save the state of the simulation so that it can be restarted from
 that point.
 To save the state for every time step, add the line
\end_layout

\begin_layout LyX-Code
”checkpointEvery”: 
\begin_inset Quotes srd
\end_inset

1
\begin_inset Quotes srd
\end_inset


\end_layout

\begin_layout Standard
to the variables at the end of the input file or add
\end_layout

\begin_layout LyX-Code
--checkpointEvery=1
\end_layout

\begin_layout Standard
to the command line.
 To restart from step 5, add
\end_layout

\begin_layout LyX-Code
--restartTimestep=5
\end_layout

\begin_layout Standard
to the command line.
\end_layout

\begin_layout Standard
Not all of the example input files save and restore the temperature.
 To enable that, see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Temperature-components"

\end_inset

.
\end_layout

\begin_layout Subsection
Debugging Input Files
\end_layout

\begin_layout Standard
It can often happen that you set up an input file incorrectly and try to
 run it, but Gale never gets far enough to clearly tell you what you did
 wrong.
 The first thing you should do is to turn on verbose output as in Section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Verbosity-Options"

\end_inset

.
 That way, you can look at the residual for the linear and non-linear solvers.
 If the residuals go up and down, even after a number of iterations, then
 the solver will probably not converge.
 On the other hand, if the residuals go steadily down, you can determine
 whether you should try different input parameters or just wait longer.
\end_layout

\begin_layout Standard
Even with that, you may not know what to fix.
 For example, you may have unwittingly set the minimum viscosity for a yielding
 material to be too low.
 If the non-linear solver never converges, then you will not be able to
 see that you specified too low of a minimum viscosity.
 One way to get around this is to temporarily set the tolerance for the
 non-linear solver (
\family typewriter
nonLinearTolerance
\family default
) to be very large.
 Another way is to set the maximum number of non-linear iterations (
\family typewriter
nonLinearMaxIterations
\family default
) to be relatively small.
 Then Gale will produce output that, while it may not be a good solution
 to the Stokes equations, nevertheless gives you clues on how to fix the
 input file.
\end_layout

\begin_layout Section
Output and Visualization
\end_layout

\begin_layout Standard
The sample input files will produce a directory in which you will find a
 number of
\color none
 files.
 The easiest way to visualize results is to use the XDMF files.
 These files are in a standard, self-describing file format that can be
 easily visualized with several different visualization programs, e.g., ParaView
 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

paraview.org
\end_layout

\end_inset

 and Visit 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

www.llnl.gov/visit
\end_layout

\end_inset

.
 Visit is recommended as it is easy to get working, easy to use, and scales
 to large data sets.
\end_layout

\begin_layout Standard
XDMF visualization files are created at the same time as checkpoints.
 So to change the frequency at which Gale outputs XDMF files, change the
 parameter 
\family typewriter
checkpointEvery
\family default
.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Basic Visualization with Visit
\begin_inset CommandInset label
LatexCommand label
name "sub:Visualization-with-Visit"

\end_inset


\end_layout

\begin_layout Standard

\color none
These instructions are for Visit version 2.3.2.
 To visualize the output of 
\family typewriter
input/cookbook/yielding.json
\family default
, 
\end_layout

\begin_layout Enumerate

\color none
Start Visit and open a new data file: 
\family sans
File
\family default
 
\begin_inset Formula $\triangleright$
\end_inset

 
\family sans
Open
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center

\color none
\begin_inset Graphics
	filename images/Visit_open_data.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
A file dialog screen will appear.
 Navigate to the output directory.
 Visit will automatically group similar files together.
 Select the 
\family typewriter
XDMF
\family default
 files.
 
\color none
Now click the 
\family typewriter
\series bold
\color inherit
Add
\family default
\series default
\color none
 button under 
\family typewriter
\series bold
\color inherit
Plots
\family default
\series default
\color none
.
 Select 
\family typewriter
\series bold
\color inherit
Pseudocolor
\family default
\series default
\color none
, then 
\family typewriter
\series bold
\color inherit
FEM_Grid_v-mesh
\family default
\series default
\color none
, then 
\family typewriter
\series bold
\color inherit
StrainRateInvariantField
\family default
\series default
\color none
.
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\color none
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center

\color none
\begin_inset Graphics
	filename images/Visit_add.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Now click on 
\family typewriter
\series bold
Draw
\family default
\series default
 and you will get a picture of the StrainRateInvariant at the first time
 step.
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\color none
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center

\color none
\begin_inset Graphics
	filename images/Visit_strainrate.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
You can plot the pressure by clicking again on the 
\family typewriter
\series bold
Add
\family default
\series default
\color none
 button, selecting 
\family typewriter
\series bold
\color inherit
Pseudocolor
\family default
\series default
\color none
, then 
\family typewriter
\series bold
\color inherit
FEM_Grid_pressure-mesh
\family default
\series default
\color none
, then 
\family typewriter
\series bold
\color inherit
PressureField
\family default
\series default
\color none
.
 Finally, click on 
\family typewriter
\series bold
\color inherit
Draw
\family default
\series default
\color none
.
 The resolution is rather low, so the pressure solution is very rough.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Visit_pressure.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\color none

\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Now you can plot the velocity as arrows on top of the pressure: Click on
 the 
\family typewriter
\series bold
Add
\family default
\series default
 button, select 
\family typewriter
\series bold
Vector
\family default
\series default
, then 
\family typewriter
\series bold
FEM_Grid_v-mesh
\family default
\series default
, then 
\family typewriter
\series bold
VelocityField
\family default
\series default
.
 Press 
\family typewriter
\series bold
Draw
\family default
\series default
 and you will see the velocity arrows colored by the velocity magnitude.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Visit_velocity.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\color none

\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
You can temporarily hide the pressure by clicking on 
\family typewriter
\series bold
Pseudocolor - FEM_Grid_pressure-mesh/PressureField
\family default
\series default
 and then clicking on the 
\family typewriter
\series bold
Hide/Show
\family default
\series default
 button.
 Repeat this with 
\family typewriter
\series bold
Pseudocolor - FEM_Grid_v-mesh/StrainRateField
\family default
\series default
 to see a clearer view of the velocity arrows.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center

\color none
\begin_inset Graphics
	filename images/Visit_v_arrows.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\color none

\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
To change the color of the arrows, click on the 
\family typewriter
\series bold
PlotAtts
\family default
\series default
 menu item near the top.
 Select 
\family typewriter
\series bold
Vector
\family default
\series default
 in the drop down menu.
 This will bring up a new 
\family typewriter
\series bold
Vector plot attributes
\family default
\series default
 window.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center

\color none
\begin_inset Graphics
	filename images/Visit_vector_plotatt.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\color none

\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left
Click on the 
\family typewriter
\series bold
Rendering
\family default
\series default
 tab at the top.
 Under the 
\family typewriter
\series bold
Color
\family default
\series default
 section, select 
\family typewriter
\series bold
Constant
\family default
\series default
.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center

\color none
\begin_inset Graphics
	filename images/Visit_vector_color.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\color none

\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left
Click on 
\family typewriter
\series bold
Apply
\family default
\series default
 to apply the changes, then 
\family typewriter
\series bold
Dismiss
\family default
\series default
 to get rid of the 
\family typewriter
\series bold
Vector plot attributes
\family default
\series default
 window.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center

\color none
\begin_inset Graphics
	filename images/Visit_v_black.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\color none

\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Now you can look at the particles.
 Hide the velocity arrows by clicking on 
\family typewriter
\series bold
Vector - FEM_Grid_v-mesh/VelocityField
\family default
\series default
 and then the 
\family typewriter
\series bold
Hide/Show
\family default
\series default
 button.
 Click the 
\family typewriter
\series bold
Add
\family default
\series default
 button, select 
\family typewriter
\series bold
Pseudocolor
\family default
\series default
, then 
\family typewriter
\series bold
materialSwarm
\family default
\series default
, then 
\family typewriter
\series bold
materialSwarm-Viscosity
\family default
\series default
.
 As before, finish by clicking the 
\family typewriter
\series bold
Draw
\family default
\series default
 button.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center

\color none
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center

\color none
\begin_inset Graphics
	filename images/Visit_small_viscosity.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\color none
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
The particles are a bit small to see.
 To increase their size, start by clicking on the 
\family typewriter
\series bold
PlotAtts
\family default
\series default
 menu item and selecting 
\family typewriter
\series bold
Pseudocolor
\family default
\series default
.
 This brings up the 
\family typewriter
\series bold
Pseudocolor plot attributes
\family default
\series default
 window.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Visit_plot_attributes.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\color none

\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
Change 
\family typewriter
\series bold
Point size
\family default
\series default
 to 5, press 
\family typewriter
\series bold
Apply
\family default
\series default
 and then 
\family typewriter
\series bold
Dismiss
\family default
\series default
 to get a view with larger particles.
 
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Visit_big_viscosity.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent

\color none
This displays the viscosity of the particles.
 The red points represent the high viscosity ball, while the blue points
 represent material that has yielded.

\color inherit
 You can animate the view by pressing the arrow button 
\begin_inset Graphics
	filename images/Visit_movie_button.png

\end_inset

.
\color none

\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Now we will visualize a 3D simulation.
 First delete all of the existing plots by clicking the 
\family typewriter
\series bold
Delete
\family default
\series default
 button until they are all gone.
 Then click the 
\family typewriter
\series bold
Close
\family default
\series default
 button to get rid of the 2D plots.
 Run Gale with the input file 
\family typewriter
input/cookbook/extension3D.json
\family default
 and open the XDMF files.
 As with the 2D input, add the strain rate invariant and click 
\family typewriter
\series bold
Draw
\family default
\series default
.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Visit_3D.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
Press and hold button 1 on your mouse to rotate the figure.
 Hold button 1 and the Control or Shift key to translate.
 Hold button 3 or use the mouse wheel to zoom in and out.
 To reset the view, press button 2 to bring up the context menu and select
 
\family typewriter
\series bold
Reset View
\family default
\series default
.
\end_layout

\end_deeper
\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Gauging-Accuracy"

\end_inset

Gauging Accuracy
\end_layout

\begin_layout Standard
Gale makes a number of approximations.
 Before trusting any results you get from Gale, you must vary a number of
 parameters to ensure that the results are not an artifact of Gale's approximati
ons.
\end_layout

\begin_layout Standard
The most obvious parameter to vary is the mesh resolution.
 The grid is where the Stokes equations are solved, and defines the resolution
 of everything defined on a mesh (e.g., velocity, pressure, strain rate, etc.).
 The resolution of the grid is determined by 
\family typewriter
nx
\family default
, 
\family typewriter
ny
\family default
, and 
\family typewriter
nz
\family default
.
\end_layout

\begin_layout Standard
But sometimes the mesh resolution is not the principal source of error.
 For example, for the 2D Divergence benchmark (Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Divergence"

\end_inset

), the principal source of error is the tolerance in the linear solver.
 This is because the solution can be represented exactly on even a tiny
 grid, so the determining factor is just how well the equations are solved
 on the mesh.
 To vary the tolerance for the linear solve, change the parameter 
\family typewriter
linearTolerance
\family default
.
\end_layout

\begin_layout Standard
Similarly, the tolerance for the non-linear solve may determine the overall
 error.
 You can set that tolerance with the parameter 
\family typewriter
nonLinearTolerance
\family default
.
 However, the solver can still initially settle on a wrong solution.
 Then, after many iterations, it may find the correct solution.
 To enforce this, you can set 
\family typewriter
nonLinearMinIterations
\family default
 and the solver will keep iterating even if it thinks it has already found
 a solution.
\end_layout

\begin_layout Standard
It is also possible that the number of particles determines the error.
 There is a more or less constant number of particles per mesh element.
 If you have a smooth velocity field, but a complex particle properties
 field, you may need more particles for each element.
 To set the particle resolution, change the parameter 
\family typewriter
particlesPerCell
\family default
.
\end_layout

\begin_layout Standard
When using a yielding rheology, you should vary 
\family typewriter
minimumViscosity
\family default
 and 
\family typewriter
maxStrainRate
\family default
 (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Yield-Fix"

\end_inset

).
\end_layout

\begin_layout Standard
For some problems where you are comparing against a solution over an infinite
 domain (e.g.
 Sections 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Falling-Sphere"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Relaxation-of-Topography"

\end_inset

), then you may need to vary the size of the box (
\family typewriter
minX
\family default
, 
\family typewriter
minY
\family default
, 
\family typewriter
minZ
\family default
, 
\family typewriter
maxX
\family default
, 
\family typewriter
maxY
\family default
, 
\family typewriter
maxZ
\family default
).
 Finally, you may need to vary the scaling factor for time steps (
\family typewriter
dtFactor
\family default
) (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Variables"

\end_inset

).
\end_layout

\begin_layout Standard
How much to vary the various parameters depends upon each parameter.
 For some parameters, such as the resolution, changing it by a factor of
 two is often good enough to tell whether your error depends on resolution.
 For others, such as the tolerance for the solver, you may want to vary
 it by a factor of ten.
\end_layout

\begin_layout Chapter
Cookbooks
\begin_inset CommandInset label
LatexCommand label
name "cha:Cookbooks"

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
In this chapter, you will edit a template file (
\family typewriter
input/cookbook/template.
\family default
json) to create a series of input files.
 The template file is in JSON format (
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://json.org
\end_layout

\end_inset

).
 JSON is a lightweight data-interchange format that is easy for humans and
 machines to read and write.
\end_layout

\begin_layout Subsection
Adding Lines to the Template File
\end_layout

\begin_layout Standard
Unless otherwise specified, when you are instructed to add components to
 the input file
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
To copy and paste from this PDF with Adobe Acrobat, right click to get the
 context menu and select ``Allow Hand Tool to Select Text.''
\end_layout

\end_inset

, that text should be added after the lines
\end_layout

\begin_layout LyX-Code
”components”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout Standard
at the beginning of the file, and before the matching brace just before
 
\family typewriter

\begin_inset Quotes sld
\end_inset

velocityBCs
\begin_inset Quotes srd
\end_inset


\family default
.
\end_layout

\begin_layout Standard
All items are separated by commas 
\begin_inset Quotes sld
\end_inset

,
\begin_inset Quotes srd
\end_inset

.
 So if you are adding something to the end of a section, you will have to
 add a comma after the last item before adding your item.
 If you delete an item at the end, you must also delete the trailing comma.
 It is very easy to forget to add or delete a comma.
 If you do so, Gale should give you an error telling you what line the error
 is on.
\end_layout

\begin_layout Standard
The template file is indented to make it easier to for you to understand.
 This is solely for your benefit.
 Gale does not pay attention to indentation when reading the files.
 You may also add comments with a syntax like
\end_layout

\begin_layout LyX-Code
// This is a comment
\end_layout

\begin_layout Standard
Everything on the line following '
\family typewriter
//
\family default
' will be ignored.
\end_layout

\begin_layout Subsection
Adding Variables to the Template File
\end_layout

\begin_layout Standard
When you are instructed to add a variable, add it at the end of the file
 before the closing bracket.
 As with components, if you add a variable at the end, you must first add
 a comma and then add the new item.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Viscous-Material"

\end_inset

Viscous Material
\end_layout

\begin_layout Standard
This example simply fills up the computational domain with a single viscous
 material.
 It is a valid input file, but it is not very interesting as nothing is
 moving.
 This file mainly serves as the basis for subsequent examples.
\end_layout

\begin_layout Enumerate
First, copy 
\family typewriter
template.json
\family default
 to 
\family typewriter
myviscous.json
\family default
 to edit as follows.
 
\end_layout

\begin_layout Enumerate
Add in a material.
 The simplest variety is a purely viscous material, so add a shape covering
 the whole domain:
\end_layout

\begin_deeper
\begin_layout LyX-Code
,
\end_layout

\begin_layout LyX-Code
”backgroundShape”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”EquationShape”,
\end_layout

\begin_layout LyX-Code
    ”equation”: ”1”
\end_layout

\begin_layout LyX-Code
},
\end_layout

\begin_layout Standard

\family typewriter
EquationShape
\family default
 defines a shape to be wherever 
\family typewriter
equation
\family default
>=0.
 Since 
\family typewriter
equation
\family default
=1, that is true everywhere.
 Notice that we added a comma before 
\family typewriter
backgroundShape
\family default
.
 In anticipation of more items, we also added a comma after the closing
 brace of 
\family typewriter
backgroundShape
\family default
.
\end_layout

\end_deeper
\begin_layout Enumerate
Then set the material's viscosity
\end_layout

\begin_deeper
\begin_layout LyX-Code
”backgroundViscosity”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”MaterialViscosity”,
\end_layout

\begin_layout LyX-Code
    ”eta0”: ”1.0”
\end_layout

\begin_layout LyX-Code
},
\end_layout

\begin_layout Standard
Remember that Gale has no internal knowledge of units, so if you think of
 everything in cgs, then this implies a viscosity of 
\begin_inset Formula $1\frac{g}{cm\, s}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
Finally, create the material using the components just created.
\end_layout

\begin_deeper
\begin_layout LyX-Code
”viscous”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”RheologyMaterial”,
\end_layout

\begin_layout LyX-Code
    ”Shape”: ”backgroundShape”,
\end_layout

\begin_layout LyX-Code
    ”density”: ”1.0”,
\end_layout

\begin_layout LyX-Code
    ”Rheology”: [
\end_layout

\begin_layout LyX-Code
        ”backgroundViscosity”,
\end_layout

\begin_layout LyX-Code
        ”storeViscosity”,
\end_layout

\begin_layout LyX-Code
        ”storeStress”
\end_layout

\begin_layout LyX-Code
    ]
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
The 
\family typewriter
storeViscosity
\family default
 and 
\family typewriter
storeStress
\family default
 parameters are standard components that enable you to get the viscosity
 and stress information on each particle.
\end_layout

\end_deeper
\begin_layout Standard
You can compare your result with the worked example in the file 
\family typewriter
input/cookbook/viscous.json
\family default
.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Viscous-Material-in"

\end_inset

Viscous Material in Simple Extension
\end_layout

\begin_layout Standard
The input file you created in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Viscous-Material"

\end_inset

 is valid, but nothing moves.
 In this example, you will make the material extend by having the right
 boundary move.
\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
myviscous.json
\family default
 to 
\family typewriter
myextension.json
\family default
.
\end_layout

\begin_layout Enumerate
Make the right boundary move by changing the line after this section
\end_layout

\begin_deeper
\begin_layout LyX-Code
”type”: ”WallVC”,
\end_layout

\begin_layout LyX-Code
”wall”: ”right”,
\end_layout

\begin_layout LyX-Code
”variables”: [
\end_layout

\begin_layout LyX-Code
  {
\end_layout

\begin_layout LyX-Code
    ”name”: ”vx”,
\end_layout

\begin_layout Standard
from
\end_layout

\begin_layout LyX-Code
”value”: ”0”
\end_layout

\begin_layout Standard
to
\end_layout

\begin_layout LyX-Code
”value”: ”1.0”
\end_layout

\begin_layout Quote

\series bold
\color red
Warning:
\series default
\color none
 There are several 
\family typewriter
WallVC
\family default
 structs: 
\family typewriter
left
\family default
, 
\family typewriter
right
\family default
, 
\family typewriter
top
\family default
 and 
\family typewriter
bottom
\family default
.
 Here we have only modified the 
\family typewriter
right
\family default
 side.
\end_layout

\end_deeper
\begin_layout Standard
A worked example is at 
\family typewriter
input/cookbook/extension.json
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-viscous-extension"

\end_inset

 shows the strain rate invariant and velocity (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Visualization-with-Visit"

\end_inset

).
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/cookbook_viscous_extension.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-viscous-extension"

\end_inset

Strain rate invariant and velocity of viscous material in extension
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Viscous Material with Complex Boundaries
\end_layout

\begin_layout Standard
Another exercise is to make the bottom boundary move differently, and not
 just have the material slide along.
 In particular, this example will simulate a box like in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Split-Boundary"

\end_inset

, where the bottom right side of the box moves, but the viscous material
 sticks to the bottom left.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/splitwall.eps
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Split-Boundary"

\end_inset

Split Boundary
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
First, copy 
\family typewriter
myextension.json
\family default
 to 
\family typewriter
mysplit.json
\end_layout

\begin_layout Enumerate
Modify the bottom boundary condition of WallVC to
\end_layout

\begin_deeper
\begin_layout LyX-Code
”type”: ”WallVC”,
\end_layout

\begin_layout LyX-Code
”wall”: ”bottom”,
\end_layout

\begin_layout LyX-Code
”variables”: [
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
        ”name”: ”vx”,
\end_layout

\begin_layout LyX-Code
        ”value”: ”step(x-1)”
\end_layout

\begin_layout LyX-Code
    },
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
        ”name”: ”vy”,
\end_layout

\begin_layout LyX-Code
        ”value”: ”0.0”
\end_layout

\begin_layout LyX-Code
    }
\end_layout

\begin_layout LyX-Code
]
\end_layout

\end_deeper
\begin_layout Standard
A worked example is in the file 
\family typewriter
input/cookbook/split.json
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-complex"

\end_inset

 shows the strain rate invariant and velocity (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Visualization-with-Visit"

\end_inset

).
 The strain rate is concentrated around the step function in the bottom
 velocity boundary.
 Notice the development of a basin above the discontinuity.
 The ability to track the development of topography on the free surfaces
 is one of the strengths of Gale.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/cookbook_viscous_split.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-complex"

\end_inset

Strain rate invariant and velocity with complex boundaries
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Viscous Material with Boundary Conditions Read From a File
\end_layout

\begin_layout Standard
You may want to specify custom boundary conditions that are not already
 implemented.
 For this, you can set boundary conditions using date from a file.
 For this example, we will replace the sharp step function with an smoother
 approximation.
 The data is in the file 
\family typewriter
input/cookbook/velocities
\family default
.
 To get Gale to use it:
\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
myextension.json
\family default
 to 
\family typewriter
myfile.json
\end_layout

\begin_layout Enumerate
Modify the bottom boundary condition of WallVC to
\end_layout

\begin_deeper
\begin_layout LyX-Code
”type”: ”WallVC”,
\end_layout

\begin_layout LyX-Code
”wall”: ”bottom”,
\end_layout

\begin_layout LyX-Code
”variables”: [
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
        ”name”: ”vx”,
\end_layout

\begin_layout LyX-Code
        ”type”: ”func”,
\end_layout

\begin_layout LyX-Code
        ”value”: ”File1”
\end_layout

\begin_layout LyX-Code
    },
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
        ”name”: ”vy”,
\end_layout

\begin_layout LyX-Code
        ”value”: ”0”
\end_layout

\begin_layout LyX-Code
    }
\end_layout

\begin_layout LyX-Code
]
\end_layout

\end_deeper
\begin_layout Enumerate
Specify the particulars of the file by adding the variables
\end_layout

\begin_deeper
\begin_layout LyX-Code
,”File1_Name”: ”input/cookbook/velocities”,
\end_layout

\begin_layout LyX-Code
”File1_Dim”: ”0”,
\end_layout

\begin_layout LyX-Code
”File1_N”: ”102”
\end_layout

\begin_layout Standard
to the end of the file (just before the last bracket 
\begin_inset Quotes sld
\end_inset


\family typewriter
}
\family default

\begin_inset Quotes srd
\end_inset

).
 
\end_layout

\end_deeper
\begin_layout Standard
There is a fully worked out example in 
\family typewriter
input/cookbook/file.json
\family default
.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/cookbook_viscous_file.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-file"

\end_inset

Strain rate invariant and velocity with boundary conditions read from a
 file
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Viscous-In-Outflow"

\end_inset

Viscous Material with Inflow/Outflow Boundaries
\end_layout

\begin_layout Standard
This example implements a different kind of boundary condition, where material
 flows in one side and out another as in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Inflow/Outflow-Boundary"

\end_inset

.
 The current example is not intended to be geologically realistic in any
 sense, but is meant to illustrate the flexibility we have in the development
 of complex boundary conditions.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/inflow.eps
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Inflow/Outflow-Boundary"

\end_inset

Inflow/Outflow Boundary
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Copy the file 
\family typewriter
myviscous.json
\family default
 that you created in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Viscous-Material"

\end_inset

 to 
\family typewriter
myinflow_outflow.json
\family default
.
 
\end_layout

\begin_layout Enumerate
Then, add the following lines after the 
\family typewriter
wrapTop
\family default
 line so that Gale keeps the left and bottom sides fixed:
\end_layout

\begin_deeper
\begin_layout LyX-Code
,”staticLeft” : ”True”,
\end_layout

\begin_layout LyX-Code
\begin_inset Quotes sld
\end_inset

staticBottom” : ”True”
\end_layout

\end_deeper
\begin_layout Enumerate
Now specify the velocity on the boundaries.
 For the left boundary, modify the left 
\family typewriter
WallVC
\family default
 to
\end_layout

\begin_deeper
\begin_layout LyX-Code
”type”: ”WallVC”,
\end_layout

\begin_layout LyX-Code
”wall”: ”left”,
\end_layout

\begin_layout LyX-Code
”variables”: [
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
        ”name”: ”vx”,
\end_layout

\begin_layout LyX-Code
        ”value”: ”step(y-0.1)*step(0.2-y)”
\end_layout

\begin_layout LyX-Code
    }
\end_layout

\begin_layout LyX-Code
]
\end_layout

\end_deeper
\begin_layout Enumerate
For the bottom boundary, modify the bottom 
\family typewriter
WallVC
\family default
 to
\end_layout

\begin_deeper
\begin_layout LyX-Code
”type”: ”WallVC”,
\end_layout

\begin_layout LyX-Code
”wall”: ”bottom”,
\end_layout

\begin_layout LyX-Code
”variables”: [
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
        ”name”: ”vx”,
\end_layout

\begin_layout LyX-Code
        ”value”: ”step(x-0.9)*step(1.1-x)”
\end_layout

\begin_layout LyX-Code
    },
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
        ”name”: ”vy”,
\end_layout

\begin_layout LyX-Code
        ”value”: ”-step(x-0.9)*step(1.1-x)”
\end_layout

\begin_layout LyX-Code
    }
\end_layout

\begin_layout LyX-Code
]
\end_layout

\end_deeper
\begin_layout Standard
A worked example is in the file 
\family typewriter
input/cookbook/inflow_outflow.json
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-inflow"

\end_inset

 shows the strain rate invariant and velocity.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/cookbook_viscous_inflow.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-inflow"

\end_inset

Strain rate invariant and velocity with inflow/outflow boundaries
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Viscous Material in Extension with Normal Stress Boundaries
\end_layout

\begin_layout Standard
This example modifies the extension example in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Viscous-Material-in"

\end_inset

 to use a stress boundary normal to the bottom surface, instead of specifying
 the velocity.
 A normal stress boundary condition simulates the effect of material below
 the material pushing up, supporting the material in the box.
 Then, when material piles up, gravity forces will overcome the stress boundary
 and flow out of the simulation.
 Conversely, if material is thinned out, the stress boundary will push new
 material into the simulation.
 This kind of boundary is often more relevant for geological simulations.
\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
myextension.json
\family default
 to 
\family typewriter
mynormal_stress.json
\end_layout

\begin_layout Enumerate
Remove the current bottom boundary condition by removing the lines
\end_layout

\begin_deeper
\begin_layout LyX-Code
},
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
  ”type”: ”WallVC”,
\end_layout

\begin_layout LyX-Code
  ”wall”: ”bottom”,
\end_layout

\begin_layout LyX-Code
  ”variables”: [
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
        ”name”: ”vy”,
\end_layout

\begin_layout LyX-Code
        ”value”: ”0”
\end_layout

\begin_layout LyX-Code
    }
\end_layout

\begin_layout LyX-Code
  ]
\end_layout

\begin_layout Standard
Notice that we removed the preceding bracket with comma 
\begin_inset Quotes sld
\end_inset


\family typewriter
},
\family default

\begin_inset Quotes srd
\end_inset

 and left the trailing bracket 
\begin_inset Quotes sld
\end_inset


\family typewriter
}
\family default

\begin_inset Quotes srd
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
Add in a StressBC component
\end_layout

\begin_deeper
\begin_layout LyX-Code
,”stressBC”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”StressBC”,
\end_layout

\begin_layout LyX-Code
    ”ForceVector”: ”mom_force”,
\end_layout

\begin_layout LyX-Code
    ”wall”: ”bottom”,
\end_layout

\begin_layout LyX-Code
    ”normal_value”: ”0.35-y”
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
This force emulates a hydrostatic pressure which increases with depth.
 The height of the material above 
\begin_inset Formula $y=0$
\end_inset

 is 0.35, and the density of the material is 1, so the stress needed to counterac
t gravity is 
\begin_inset Formula $0.35-y$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
The bottom essentially becomes an inflow/outflow boundary, so you need to
 prevent the bottom from moving by adding after
\end_layout

\begin_deeper
\begin_layout LyX-Code
”systems”: [
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
        ”mesh”: ”v-mesh”,
\end_layout

\begin_layout LyX-Code
        ”p-mesh”: ”p-mesh”,
\end_layout

\begin_layout LyX-Code
        ”remesher”: ”velocityRemesher”,
\end_layout

\begin_layout LyX-Code
        ”velocityField”: ”VelocityField”,
\end_layout

\begin_layout LyX-Code
        ”wrapTop”: ”True”
\end_layout

\begin_layout Standard
the line
\end_layout

\begin_layout LyX-Code
,”staticBottom”: ”True”
\end_layout

\end_deeper
\begin_layout Enumerate
When you deleted the bottom boundary condition, the vertical velocity became
 unspecified.
 Recall that the momentum equation (Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:simple momentum conservation"

\end_inset

) only depends on the derivative of the velocity.
 So stress boundary conditions cannot set the overall magnitude of the velocity.
 To fix this, you can fix the material to the sides of the simulation.
 You do this by adding
\end_layout

\begin_deeper
\begin_layout LyX-Code
,{
\end_layout

\begin_layout LyX-Code
  ”name”: ”vy”,
\end_layout

\begin_layout LyX-Code
  ”value”: ”0.0”
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
in two places: after
\end_layout

\begin_layout LyX-Code
”type”: ”WallVC”,
\end_layout

\begin_layout LyX-Code
”wall”: ”left”,
\end_layout

\begin_layout LyX-Code
”variables”: [
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
        ”name”: ”vx”,
\end_layout

\begin_layout LyX-Code
        ”value”: ”0.0”
\end_layout

\begin_layout LyX-Code
    },
\end_layout

\begin_layout Standard
and after
\end_layout

\begin_layout LyX-Code
”type”: ”WallVC”,
\end_layout

\begin_layout LyX-Code
”wall”: ”right”,
\end_layout

\begin_layout LyX-Code
”variables”: [
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
        ”name”: ”vx”,
\end_layout

\begin_layout LyX-Code
        ”value”: ”1.0”
\end_layout

\begin_layout LyX-Code
    },
\end_layout

\end_deeper
\begin_layout Standard
A worked example is at 
\family typewriter
input/cookbook/normal_stress.json
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-viscous-normal-stress"

\end_inset

 shows the strain rate invariant and velocity.
 Notice that material is now flowing in from the bottom.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/cookbook_normal_stress.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-viscous-normal-stress"

\end_inset

Strain rate invariant and velocity of viscous material in extension with
 a normal stress boundary
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Viscous Material with Deformable Bottom Boundary
\end_layout

\begin_layout Standard
The previous example can be modified so that, instead of having material
 flow through the bottom boundary, the boundary itself deforms.
 You can do this by changing the one line
\end_layout

\begin_layout LyX-Code
”staticBottom”: ”True”
\end_layout

\begin_layout Standard
to
\end_layout

\begin_layout LyX-Code
”wrapBottom”: ”True”
\end_layout

\begin_layout Standard
A worked example is in 
\family typewriter
input/cookbook/deforming_bottom.json
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-deformable-bottom"

\end_inset

 shows the strain rate invariant and velocity.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/cookbook_bottom.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-deformable-bottom"

\end_inset

Strain rate invariant and velocity of viscous material with a deformable
 bottom boundary
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Viscous-Material-with"

\end_inset

Viscous Material with Initially Deformed Upper Boundary
\end_layout

\begin_layout Standard
All of the previous examples are set up as a regular rectangular box.
 However, Gale can also start with the top initially deformed, such as if
 we had a mountain range with substantial topography.
 This example will make it sinusoidal as in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sinusoidal-Top"

\end_inset

.
 This example has no moving boundaries, so the material will simply relax.
 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/sinusoid.eps
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Sinusoidal-Top"

\end_inset

Sinusoidal Top
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
myviscous.json
\family default
 to 
\family typewriter
mysinusoid.json
\family default
.
 
\end_layout

\begin_layout Enumerate
Add a 
\family typewriter
SurfaceAdaptor
\family default
 component:
\end_layout

\begin_deeper
\begin_layout LyX-Code
,”surfaceAdaptor”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”SurfaceAdaptor”,
\end_layout

\begin_layout LyX-Code
    ”mesh”:”v-mesh”,
\end_layout

\begin_layout LyX-Code
    ”sourceGenerator”: ”v-mesh-generator”,
\end_layout

\begin_layout LyX-Code
    ”topEquation”: ”0.1*sin(2*pi*x)”
\end_layout

\begin_layout LyX-Code
}
\end_layout

\end_deeper
\begin_layout Standard
A worked example is in 
\family typewriter
input/cookbook/sinusoid.json
\family default
.
 Figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-initial-deformed"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-final-deformed"

\end_inset

 shows the strain rate invariant and velocity (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Visualization-with-Visit"

\end_inset

) at the beginning and after the tenth timestep.
 Note that the material has flattened out and the magnitude of the velocity
 and strainrate has reduced considerably.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/cookbook_viscous_sinusoid_initial.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-initial-deformed"

\end_inset

Strain rate invariant and velocity with initially deformed upper boundary
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/cookbook_viscous_sinusoid.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-final-deformed"

\end_inset

Strain rate invariant and velocity with initially deformed upper boundary
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Viscous Material with Fixed, Deformed Bottom Boundary
\end_layout

\begin_layout Standard
This example deforms the bottom boundary and keeps it fixed.
 We will set the left half of the boundary to follow a circle, while the
 right half will still be flat.
 Then, the boundary condition for the velocity is set to move the material
 in from the left and out through the bottom as in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Geometry-deformed-bottom"

\end_inset

.
 This is meant to approximate one slab subducting under another.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/deformed_bottom.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Geometry-deformed-bottom"

\end_inset

Geometry and boundary conditions for the fixed, deformed bottom boundary
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
myinflow_outflow.json
\family default
 to 
\family typewriter
myfixed_bottom.json
\end_layout

\begin_layout Enumerate
Add a 
\family typewriter
SurfaceAdaptor
\family default
 component for the bottom boundary:
\end_layout

\begin_deeper
\begin_layout LyX-Code
,”surfaceAdaptor”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”SurfaceAdaptor”,
\end_layout

\begin_layout LyX-Code
    ”mesh”: ”v-mesh”,
\end_layout

\begin_layout LyX-Code
    ”sourceGenerator”: ”v-mesh-generator”,
\end_layout

\begin_layout LyX-Code
    ”bottomEquation”: ”step(0.960468635615-x)*(-3 + sqrt(3.15*3.15 - x*x))”
\end_layout

\begin_layout LyX-Code
}
\end_layout

\end_deeper
\begin_layout Enumerate
In the boundary conditions, replace
\end_layout

\begin_deeper
\begin_layout LyX-Code
”value”: ”step(y-0.1)*step(0.2-y)”
\end_layout

\begin_layout Standard
with
\end_layout

\begin_layout LyX-Code
”value”: ”r=hypot(x,y+3), step(3.35-r)*(y+3)”
\end_layout

\begin_layout Standard
and replace
\end_layout

\begin_layout LyX-Code
”type”: ”WallVC”,
\end_layout

\begin_layout LyX-Code
”wall”: ”bottom”,
\end_layout

\begin_layout LyX-Code
”variables”: [
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
        ”name”: ”vx”,
\end_layout

\begin_layout LyX-Code
        ”value”: ”step(x-0.9)*step(1.1-x)”
\end_layout

\begin_layout LyX-Code
    },
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
        ”name”: ”vy”,
\end_layout

\begin_layout LyX-Code
        ”value”: ”-step(x-0.9)*step(1.1-x)”
\end_layout

\begin_layout LyX-Code
    }
\end_layout

\begin_layout LyX-Code
]
\end_layout

\begin_layout Standard
with
\end_layout

\begin_layout LyX-Code
”type”: ”WallVC”,
\end_layout

\begin_layout LyX-Code
”wall”: ”bottom”,
\end_layout

\begin_layout LyX-Code
”variables”: [
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
        ”name”: ”vx”,
\end_layout

\begin_layout LyX-Code
        ”value”: ”r=hypot(x,y+3), step(3.35-r)*(y+3)”
\end_layout

\begin_layout LyX-Code
    },
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
        ”name”: ”vy”,
\end_layout

\begin_layout LyX-Code
        ”value”: ”r=hypot(x,y+3), -step(3.35-r)*x”
\end_layout

\begin_layout LyX-Code
    }
\end_layout

\begin_layout LyX-Code
]
\end_layout

\end_deeper
\begin_layout Enumerate
Ensure that the height of the incoming material remains fixed by adding
\end_layout

\begin_deeper
\begin_layout LyX-Code
”staticLeftTop” : ”True”,
\end_layout

\begin_layout Standard
in the 
\family typewriter
EulerDeform
\family default
 struct, right after
\end_layout

\begin_layout LyX-Code
”staticLeft” : ”True”,
\end_layout

\end_deeper
\begin_layout LyX-Code

\end_layout

\begin_layout Standard
A worked example is in 
\family typewriter
input/cookbook/fixed_bottom.json
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-deformed-bottom"

\end_inset

 shows the strain rate invariant and velocity.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/cookbook_deformed_bottom.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-deformed-bottom"

\end_inset

Strain rate invariant and velocity for a deformed bottom boundary
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Extension-in-3D"

\end_inset

Extension in 3D with topography
\end_layout

\begin_layout Standard
This example extends the simulation into 3D, adding initial topography and
 a deformed bottom.
\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
myextension.json
\family default
 to 
\family typewriter
myextension3D.json
\family default
.
\end_layout

\begin_layout Enumerate
Add a SurfaceAdaptor component
\end_layout

\begin_deeper
\begin_layout LyX-Code
,"surfaceAdaptor":
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    "Type": "SurfaceAdaptor",
\end_layout

\begin_layout LyX-Code
    "mesh":"v-mesh",
\end_layout

\begin_layout LyX-Code
    "sourceGenerator": "v-mesh-generator",
\end_layout

\begin_layout LyX-Code
    "topSurfaceType": "topo_data",
\end_layout

\begin_layout LyX-Code
    "topSurfaceName": "input/cookbook/test.topo",
\end_layout

\begin_layout LyX-Code
    "topNx": "32",
\end_layout

\begin_layout LyX-Code
    "topNz": "12",
\end_layout

\begin_layout LyX-Code
    "topMinX": "minX",
\end_layout

\begin_layout LyX-Code
    "topMaxX": "maxX",
\end_layout

\begin_layout LyX-Code
    "topMinZ": "minZ",
\end_layout

\begin_layout LyX-Code
    "topMaxZ": "maxZ",
\end_layout

\begin_layout LyX-Code
    
\end_layout

\begin_layout LyX-Code
    "bottomEquation": "x<1 ? -0.1*x : -0.1"
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
This component reads in data from the file 
\family typewriter
test.topo
\family default
 to set the initial height.
 It also sets the bottom to have a slope that flattens out.
\end_layout

\end_deeper
\begin_layout Enumerate
Add velocity conditions for the front and back
\end_layout

\begin_deeper
\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    "type": "WallVC",
\end_layout

\begin_layout LyX-Code
    "wall": "front",
\end_layout

\begin_layout LyX-Code
    "variables": [
\end_layout

\begin_layout LyX-Code
        {
\end_layout

\begin_layout LyX-Code
            "name": "vz",
\end_layout

\begin_layout LyX-Code
            "value": "0.0"
\end_layout

\begin_layout LyX-Code
        }
\end_layout

\begin_layout LyX-Code
    ]
\end_layout

\begin_layout LyX-Code
},
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    "type": "WallVC",
\end_layout

\begin_layout LyX-Code
    "wall": "back",
\end_layout

\begin_layout LyX-Code
    "variables": [
\end_layout

\begin_layout LyX-Code
        {
\end_layout

\begin_layout LyX-Code
            "name": "vz",
\end_layout

\begin_layout LyX-Code
            "value": "0.0"
\end_layout

\begin_layout LyX-Code
        }
\end_layout

\begin_layout LyX-Code
    ]
\end_layout

\begin_layout LyX-Code
},
\end_layout

\end_deeper
\begin_layout Enumerate
Change 
\family typewriter
dim
\family default
 from 2 to 3.
\end_layout

\begin_layout Standard
A worked example is in 
\family typewriter
input/cookbook/extension3D.json
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Extension3D"

\end_inset

 shows the strain rate invariant and velocity.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/cookbook_viscous_extension3D.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Extension3D"

\end_inset

Strain rate invariant and velocity for a deformed bottom boundary
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Tracers-cookbook"

\end_inset

Tracers
\end_layout

\begin_layout Standard
This example adds tracer particles to track where material moves.
 These tracers play no active part in the simulation, only observing the
 fields as they follow the movements of the material.
\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
myfixed_bottom.json
\family default
 to 
\family typewriter
tracers.json
\family default
.
\end_layout

\begin_layout Enumerate
Enable tracers by adding
\end_layout

\begin_deeper
\begin_layout LyX-Code
”enable-tracers”: true,
\end_layout

\begin_layout Standard
after
\end_layout

\begin_layout LyX-Code
”FieldVariablesToCheckpoint”: [
\end_layout

\begin_layout LyX-Code
    ”StrainRateInvariantField”,
\end_layout

\begin_layout LyX-Code
    ”VelocityField”,
\end_layout

\begin_layout LyX-Code
    ”PressureField”
\end_layout

\begin_layout LyX-Code
],
\end_layout

\end_deeper
\begin_layout Enumerate
Add a component laying out the initial positions of the particles
\end_layout

\begin_deeper
\begin_layout LyX-Code
,”pLayout”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”ManualParticleLayout”,
\end_layout

\begin_layout LyX-Code
    ”manualParticlePositions”: [
\end_layout

\begin_layout LyX-Code
        
\begin_inset Quotes sld
\end_inset

asciidata
\begin_inset Quotes srd
\end_inset

,
\end_layout

\begin_layout LyX-Code
        [
\begin_inset Quotes sld
\end_inset

x
\begin_inset Quotes srd
\end_inset

, 
\begin_inset Quotes sld
\end_inset

y
\begin_inset Quotes srd
\end_inset

],
\end_layout

\begin_layout LyX-Code
        1.0, .1,
\end_layout

\begin_layout LyX-Code
        1.3, .1,
\end_layout

\begin_layout LyX-Code
        1.6, .1,
\end_layout

\begin_layout LyX-Code
        1.9, .1,
\end_layout

\begin_layout LyX-Code
        1.0, .2,
\end_layout

\begin_layout LyX-Code
        1.3, .2,
\end_layout

\begin_layout LyX-Code
        1.6, .2,
\end_layout

\begin_layout LyX-Code
        1.9, .2
\end_layout

\begin_layout LyX-Code
    ]
\end_layout

\begin_layout LyX-Code
},
\end_layout

\begin_layout Standard
and another component for controlling what fields are output
\end_layout

\begin_layout LyX-Code
”swarmOutput”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”TracerOutput”,
\end_layout

\begin_layout LyX-Code
    ”Swarm”: ”passiveTracerSwarm”,
\end_layout

\begin_layout LyX-Code
    ”Fields” : [
\end_layout

\begin_layout LyX-Code
        ”PressureField”,
\end_layout

\begin_layout LyX-Code
        ”StrainRateInvariantField”
\end_layout

\begin_layout LyX-Code
    ]
\end_layout

\begin_layout LyX-Code
}
\end_layout

\end_deeper
\begin_layout Enumerate
In order to see nice tracks, increase the number of timesteps by changing
 the line
\end_layout

\begin_deeper
\begin_layout LyX-Code
”maxTimeSteps”: ”10”,
\end_layout

\begin_layout Standard
to
\end_layout

\begin_layout LyX-Code
”maxTimeSteps”: ”100”,
\end_layout

\end_deeper
\begin_layout Standard
After running this input file you will see eight new files in the output
 directory: 
\family typewriter
swarmOutput.00000.dat
\family default
, ...
 
\family typewriter
swarmOutput.00007.dat
\family default
.
 Inside each of these files is a record of the time, position, pressure,
 and strain-rate invariant that each particle saw as it traveled along.
 Plotting the particle tracks of all of these tracers gives us Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Particle-tracks-of"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/tracers.eps
	width 70col%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Particle-tracks-of"

\end_inset

Particle tracks of tracers
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Multiple Viscous Materials
\begin_inset CommandInset label
LatexCommand label
name "sec:Multiple-Viscous-Materials"

\end_inset


\end_layout

\begin_layout Standard
All of the previous examples have only one type of viscous material.
 This example will create a simulation where there are multiple viscous
 materials such as in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Multiple-Viscous-Materials"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/multi-material.eps
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Multiple-Viscous-Materials"

\end_inset

Multiple Viscous Materials
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
myextension.json
\family default
 (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Viscous-Material-in"

\end_inset

) to 
\family typewriter
mymulti_material.json
\family default
.
 
\end_layout

\begin_layout Enumerate
Add the sphere.
\end_layout

\begin_deeper
\begin_layout LyX-Code
”sphereShape”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”EquationShape”,
\end_layout

\begin_layout LyX-Code
    ”equation”: ”.1^2 - ((x-1)^2 + (y-.15)^2)”
\end_layout

\begin_layout LyX-Code
},
\end_layout

\end_deeper
\begin_layout Enumerate
Then add the new material.
\end_layout

\begin_deeper
\begin_layout LyX-Code
,”sphereViscosity”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”MaterialViscosity”,
\end_layout

\begin_layout LyX-Code
    ”eta0”: ”10.0”
\end_layout

\begin_layout LyX-Code
},
\end_layout

\begin_layout LyX-Code
”sphereViscous”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”RheologyMaterial”,
\end_layout

\begin_layout LyX-Code
    ”Shape”: ”sphereShape”,
\end_layout

\begin_layout LyX-Code
    ”density”: ”1.0”,
\end_layout

\begin_layout LyX-Code
    ”Rheology”: [
\end_layout

\begin_layout LyX-Code
        ”sphereViscosity”,
\end_layout

\begin_layout LyX-Code
        ”storeViscosity”,
\end_layout

\begin_layout LyX-Code
        ”storeStress”
\end_layout

\begin_layout LyX-Code
    ]
\end_layout

\begin_layout LyX-Code
}
\end_layout

\end_deeper
\begin_layout Enumerate
Change the shape of the original material so it is not inside the sphere.
 To do this, create a new shape which is the old shape minus the sphere:
\end_layout

\begin_deeper
\begin_layout LyX-Code
”nonsphereShape”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”Intersection”,
\end_layout

\begin_layout LyX-Code
    ”shapes”:
\end_layout

\begin_layout LyX-Code
    [
\end_layout

\begin_layout LyX-Code
        ”backgroundShape”,
\end_layout

\begin_layout LyX-Code
        ”!sphereShape”
\end_layout

\begin_layout LyX-Code
    ]
\end_layout

\begin_layout LyX-Code
},
\end_layout

\end_deeper
\begin_layout Enumerate
Finally, modify the original viscous material to use this new 
\family typewriter
nonSphereShape
\family default
 by changing the line after 
\end_layout

\begin_deeper
\begin_layout LyX-Code
”viscous”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”RheologyMaterial”,
\end_layout

\begin_layout Standard
from 
\end_layout

\begin_layout LyX-Code
”Shape”: ”backgroundShape”,
\end_layout

\begin_layout Standard
to
\end_layout

\begin_layout LyX-Code
”Shape”: ”nonsphereShape”,
\end_layout

\end_deeper
\begin_layout Standard
A worked example is in 
\family typewriter
input/cookbook/multi_material.json
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-multiple"

\end_inset

 shows the strain rate invariant and velocity,
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/cookbook_multi_material.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-multiple"

\end_inset

Strain rate invariant and velocity with multiple viscous materials
\end_layout

\end_inset


\end_layout

\end_inset

and Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Viscosities-with-multiple"

\end_inset

 shows the viscosity of the particles.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/cookbook_multi_viscosity.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Viscosities-with-multiple"

\end_inset

Viscosities with multiple viscous materials
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Yielding Material in Simple Extension
\end_layout

\begin_layout Standard
This example replaces the background viscous material with a yielding material.
 This will produce localizations as some material fails.
\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
mymulti_material.json
\family default
 to 
\family typewriter
myyielding.json
\end_layout

\begin_layout Enumerate
Add a 
\family typewriter
StrainWeakening
\family default
 component and a 
\family typewriter
DruckerPrager
\family default
 component
\end_layout

\begin_deeper
\begin_layout LyX-Code
”strainWeakening”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”StrainWeakening”,
\end_layout

\begin_layout LyX-Code
    ”TimeIntegrator”: ”timeIntegrator”,
\end_layout

\begin_layout LyX-Code
    ”MaterialPointsSwarm”: ”materialSwarm”,
\end_layout

\begin_layout LyX-Code
    ”softeningStrain”: ”0.1”,
\end_layout

\begin_layout LyX-Code
    ”initialDamageFraction”: ”0.0”,
\end_layout

\begin_layout LyX-Code
    ”initialDamageWavenumber”: ”0.5”,
\end_layout

\begin_layout LyX-Code
    ”initialDamageFactor”: ”0.5”,
\end_layout

\begin_layout LyX-Code
    ”healingRate”: ”0.0”
\end_layout

\begin_layout LyX-Code
},
\end_layout

\begin_layout LyX-Code
”yielding”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”DruckerPrager”,
\end_layout

\begin_layout LyX-Code
    ”PressureField”: ”PressureField”,
\end_layout

\begin_layout LyX-Code
    ”VelocityGradientsField”: ”VelocityGradientsField”,
\end_layout

\begin_layout LyX-Code
    ”MaterialPointsSwarm”: ”materialSwarm”,
\end_layout

\begin_layout LyX-Code
    ”Context”: ”context”,
\end_layout

\begin_layout LyX-Code
    ”StrainWeakening”: ”strainWeakening”,
\end_layout

\begin_layout LyX-Code
    ”StrainRateField”: ”StrainRateField”,
\end_layout

\begin_layout LyX-Code
    ”cohesion”: ”1.0”,
\end_layout

\begin_layout LyX-Code
    ”cohesionAfterSoftening”: ”0.0001”,
\end_layout

\begin_layout LyX-Code
    ”frictionCoefficient”: ”0.0”,
\end_layout

\begin_layout LyX-Code
    ”frictionCoefficientAfterSoftening”: ”0.0”,
\end_layout

\begin_layout LyX-Code
    ”minimumViscosity”: ”1.0e-4”
\end_layout

\begin_layout LyX-Code
},
\end_layout

\begin_layout Standard
after 
\family typewriter
backgroundViscosity
\family default
.
\end_layout

\end_deeper
\begin_layout Enumerate
Add this yielding rheology to the existing background material by inserting
\end_layout

\begin_deeper
\begin_layout LyX-Code
”yielding”,
\end_layout

\begin_layout Standard
after
\end_layout

\begin_layout LyX-Code
”viscous”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”RheologyMaterial”,
\end_layout

\begin_layout LyX-Code
    ”Shape”: ”nonsphereShape”,
\end_layout

\begin_layout LyX-Code
    ”density”: ”1.0”,
\end_layout

\begin_layout LyX-Code
    ”Rheology”: [
\end_layout

\begin_layout LyX-Code
        ”backgroundViscosity”,
\end_layout

\end_deeper
\begin_layout Standard
A worked example is in 
\family typewriter
input/cookbook/yielding.json
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:strain-yield"

\end_inset

 shows the strain rate invariant and velocity.
 A fault has developed on the left side.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/cookbook_yielding.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:strain-yield"

\end_inset

Strain rate invariant and velocity of yielding material in extension
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Viscosity-of-yielding"

\end_inset

 shows the viscosity of the particles,
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/cookbook_yielding_viscosity.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Viscosity-of-yielding"

\end_inset

Viscosity of yielding material in extension
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
and Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Degree-of-yielding"

\end_inset

 shows the accumulated post-yielding strain of the particles.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/cookbook_yielding_yielding.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Degree-of-yielding"

\end_inset

Accumulated post-yielding strain of yielding material in extension
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Thermal-Convection"

\end_inset

Thermal Convection
\end_layout

\begin_layout Standard
Temperature can play a decisive role in geophysical processes.
 This example takes the multiple viscous material example from Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Multiple-Viscous-Materials"

\end_inset

, heats it on the bottom, and adds in radiogenic heating throughout.
\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
mymulti_material.json
\family default
 to 
\family typewriter
mythermal.json
\end_layout

\begin_layout Enumerate
Enable the thermal components by adding
\end_layout

\begin_deeper
\begin_layout LyX-Code
”enable-thermal”: true,
\end_layout

\begin_layout Standard
after
\end_layout

\begin_layout LyX-Code
”FieldVariablesToCheckpoint”: [
\end_layout

\begin_layout LyX-Code
    ”StrainRateInvariantField”,
\end_layout

\begin_layout LyX-Code
    ”VelocityField”,
\end_layout

\begin_layout LyX-Code
    ”PressureField”
\end_layout

\begin_layout LyX-Code
],
\end_layout

\end_deeper
\begin_layout Enumerate
Add in temperature boundary conditions after the velocity boundary conditions
\end_layout

\begin_deeper
\begin_layout LyX-Code
”temperatureBCs”: {
\end_layout

\begin_layout LyX-Code
    ”type”: ”CompositeVC”,
\end_layout

\begin_layout LyX-Code
    ”vcList”: [
\end_layout

\begin_layout LyX-Code
        {
\end_layout

\begin_layout LyX-Code
            ”type”: ”WallVC”,
\end_layout

\begin_layout LyX-Code
            ”wall”: ”left”,
\end_layout

\begin_layout LyX-Code
            ”variables”: [
\end_layout

\begin_layout LyX-Code
                {
\end_layout

\begin_layout LyX-Code
                    ”name”: ”temperature”,
\end_layout

\begin_layout LyX-Code
                    ”value”: ”1.0”
\end_layout

\begin_layout LyX-Code
                }
\end_layout

\begin_layout LyX-Code
            ]
\end_layout

\begin_layout LyX-Code
        },
\end_layout

\begin_layout LyX-Code
        {
\end_layout

\begin_layout LyX-Code
            ”type”: ”WallVC”,
\end_layout

\begin_layout LyX-Code
            ”wall”: ”right”,
\end_layout

\begin_layout LyX-Code
            ”variables”: [
\end_layout

\begin_layout LyX-Code
                {
\end_layout

\begin_layout LyX-Code
                    ”name”: ”temperature”,
\end_layout

\begin_layout LyX-Code
                    ”value”: ”1.0”
\end_layout

\begin_layout LyX-Code
                }
\end_layout

\begin_layout LyX-Code
            ]
\end_layout

\begin_layout LyX-Code
        },
\end_layout

\begin_layout LyX-Code
        {
\end_layout

\begin_layout LyX-Code
            ”type”: ”WallVC”,
\end_layout

\begin_layout LyX-Code
            ”wall”: ”top”,
\end_layout

\begin_layout LyX-Code
            ”variables”: [
\end_layout

\begin_layout LyX-Code
                {
\end_layout

\begin_layout LyX-Code
                    ”name”: ”temperature”,
\end_layout

\begin_layout LyX-Code
                    ”value”: ”1.0”
\end_layout

\begin_layout LyX-Code
                }
\end_layout

\begin_layout LyX-Code
            ]
\end_layout

\begin_layout LyX-Code
        },
\end_layout

\begin_layout LyX-Code
        {
\end_layout

\begin_layout LyX-Code
            ”type”: ”WallVC”,
\end_layout

\begin_layout LyX-Code
            ”wall”: ”bottom”,
\end_layout

\begin_layout LyX-Code
            ”variables”: [
\end_layout

\begin_layout LyX-Code
                {
\end_layout

\begin_layout LyX-Code
                    ”name”: ”temperature”,
\end_layout

\begin_layout LyX-Code
                    ”value”: ”2.0”
\end_layout

\begin_layout LyX-Code
                }
\end_layout

\begin_layout LyX-Code
            ]
\end_layout

\begin_layout LyX-Code
        }
\end_layout

\begin_layout LyX-Code
    ]
\end_layout

\begin_layout LyX-Code
},
\end_layout

\begin_layout LyX-Code

\end_layout

\end_deeper
\begin_layout Enumerate
Add in initial conditions for the temperature after the boundary conditions
\end_layout

\begin_deeper
\begin_layout LyX-Code
”temperatureICs”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”type”: ”CompositeVC”,
\end_layout

\begin_layout LyX-Code
    ”vcList”: [
\end_layout

\begin_layout LyX-Code
        {
\end_layout

\begin_layout LyX-Code
            ”type”: ”AllNodesVC”,
\end_layout

\begin_layout LyX-Code
            ”variables”:[
\end_layout

\begin_layout LyX-Code
                {
\end_layout

\begin_layout LyX-Code
                    ”name”: ”temperature”,
\end_layout

\begin_layout LyX-Code
                    ”value”: ”1.0”
\end_layout

\begin_layout LyX-Code
                }
\end_layout

\begin_layout LyX-Code
            ]
\end_layout

\begin_layout LyX-Code
        }
\end_layout

\begin_layout LyX-Code
    ]
\end_layout

\begin_layout LyX-Code
},
\end_layout

\end_deeper
\begin_layout Enumerate
Specify the background material's thermal expansivity, thermal diffusivity,
 radiogenic heating rate, and radiogenic decay time scale by adding after
\end_layout

\begin_deeper
\begin_layout LyX-Code
”viscous”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”RheologyMaterial”,
\end_layout

\begin_layout LyX-Code
    ”Shape”: ”nonsphereShape”,
\end_layout

\begin_layout LyX-Code
    ”density”: ”1.0”,
\end_layout

\begin_layout Standard
the lines
\end_layout

\begin_layout LyX-Code
”alpha”: ”1.0”,
\end_layout

\begin_layout LyX-Code
”diffusivity”: ”1.0”,
\end_layout

\begin_layout LyX-Code
”heatingElements”: [
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
        ”Q”: ”1.0”,
\end_layout

\begin_layout LyX-Code
        ”lambda”: ”1.0”
\end_layout

\begin_layout LyX-Code
    }
\end_layout

\begin_layout LyX-Code
],
\end_layout

\begin_layout Standard
For the sphere, after the lines
\end_layout

\begin_layout LyX-Code
”sphereViscous”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”RheologyMaterial”,
\end_layout

\begin_layout LyX-Code
    ”Shape”: ”sphereShape”,
\end_layout

\begin_layout LyX-Code
    ”density”: ”1.0”,
\end_layout

\begin_layout Standard
add the lines
\end_layout

\begin_layout LyX-Code
”alpha”: ”10.0”,
\end_layout

\begin_layout LyX-Code
”diffusivity”: ”10.0”,
\end_layout

\begin_layout LyX-Code
”heatingElements”: [
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
        ”Q”: ”1000.0”,
\end_layout

\begin_layout LyX-Code
        ”lambda”: ”10.0”
\end_layout

\begin_layout LyX-Code
    }
\end_layout

\begin_layout LyX-Code
],
\end_layout

\begin_layout Standard
This makes the sphere more expansive, conductive, and radioactive.
\end_layout

\end_deeper
\begin_layout Enumerate
Modify the buoyancy force term by adding the temperature field
\end_layout

\begin_deeper
\begin_layout LyX-Code
,”TemperatureField”: ”TemperatureField”
\end_layout

\begin_layout Standard
after the lines
\end_layout

\begin_layout LyX-Code
”buoyancyForceTerm”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”BuoyancyForceTerm”,
\end_layout

\begin_layout LyX-Code
    ”ForceVector”: ”mom_force”,
\end_layout

\begin_layout LyX-Code
    ”Swarm”: ”gaussSwarm”,
\end_layout

\begin_layout LyX-Code
    ”gravity”: ”gravity”
\end_layout

\end_deeper
\begin_layout Enumerate
The deforming mesh requires some adjustments to the advection terms.
 Enable this by adding
\end_layout

\begin_deeper
\begin_layout LyX-Code
”T-mesh”: ”T-mesh”,
\end_layout

\begin_layout LyX-Code
”displacementField”: ”DisplacementField”,
\end_layout

\begin_layout Standard
after
\end_layout

\begin_layout LyX-Code
”EulerDeform”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”systems”: [
\end_layout

\begin_layout LyX-Code
        {
\end_layout

\begin_layout LyX-Code
            ”mesh”: ”v-mesh”,
\end_layout

\begin_layout LyX-Code
            ”p-mesh”: ”p-mesh”,
\end_layout

\begin_layout LyX-Code

\end_layout

\end_deeper
\begin_layout Enumerate
Add temperature as a checkpoint variable by inserting
\end_layout

\begin_deeper
\begin_layout LyX-Code
”TemperatureField”,
\end_layout

\begin_layout Standard
after
\end_layout

\begin_layout LyX-Code
”FieldVariablesToCheckpoint”: [
\end_layout

\begin_layout LyX-Code
    ”StrainRateInvariantField”,
\end_layout

\begin_layout LyX-Code
    ”VelocityField”,
\end_layout

\end_deeper
\begin_layout Enumerate
Finally, to highlight the effects of temperature, make the boundary move
 more slowly by changing the line after
\end_layout

\begin_deeper
\begin_layout LyX-Code
”type”: ”WallVC”,
\end_layout

\begin_layout LyX-Code
”wall”: ”right”,
\end_layout

\begin_layout LyX-Code
”variables”: [
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
        ”name”: ”vx”,
\end_layout

\begin_layout Standard
from
\end_layout

\begin_layout LyX-Code
”value”: ”1.0”
\end_layout

\begin_layout Standard
to
\end_layout

\begin_layout LyX-Code
”value”: ”0.01”
\end_layout

\end_deeper
\begin_layout Standard
A worked example is in 
\family typewriter
thermal.json
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Temperature-and-velocity"

\end_inset

 shows the temperature and velocity.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/cookbook_thermal.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Temperature-and-velocity"

\end_inset

Temperature and velocity for the thermal convection example
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Initial-Conditions-File"

\end_inset

Thermal Convection with Initial Conditions from a File
\end_layout

\begin_layout Standard
There are a number of different functions that you can use as initial conditions
 for the temperature (see Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Standard-Condition-Functions"

\end_inset

).
 This example shows how to use data from a file as your initial condition.
 The data used for this file is in 
\family typewriter
input/cookbook/temperature
\family default
, and sets the initial temperature inside the box to
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
1+0.05\cos(6x)\cos(10y).
\]

\end_inset


\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
mythermal.json
\family default
 to 
\family typewriter
mythermal_file.json
\family default
.
\end_layout

\begin_layout Enumerate
In the 
\family typewriter
temperatureICs
\family default
 struct, change the line after
\end_layout

\begin_deeper
\begin_layout LyX-Code
”type”: ”AllNodesVC”,
\end_layout

\begin_layout LyX-Code
”variables”:[
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
        ”name”: ”temperature”,
\end_layout

\begin_layout Standard
from
\end_layout

\begin_layout LyX-Code
”value”: ”1.0”
\end_layout

\begin_layout Standard
to
\end_layout

\begin_layout LyX-Code
”type”: ”func”,
\end_layout

\begin_layout LyX-Code
”value”: ”File1”
\end_layout

\end_deeper
\begin_layout Enumerate
Add in the lines
\end_layout

\begin_deeper
\begin_layout LyX-Code
,”File1_Name”: ”input/cookbook/temperatures”,
\end_layout

\begin_layout LyX-Code
”File1_Dim”: ”0”,
\end_layout

\begin_layout LyX-Code
”File1_N”: ”202”,
\end_layout

\begin_layout LyX-Code
”File1_Dim2”: ”1”,
\end_layout

\begin_layout LyX-Code
”File1_N2”: ”37”
\end_layout

\begin_layout Standard
at the end of the file, just before the last bracket 
\begin_inset Quotes sld
\end_inset


\family typewriter
}
\family default

\begin_inset Quotes srd
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
Increase the vertical resolution a little by changing
\end_layout

\begin_deeper
\begin_layout LyX-Code
”ny”: ”4”,
\end_layout

\begin_layout Standard
to
\end_layout

\begin_layout LyX-Code
”ny”: ”8”,
\end_layout

\end_deeper
\begin_layout Standard
A worked example is in 
\family typewriter
thermal_file.json
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Thermal_file"

\end_inset

 shows the temperature and velocity at the end of the calculation.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/cookbook_thermal_file.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Thermal_file"

\end_inset

Temperature and velocity when using temperature initial data from a file.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Pure Thermal
\end_layout

\begin_layout Standard
This example turns off the Stokes solver and only evolves the temperature.
 Since the Stokes equations are not solved, the velocity must be specified
 independently.
 This also means that variables like strain rate and viscosity are no longer
 needed.
 
\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
mythermal.json
\family default
 to 
\family typewriter
mythermal_only.json
\family default
.
\end_layout

\begin_layout Enumerate
Delete the 
\family typewriter
buoyancyForceTerm
\family default
 component.
\end_layout

\begin_layout Enumerate
Remove the references to viscosity and stress in the materials by changing
 the 
\family typewriter
viscous
\family default
 component to
\end_layout

\begin_deeper
\begin_layout LyX-Code
"viscous":
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    "Type": "Material",
\end_layout

\begin_layout LyX-Code
    "Shape": "nonsphereShape",
\end_layout

\begin_layout LyX-Code
    "diffusivity": "1.0",
\end_layout

\begin_layout LyX-Code
    "heatingElements": [
\end_layout

\begin_layout LyX-Code
        {
\end_layout

\begin_layout LyX-Code
            "Q": "1.0",
\end_layout

\begin_layout LyX-Code
            "lambda": "1.0"
\end_layout

\begin_layout LyX-Code
        }
\end_layout

\begin_layout LyX-Code
    ]
\end_layout

\begin_layout LyX-Code
},
\end_layout

\begin_layout Standard
and change the 
\family typewriter
sphereViscous
\family default
 component to
\end_layout

\begin_layout LyX-Code
"sphereViscous":
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    "Type": "Material",
\end_layout

\begin_layout LyX-Code
    "Shape": "sphereShape",
\end_layout

\begin_layout LyX-Code
    "diffusivity": "10.0",
\end_layout

\begin_layout LyX-Code
    "heatingElements": [
\end_layout

\begin_layout LyX-Code
        {
\end_layout

\begin_layout LyX-Code
            "Q": "1000.0",
\end_layout

\begin_layout LyX-Code
            "lambda": "10.0"
\end_layout

\begin_layout LyX-Code
        }
\end_layout

\begin_layout LyX-Code
    ]
\end_layout

\begin_layout LyX-Code
}
\end_layout

\end_deeper
\begin_layout Enumerate
Replace the velocity boundary condition 
\family typewriter
velocityBCs
\family default
 with
\end_layout

\begin_deeper
\begin_layout LyX-Code
”velocityICs”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”type”: ”CompositeVC”,
\end_layout

\begin_layout LyX-Code
    ”vcList”: [
\end_layout

\begin_layout LyX-Code
        {
\end_layout

\begin_layout LyX-Code
            ”type”: ”AllNodesVC”,
\end_layout

\begin_layout LyX-Code
            ”variables”:[
\end_layout

\begin_layout LyX-Code
                {
\end_layout

\begin_layout LyX-Code
                    ”name”: ”vx”,
\end_layout

\begin_layout LyX-Code
                    ”value”: ”0.0”
\end_layout

\begin_layout LyX-Code
                },
\end_layout

\begin_layout LyX-Code
                {
\end_layout

\begin_layout LyX-Code
                    ”name”: ”vy”,
\end_layout

\begin_layout LyX-Code
                    ”value”: ”0.0”
\end_layout

\begin_layout LyX-Code
                }
\end_layout

\begin_layout LyX-Code
            ]
\end_layout

\begin_layout LyX-Code
        }
\end_layout

\begin_layout LyX-Code
    ]
\end_layout

\begin_layout LyX-Code
},
\end_layout

\end_deeper
\begin_layout Enumerate
Remove the strain rate and pressure as checkpointed variables by replacing
\end_layout

\begin_deeper
\begin_layout LyX-Code
”FieldVariablesToCheckpoint”: [
\end_layout

\begin_layout LyX-Code
    ”StrainRateInvariantField”,
\end_layout

\begin_layout LyX-Code
    ”VelocityField”,
\end_layout

\begin_layout LyX-Code
    ”TemperatureField”,
\end_layout

\begin_layout LyX-Code
    ”PressureField”
\end_layout

\begin_layout LyX-Code
],
\end_layout

\begin_layout Standard
with
\end_layout

\begin_layout LyX-Code
”FieldVariablesToCheckpoint”: [
\end_layout

\begin_layout LyX-Code
    ”VelocityField”,
\end_layout

\begin_layout LyX-Code
    ”TemperatureField”
\end_layout

\begin_layout LyX-Code
],
\end_layout

\end_deeper
\begin_layout Enumerate
Disable Stokes by adding
\end_layout

\begin_deeper
\begin_layout LyX-Code
”enable-stokes”: false,
\end_layout

\begin_layout Standard
right after
\end_layout

\begin_layout LyX-Code
”enable-thermal”: true,
\end_layout

\end_deeper
\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Thermal_only"

\end_inset

 shows the temperature at the end of the calculation.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/cookbook_thermal_only.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Thermal_only"

\end_inset

Temperature and velocity when using temperature initial data from a file.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Power-Law-Creep"

\end_inset

Power Law Creep
\end_layout

\begin_layout Standard
A common approximation for the rheology of rocks is power law creep.
 This example shows how to implement this with the NonNewtonian rheology
 as described in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:NonNewtonian"

\end_inset

.
\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
mythermal.json
\family default
 to 
\family typewriter
mynon_newtonian.json
\family default
.
\end_layout

\begin_layout Enumerate
Replace the 
\family typewriter
backgroundViscosity
\family default
 component with
\end_layout

\begin_deeper
\begin_layout LyX-Code
”nonNewtonian”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”Type”: ”NonNewtonian”,
\end_layout

\begin_layout LyX-Code
    ”StrainRateInvariantField”: ”StrainRateInvariantField”,
\end_layout

\begin_layout LyX-Code
    ”TemperatureField”: ”TemperatureField”,
\end_layout

\begin_layout LyX-Code
    ”n”: ”3.4”,
\end_layout

\begin_layout LyX-Code
    ”T_0”: ”1.0”,
\end_layout

\begin_layout LyX-Code
    ”A”: ”1.0”,
\end_layout

\begin_layout LyX-Code
    ”refStrainRate”: ”0.01”
\end_layout

\begin_layout LyX-Code
},
\end_layout

\end_deeper
\begin_layout Enumerate
In the 
\family typewriter
viscous
\family default
 material, change 
\family typewriter
backgroundViscosity
\family default
 to 
\family typewriter
nonNewtonian
\family default
.
\end_layout

\begin_layout Standard
A worked example is in 
\family typewriter
non_newtonian.json
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Power-Law-Creep"

\end_inset

 shows the temperature and velocity.
 The differences with the example in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Temperature-and-velocity"

\end_inset

 are mostly because the viscosity is higher everywhere.
\end_layout

\begin_layout LyX-Code
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/cookbook_non_newtonian.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Power-Law-Creep"

\end_inset

Temperature and velocity for the power-law creep model
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Chapter
\start_of_appendix
Input File Format
\begin_inset CommandInset label
LatexCommand label
name "cha:Input-File-Format"

\end_inset


\end_layout

\begin_layout Section
Structure
\end_layout

\begin_layout Standard
The input files are in the JSON format (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://json.org
\end_layout

\end_inset

).
 This leverages a well-known format to specify concepts like hierarchies,
 lists, parameters, and arbitrary structures.
 The entire file is enclosed within brackets 
\begin_inset Quotes sld
\end_inset

{
\begin_inset Quotes srd
\end_inset

 and 
\begin_inset Quotes sld
\end_inset

}
\begin_inset Quotes srd
\end_inset

.
 Within those brackets, there are four parts of a Gale input file: components,
 EulerDeform, variable conditions, and variables.
\end_layout

\begin_layout Standard
Internally, the JSON input files are converted to XML and then parsed.
 During that process, a number of components are added by default, such
 as the mesh, the velocity field, and particles.
 Gale writes out this XML into the file 
\family typewriter
input.xml
\family default
 in the output directory.
 If you create your own version of these default components in your JSON
 input file, your versions will take precedence.
\end_layout

\begin_layout Standard
Previous versions of Gale used XML as the input file format, and this scheme
 allows Gale to accept either JSON or XML as input.
 Existing XML input files will still work with minor modifications.
 See the file UPGRADE for the details of these modifications.
\end_layout

\begin_layout Subsection
Components
\begin_inset CommandInset label
LatexCommand label
name "sub:Components"

\end_inset


\end_layout

\begin_layout Standard
The components section is separated off from the rest of the file with an
 enclosing 
\family typewriter
components
\family default
 structure.
 This 
\family typewriter
components
\family default
 structure is where the bulk of the file will be.
 It specifies things like which material goes where, what the material propertie
s are, etc.
 Most of the ideas you need to specify your problem will go into the components.
 When adding a new component, it is important to remember to put the new
 component inside the components structure.
 Otherwise Gale will (silently) not use that component.
 For example, an input file such as
\end_layout

\begin_layout LyX-Code
\begin_inset Quotes sld
\end_inset

components
\begin_inset Quotes srd
\end_inset

:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
  ”sphereShape”:
\end_layout

\begin_layout LyX-Code
  {
\end_layout

\begin_layout LyX-Code
    ”Type”: ”EquationShape”,
\end_layout

\begin_layout LyX-Code
    ”equation”: ”.1^2 - ((x-1)^2 + (y-.15)^2)”
\end_layout

\begin_layout LyX-Code
  }
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Standard
will correctly initialize 
\family typewriter
sphereShape
\family default
, but the input file
\end_layout

\begin_layout LyX-Code
\begin_inset Quotes sld
\end_inset

components
\begin_inset Quotes srd
\end_inset

:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
},
\end_layout

\begin_layout LyX-Code
  ”sphereShape”:
\end_layout

\begin_layout LyX-Code
  {
\end_layout

\begin_layout LyX-Code
    ”Type”: ”EquationShape”,
\end_layout

\begin_layout LyX-Code
    ”equation”: ”.1^2 - ((x-1)^2 + (y-.15)^2)”
\end_layout

\begin_layout LyX-Code
  }
\end_layout

\begin_layout Standard
will not, and no error message will alert you of the problem.
\end_layout

\begin_layout Subsection
EulerDeform
\begin_inset CommandInset label
LatexCommand label
name "sub:EulerDeform"

\end_inset


\end_layout

\begin_layout Standard

\family typewriter
EulerDeform
\family default
 allows the upper surface to move freely or stay rigidly in place.
 If you do not have an 
\family typewriter
EulerDeform
\family default
 struct, then the mesh will not deform.
 An example 
\family typewriter
EulerDeform
\family default
 struct is
\end_layout

\begin_layout LyX-Code
”EulerDeform”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    ”systems”: [
\end_layout

\begin_layout LyX-Code
        {
\end_layout

\begin_layout LyX-Code
            ”mesh”: ”v-mesh”,
\end_layout

\begin_layout LyX-Code
            ”p-mesh”: ”p-mesh”,
\end_layout

\begin_layout LyX-Code
            ”remesher”: ”velocityRemesher”,
\end_layout

\begin_layout LyX-Code
            ”velocityField”: ”VelocityField”,
\end_layout

\begin_layout LyX-Code
            ”wrapTop”: ”True”
\end_layout

\begin_layout LyX-Code
        }
\end_layout

\begin_layout LyX-Code
    ]
\end_layout

\begin_layout LyX-Code
},
\end_layout

\begin_layout Standard
Note the critical line
\end_layout

\begin_layout LyX-Code
”wrapTop”: ”True”
\end_layout

\begin_layout Standard
that makes the top surface conform to the simulation.
\end_layout

\begin_layout Standard
Additionally, Gale can fix the positions of the boundaries.
 For example, if you are running a shortening model, normally Gale will
 move the boundaries inward as the simulation progresses.
 If different parts of the boundary are moving at different rates (such
 as if you were simulating one slab sliding over the other), then the side
 boundary would quickly become distorted and ruin the simulation.
 To fix the right boundary, set the variable 
\family typewriter
staticRight
\family default
 to 
\family typewriter
True
\end_layout

\begin_layout LyX-Code
”staticRight”: 
\begin_inset Quotes sld
\end_inset

True
\begin_inset Quotes srd
\end_inset


\end_layout

\begin_layout Standard
Similarly, you can independently set the left, top, bottom, front, and back
 boundaries.
\end_layout

\begin_layout Standard
Setting staticRight will make the right boundary immobile.
 You can make the whole boundary move with a fixed velocity, by setting
 
\family typewriter
right_equation
\family default
.
 So setting
\end_layout

\begin_layout LyX-Code
\begin_inset Quotes sld
\end_inset

right_equation
\begin_inset Quotes srd
\end_inset

: 
\begin_inset Quotes sld
\end_inset

10 - 0.01 * t
\begin_inset Quotes srd
\end_inset


\end_layout

\begin_layout Standard
will make the right side move from 10 inwards with a velocity 0.1.
 Similarly, you can make the left side move by setting 
\family typewriter
left_equation
\family default
.
 If you are scaling units as in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Scaling"

\end_inset

, be sure to scale the velocity here.
\end_layout

\begin_layout Standard
Note that this will only fix the interior of that boundary.
 So setting 
\family typewriter
staticRight
\family default
 will not fix the top right or bottom right corners (in 2D) and edges (in
 3D).
 If you set both 
\family typewriter
staticRight
\family default
 and 
\family typewriter
staticBottom
\family default
, then the bottom right corner will also be fixed.
 Otherwise, you can set 
\family typewriter
staticBottomRight
\family default
 to specifically fix the bottom right corner.
\end_layout

\begin_layout Standard
If you set 
\family typewriter
staticRight
\family default
 or 
\family typewriter
staticLeft
\family default
 but do not fix the upper corners, then Gale will move the top right or
 left corner to the boundary and interpolate the height.
 This is useful if material is flowing out and you want the boundary of
 the mesh to vary as lumps go through.
 If material is actually flowing in, Gale will be unable to interpolate
 and will complain.
\end_layout

\begin_layout Standard
The 
\family typewriter
floatRightTop
\family default
 and 
\family typewriter
floatLeftTop
\family default
 variables are useful when you are using a boundary layer (see Sections
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:DruckerPrager"

\end_inset

), and you want the height of the boundary layer to match the interior.
\end_layout

\begin_layout Standard
In general, Gale has three different meshes: velocity, pressure, and temperature.
 Pure Stokes flow only has velocity and pressure meshes.
 Pure thermal flow only has velocity and temperature meshes.
 The active ones must be supplied to EulerDeform using the 
\family typewriter
v-mesh
\family default
, 
\family typewriter
p-mesh
\family default
, and 
\family typewriter
T-mesh
\family default
 variables.
 Unless you change something, these will be 
\family typewriter
v-mesh
\family default
, 
\family typewriter
p-mesh
\family default
, and 
\family typewriter
T-mesh
\family default
.
\end_layout

\begin_layout Standard
In addition, the energy equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:energy"

\end_inset

) is an advection-diffusion equation.
 When the mesh distorts, the advection needs to be modified for consistency.
 When you enable thermal evolution, Gale automatically creates 
\family typewriter
DisplacementField
\family default
.
 Set 
\family typewriter
displacementField
\family default
 to 
\family typewriter
DisplacementField
\family default
 and Gale will make the necessary corrections for advection.
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="39" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
velocityField
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
v-mesh
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
p-mesh
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
T-mesh
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DisplacementField
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wrapTop
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wrapLeft
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wrapRight
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticRight
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticRightTop
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticRightBottom
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticRightFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticRightBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticRightTopFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticRightTopBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticRightBottomFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticRightBottomBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticLeft
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticLeftTop
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticLeftBottom
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticLeftFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticLeftBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticLeftTopFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticLeftTopBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticLeftBottomFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticLeftBottomBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticTop
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticTopFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticTopBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticBottom
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticBottomFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticBottomBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
floatLeftTop
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
floatRightTop
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
xRightCoord
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
xLeftCoord
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Initial and Boundary Conditions
\end_layout

\begin_layout Standard
These sections specify initial and boundary conditions for the velocity
 and temperature.
 See Sections 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Velocity-Boundary-Conditions"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Temperature-Boundary-Conditions"

\end_inset

, and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Initial-Conditions"

\end_inset

 for more details.
\end_layout

\begin_layout Subsection
Variables
\begin_inset CommandInset label
LatexCommand label
name "sub:Variables"

\end_inset


\end_layout

\begin_layout Standard
The last section is where most of our numeric constants are placed.
 For example, how many time steps, how often to print output, etc.
 You may also declare variables for convenience (e.g., the number of grid
 points) and use it elsewhere, such as in the components.
 The more important parameters are:
\end_layout

\begin_layout Description
maxTimeSteps The number of time steps to take in the simulation.
 Each time step can cover a different amount of time.
 Gale determines how big of a step to take by dividing the grid size by
 the largest velocity during that time step.
 Unfortunately, there is no way to stop at a maximum time.
\end_layout

\begin_layout Description
enable-stokes Enable solution of the Stokes equations.
 The default is true.
\end_layout

\begin_layout Description
enable-thermal Enable temperature evolution.
 The default is false.
\end_layout

\begin_layout Description
enable-tracers Enable tracer particles.
 The default is false.
\end_layout

\begin_layout Description
checkPointEvery How often to write the checkpoint files (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Checkpointing"

\end_inset

).
\end_layout

\begin_layout Description
outputPath The directory to put output files in.
 Due to quirks in MPI, you may need to specify this as a full path (e.g.,
 
\family typewriter
/home/juser/simulations/myoutput
\family default
) rather than a relative path (
\family typewriter
myoutput
\family default
).
 
\end_layout

\begin_layout Description
dim The number of dimensions of the problem (2 or 3).
\end_layout

\begin_layout Description
minX,minY,minZ,maxX,maxY,maxZ The physical size of the box you are simulating.
 Note that this may be modified by 
\family typewriter
SurfaceAdaptor
\family default
 (Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Deformed-Upper-Boundary"

\end_inset

).
\end_layout

\begin_layout Description
nx,ny,nz The number of elements in each direction.
 Note that the number of grid points depends on the type of element.
 The pressure mesh uses discontinuous linear elements (
\begin_inset Formula $P_{-1}$
\end_inset

) which have three grid points per element in 2D and four grid points in
 3D.
 So if nx=16, ny=32, then there will be 16*32*3=1536 pressure grid points.
 The temperature mesh uses linear elements (
\begin_inset Formula $Q_{1}$
\end_inset

) which have their grid points on the corners.
 So the number of grid points is one larger than the number of elements
 (e.g., 64 elements 
\begin_inset Formula $\Rightarrow$
\end_inset

 65 grid points).
 Finally, the velocity mesh uses quadratic elements (
\begin_inset Formula $Q_{2}$
\end_inset

) which has grid points at the corners and in between.
 So if nx=16, ny=32, there will be (16*2+1)*(32*2+1)=2145 velocity grid
 points.
\end_layout

\begin_layout Description
shadowDepth When running in parallel, every parameter only computes quantities
 over a portion of the grid.
 To do this, each processor must keep copies of points that belong to other
 processors.
 This parameter specifies how wide the region of copied points is.
 You should never need to change this from 1.
\end_layout

\begin_layout Description
particlesPerCell The ideal number of particles in each element.
 Gale will attempt to keep the number of particles in each element close
 to this number.
 You will probably never need to change this from the default (40).
\end_layout

\begin_layout Description
dtFactor A factor to scale the time step.
 Ordinarily, Gale will automatically choose an appropriate step size to
 ensure a stable solution.
 If you find that to be too large of a step size, you can change 
\family typewriter
dtFactor
\family default
 to a smaller number.
 The default is 1 (no scaling).
\end_layout

\begin_layout Description
dt The size of the time step.
 Ordinarily, Gale will automatically choose an appropriate step size to
 ensure a stable solution.
 For some purposes, it may be convenient to explicitly specify the time
 step.
 Be careful! The time step will then be constant over the entire simulation.
 If the grid shrinks and/or velocities become larger than you expect, you
 may end up with an unstable simulation.
 The default is 0, which means to use dynamic time stepping.
\end_layout

\begin_layout Description
defaultDiffusivity This is the default diffusivity for all materials.
 It also indirectly sets the time step.
 See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Temperature-components"

\end_inset

.
 
\end_layout

\begin_layout Description
maxTimeStepSize The maximum size of the time step.
 This limit is applied after dtFactor and dt.
\end_layout

\begin_layout Description
seed A random number seed used when placing new particles.
 You should never need to change this variable, since changing it should
 not affect the simulation.
\end_layout

\begin_layout Section
Temperature components
\begin_inset CommandInset label
LatexCommand label
name "sec:Temperature-components"

\end_inset


\end_layout

\begin_layout Standard
To enable temperature evolution, set the variable 
\family typewriter
enable-thermal
\family default
 to 
\family typewriter
true
\family default
.
 You will also need to enable checkpointing for the temperature by adding
 the line 
\family typewriter
TemperatureField
\family default
 to the list 
\family typewriter
FieldVariablesToCheckpoint
\family default
.
\end_layout

\begin_layout Standard
You need to specify the thermal diffusivity.
 You can specify a single diffusivity for all materials by setting the variable
 
\family typewriter
defaultDiffusivity
\family default
.
 You can override this default for each material (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Materials"

\end_inset

).
\end_layout

\begin_layout Standard
You will also need to add in initial and boundary conditions (see Sections
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Temperature-Boundary-Conditions"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Initial-Conditions"

\end_inset

).
 Finally, you will need to set material properties for the buoyancy forces
 (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Buoyancy-Forces"

\end_inset

) and radiogenic heating (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Materials"

\end_inset

).
\end_layout

\begin_layout Standard
This should normally work without any tweaking.
 However, if your model has strongly distorted elements, then you may see
 anomalously high temperature variations.
 Fo fix that, modify the prefactor for SUPG (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Thermal-Convection"

\end_inset

) by setting the variable 
\family typewriter
supgFactor
\family default
 to something smaller.
 A good first guess is to try 0.5.
 Note that if you set 
\family typewriter
supgFactor
\family default
 too small, then you may see other numerical artifacts.
\end_layout

\begin_layout Section
Shapes
\begin_inset CommandInset label
LatexCommand label
name "sec:Shapes"

\end_inset


\end_layout

\begin_layout Standard
When setting up the simulation, Gale first creates the computational domain.
 That domain may be irregular if you are using a 
\family typewriter
SurfaceAdaptor
\family default
 (Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Deformed-Upper-Boundary"

\end_inset

).
 Gale then starts putting down materials within that domain.
 When putting down a material at a particular point, Gale asks all of the
 materials (Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Materials"

\end_inset

) whether that point belongs to that material.
 So it is perfectly fine to have material shapes that cover more than the
 computational domain.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Computational_Domain"

\end_inset

 shows an example with irregular top and bottom materials.
 Materials for the upper and lower lithosphere are defined in large, regular
 boxes, but material is only created within the blue region.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/computational_domain.pdf
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Computational_Domain"

\end_inset

Areas covered by material box shapes and the computational domain.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As a simple example, you can create a 3D box
\end_layout

\begin_layout LyX-Code
”box”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
  ”Type”: 
\begin_inset Quotes sld
\end_inset

Box
\begin_inset Quotes srd
\end_inset

,
\end_layout

\begin_layout LyX-Code
  ”startX”: 
\begin_inset Quotes sld
\end_inset

0.0
\begin_inset Quotes srd
\end_inset

,
\end_layout

\begin_layout LyX-Code
  ”endX”: 
\begin_inset Quotes sld
\end_inset

1.0
\begin_inset Quotes srd
\end_inset

,
\end_layout

\begin_layout LyX-Code
  ”startY”: 
\begin_inset Quotes sld
\end_inset

0.0
\begin_inset Quotes srd
\end_inset

,
\end_layout

\begin_layout LyX-Code
  ”endY”: 
\begin_inset Quotes sld
\end_inset

1.0
\begin_inset Quotes srd
\end_inset

,
\end_layout

\begin_layout LyX-Code
  ”startZ”: 
\begin_inset Quotes sld
\end_inset

0.0
\begin_inset Quotes srd
\end_inset

,
\end_layout

\begin_layout LyX-Code
  ”endZ”: 
\begin_inset Quotes sld
\end_inset

1.0
\begin_inset Quotes srd
\end_inset


\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
You can perform operations on shapes to create new shapes.
 For example, if you also create a sphere
\end_layout

\begin_layout LyX-Code
”sphere”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
  ”Type”: 
\begin_inset Quotes sld
\end_inset

EquationShape
\begin_inset Quotes srd
\end_inset

,
\end_layout

\begin_layout LyX-Code
  
\begin_inset Quotes sld
\end_inset

equation
\begin_inset Quotes srd
\end_inset

: 
\begin_inset Quotes sld
\end_inset

1-(x*x + y*y + z*z)
\begin_inset Quotes srd
\end_inset


\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
then you can compose it with the box to create a new shape
\end_layout

\begin_layout LyX-Code
\begin_inset Quotes sld
\end_inset

nonSphere
\begin_inset Quotes srd
\end_inset

:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
  ”Type”: 
\begin_inset Quotes sld
\end_inset

Intersection
\begin_inset Quotes srd
\end_inset

,
\end_layout

\begin_layout LyX-Code
  ”shapes”: [
\end_layout

\begin_layout LyX-Code
    
\begin_inset Quotes sld
\end_inset

box
\begin_inset Quotes srd
\end_inset

,
\end_layout

\begin_layout LyX-Code
    
\begin_inset Quotes sld
\end_inset

!sphere
\begin_inset Quotes srd
\end_inset


\end_layout

\begin_layout LyX-Code
  ]
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
Note that the exclamation point 
\begin_inset Quotes sld
\end_inset

!
\begin_inset Quotes srd
\end_inset

 in front of 
\family typewriter
simpleSphere
\family default
 means 
\begin_inset Quotes sld
\end_inset

not.
\begin_inset Quotes srd
\end_inset

 So this 
\family typewriter
Intersection
\family default
 creates a shape that is the intersection of the box and everywhere outside
 of the sphere.
 You can list an arbitrary number of shapes in 
\family typewriter
Intersection
\family default
.
 Also, you can use 
\family typewriter
Union
\family default
 to create a shape that covers all of the input shapes.
\end_layout

\begin_layout Standard
In addition, every shape accepts the translation variables 
\family typewriter
CentreX
\family default
, 
\family typewriter
CentreY
\family default
, and 
\family typewriter
CentreZ
\family default
, and the Euler angles 
\family typewriter
alpha
\family default
, 
\family typewriter
beta
\family default
, and 
\family typewriter
gamma
\family default
.
 So if you modify the Box example above to
\end_layout

\begin_layout LyX-Code
”simpleBox”: {
\end_layout

\begin_layout LyX-Code
  ”Type”: ”Box”,
\end_layout

\begin_layout LyX-Code
  ”CentreX”: ”1.0”,
\end_layout

\begin_layout LyX-Code
  ”startX”: ”0.0”,
\end_layout

\begin_layout LyX-Code
  ”endX”: ”1.0”,
\end_layout

\begin_layout LyX-Code
  ”startY”: ”0.0”,
\end_layout

\begin_layout LyX-Code
  ”endY”: ”1.0”,
\end_layout

\begin_layout LyX-Code
  ”startZ”: ”0.0”,
\end_layout

\begin_layout LyX-Code
  ”endZ”: ”1.0”
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
then the box will actually span from 
\begin_inset Formula $x=1$
\end_inset

 to 
\begin_inset Formula $x=2$
\end_inset

.
\end_layout

\begin_layout Standard
The Euler angles use the 
\begin_inset Formula $y$
\end_inset

 convention, first rotating about the original 
\begin_inset Formula $z$
\end_inset

 axis an angle 
\begin_inset Formula $\gamma$
\end_inset

, then rotating around the new 
\begin_inset Formula $y$
\end_inset

 axis an angle 
\begin_inset Formula $\beta$
\end_inset

, and finally a rotation around the new 
\begin_inset Formula $z$
\end_inset

 axis an angle 
\begin_inset Formula $\alpha$
\end_inset

.
 Specifically, these rotations are expressed through the rotation matrix
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
R=\left(\begin{array}{ccc}
-\sin\alpha\sin\gamma+\cos\alpha\cos\beta\cos\gamma & \sin\alpha\cos\gamma+\cos\beta\sin\gamma\cos\alpha & -\cos\alpha\sin\beta\\
-\cos\alpha\sin\gamma-\cos\beta\cos\gamma\sin\alpha & \cos\alpha\cos\gamma-\cos\beta\sin\gamma\sin\alpha & \sin\alpha\sin\beta\\
\sin\beta\cos\alpha & \sin\beta\sin\alpha & \cos\beta
\end{array}\right).
\]

\end_inset

 So when Gale attempts to figure out whether a coordinate 
\begin_inset Formula $(x,y,z)$
\end_inset

 is inside a shape, it creates a new coordinate
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left(\begin{array}{c}
x'\\
y'\\
z'
\end{array}\right)=\left(\left(\begin{array}{c}
x\\
y\\
z
\end{array}\right)-\left(\begin{array}{c}
CentreX\\
CentreY\\
CentreZ
\end{array}\right)\right)R,
\]

\end_inset

 which it uses in the formulas below.
 Note that the rotation is around the center of the shape.
 So, for example, a box will rotate around the center of the box, not one
 of its corners.
\end_layout

\begin_layout Standard
Finally, you can command Gale to invert the shape with the 
\family typewriter
invert
\family default
 variable, making the inside the outside and vice versa.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CentreX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CentreY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CentreZ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
alpha
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
beta
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
gamma
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
invert
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
EquationShape
\end_layout

\begin_layout Standard
This shape is defined by a user-defined equation.
 Specifically, a point is inside the shape if
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
equation>=0.
\]

\end_inset

 So to define a sphere centered at (1,2,1.5) with radius=5, set
\end_layout

\begin_layout LyX-Code
\begin_inset Quotes sld
\end_inset

equation
\begin_inset Quotes srd
\end_inset

: 
\begin_inset Quotes sld
\end_inset

5^2-((x-1)^2 + (y-2)^2 + (z-1.5)^2)
\begin_inset Quotes srd
\end_inset


\end_layout

\begin_layout Subsection
Box
\end_layout

\begin_layout Standard
This is a simple rectangular box.
 A point is inside the shape if 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{c}
startX<x<endX\\
startY<y<endY\\
startZ<z<endZ
\end{array}
\]

\end_inset

Alternately, you can use widths, in which case 
\begin_inset Formula 
\[
\begin{array}{c}
|x|<widthX/2\\
|y|<widthY/2\\
|z|<widthZ/2
\end{array}.
\]

\end_inset

You may mix and match these specifications (e.g., use start/end for 
\begin_inset Formula $x$
\end_inset

, and width for 
\begin_inset Formula $y$
\end_inset

).
 If both are specified for one coordinate, Gale will use start and end.
 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
widthX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
widthY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
widthZ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
PolygonShape
\end_layout

\begin_layout Standard
This is primarily a two-dimensional shape.
 The input to this shape is a list of vertices.
 To figure out whether a point is inside the polygon, Gale adds up all of
 the angles of the vectors going to the vertices.
 If the point is inside the polygon, then the angles will sum to 
\begin_inset Formula $\pm2\pi$
\end_inset

, depending on which direction you specify the vertices.
 If the point is outside the polygon, then the angles sum to 0.
 A simple example is a triangle
\end_layout

\begin_layout LyX-Code
”triangleShape”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
  ”Type”: ”PolygonShape”
\end_layout

\begin_layout LyX-Code
  ”vertices
\begin_inset Quotes srd
\end_inset

: [
\end_layout

\begin_layout LyX-Code
    
\begin_inset Quotes sld
\end_inset

asciidata
\begin_inset Quotes srd
\end_inset

,
\end_layout

\begin_layout LyX-Code
    [”x”, 
\begin_inset Quotes sld
\end_inset

y
\begin_inset Quotes srd
\end_inset

],
\end_layout

\begin_layout LyX-Code
    0.0, 0.0,
\end_layout

\begin_layout LyX-Code
    1.0, 0.0,
\end_layout

\begin_layout LyX-Code
    1.0, 1.0
\end_layout

\begin_layout LyX-Code
  ]
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
This creates a triangle with vertices at (0,0), (1,0), (1,1).
\end_layout

\begin_layout Standard
You can extrude this shape into three dimensions by specifying startZ and
 endZ.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
startZ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
endZ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Materials
\begin_inset CommandInset label
LatexCommand label
name "sec:Materials"

\end_inset


\end_layout

\begin_layout Standard
Gale supports two kinds of rheologies: viscous and yielding.
 You can combine these two rheologies to create a more realistic composite
 rheology.
 You then pair this composite rheology with a shape to actually lay down
 material on the grid.
 As a simple example, you can create a viscous rheology
\end_layout

\begin_layout LyX-Code
”viscousRheology”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
  
\begin_inset Quotes sld
\end_inset

Type
\begin_inset Quotes srd
\end_inset

: 
\begin_inset Quotes sld
\end_inset

MaterialViscosity
\begin_inset Quotes srd
\end_inset

,
\end_layout

\begin_layout LyX-Code
  
\begin_inset Quotes sld
\end_inset

eta0
\begin_inset Quotes srd
\end_inset

: 
\begin_inset Quotes sld
\end_inset

10.0
\begin_inset Quotes srd
\end_inset


\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
and a Von Mises yielding rheology
\end_layout

\begin_layout LyX-Code
”strainWeakening”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
  ”Type”: ”StrainWeakening”,
\end_layout

\begin_layout LyX-Code
  ”TimeIntegrator”: ”timeIntegrator”,
\end_layout

\begin_layout LyX-Code
  ”MaterialPointsSwarm”: ”materialSwarm”,
\end_layout

\begin_layout LyX-Code
  ”softeningStrain”: ”0.1”,
\end_layout

\begin_layout LyX-Code
  ”initialDamageFraction”: ”0.0”,
\end_layout

\begin_layout LyX-Code
  ”initialDamageWavenumber”: ”0.5”,
\end_layout

\begin_layout LyX-Code
  ”initialDamageFactor”: ”0.5”,
\end_layout

\begin_layout LyX-Code
  ”healingRate”: ”0.0”
\end_layout

\begin_layout LyX-Code
},
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

”yieldingRheology”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
  ”Type”: ”VonMises”,
\end_layout

\begin_layout LyX-Code
  ”cohesion”: ”10.0”,
\end_layout

\begin_layout LyX-Code
  ”cohesionAfterSoftening”: ”1.0”
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
and combine them together with 
\family typewriter
materialShape
\family default
 (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Shapes"

\end_inset

 on how to create shapes)
\end_layout

\begin_layout LyX-Code
”yieldingMaterial”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
  ”Type”: ”RheologyMaterial”,
\end_layout

\begin_layout LyX-Code
  ”Shape”: ”materialShape”,
\end_layout

\begin_layout LyX-Code
  ”Rheology”: [
\end_layout

\begin_layout LyX-Code
    ”viscousRheology”,
\end_layout

\begin_layout LyX-Code
    ”yieldingRheology”
\end_layout

\begin_layout LyX-Code
  ]
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
For each material, you can specify a density, a coefficient of thermal expansivi
ty (
\begin_inset Formula $\alpha$
\end_inset

), and a thermal diffusivity.
 To make a pressure or temperature dependent density, set 
\family typewriter
densityEquation
\family default
 instead of 
\family typewriter
density
\family default
.
 For example, specifying
\end_layout

\begin_layout LyX-Code
”densityEquation”: ”p<1 ? 2 : 1”
\end_layout

\begin_layout Standard
will set the density to 2 when the pressure (
\family typewriter
p
\family default
) is less than 1, and 1 otherwise.
 For temperature dependence, use the variable 
\family typewriter
T
\family default
.
 Similarly, to set a pressure or temperature dependent thermal expansity,
 specify 
\family typewriter
alphaEquation
\family default
 instead of 
\family typewriter
alpha
\family default
.
\end_layout

\begin_layout Standard
The density and expansivity are used by the 
\family typewriter
BuoyancyForceTerm
\family default
 component (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:BouyancyForceTerm"

\end_inset

) to create buoyancy forces.
 The diffusivity is used by the temperature solver (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Temperature-components"

\end_inset

).
\end_layout

\begin_layout Standard
You can also specify multiple radiogenic heating rates (
\family typewriter
Q
\family default
) and radiogenic timescales (
\family typewriter

\begin_inset Formula $\lambda$
\end_inset


\family default
).
 This simulates the action of multiple radioactive materials with different
 half-lives.
 To enable this, you must provide a list of 
\family typewriter
Q
\family default
's and 
\begin_inset Formula $\lambda$
\end_inset

's.
 For example, to specify two different radioactive species, add something
 like
\end_layout

\begin_layout LyX-Code
”heatingElements”: [
\end_layout

\begin_layout LyX-Code
  {
\end_layout

\begin_layout LyX-Code
    ”Q”: ”1.0”
\end_layout

\begin_layout LyX-Code
    ”lambda”: ”1.0”
\end_layout

\begin_layout LyX-Code
  },
\end_layout

\begin_layout LyX-Code
  {
\end_layout

\begin_layout LyX-Code
    ”Q”: ”2.0”
\end_layout

\begin_layout LyX-Code
    ”lambda”: ”2.0”
\end_layout

\begin_layout LyX-Code
  }
\end_layout

\begin_layout LyX-Code
]
\end_layout

\begin_layout Standard
At time 
\begin_inset Formula $t$
\end_inset

, each radioactive element will generate
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Qe^{-\lambda t}
\]

\end_inset

 units of energy.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
density
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
alpha
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
diffusivity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Q
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lambda
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
StoreVisc and StoreStress
\begin_inset CommandInset label
LatexCommand label
name "sub:StoreViscosity"

\end_inset


\end_layout

\begin_layout Standard
These are not rheologies per se, but rather extra fields where Gale saves
 the effective isotropic viscosity and components of the stress tensor.
 For pure viscous materials, the effective viscosity will be the same as
 the viscosity you supply.
 For yielding rheologies, the effective viscosity will change as the particle
 yields.
\end_layout

\begin_layout Subsection
Viscous
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:MaterialViscosity"

\end_inset

MaterialViscosity
\end_layout

\begin_layout Standard
This is the simplest rheology.
 There is only one variable, the viscosity 
\family typewriter
eta0
\family default
.
\end_layout

\begin_layout Standard
\align center
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
eta0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Frank-Kamenetskii"

\end_inset

Frank-Kamenetskii
\end_layout

\begin_layout Standard
This is a temperature-dependent viscosity
\begin_inset Formula 
\[
eta=eta0*\exp\left(-theta*T\right).
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
eta0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
theta
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Arrhenius"

\end_inset

Arrhenius
\end_layout

\begin_layout Standard
This is another temperature dependent viscosity
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
eta=eta0*\exp\left(\left(activationEnergy+activationVolume*(height-y)\right)/\left(T+referenceTemperature\right)\right).
\]

\end_inset

 Note that 
\begin_inset Formula $height$
\end_inset

 is the height of the column, not the overall maximum height of the material.
 Also, 
\begin_inset Formula $height$
\end_inset

 does not consider material boundaries.
 So if you have an air layer, you may get surprising results.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
eta0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
activationEnergy
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
activationVolume
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
referenceTemperature
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:NonNewtonian"

\end_inset

NonNewtonian
\end_layout

\begin_layout Standard
This is a strain rate dependent rheology.
 It assumes that the material obeys the relation 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\dot{\varepsilon}=A\tau^{n}\exp\left(-T_{0}/T\right),
\]

\end_inset

 where 
\begin_inset Formula $\dot{\varepsilon}$
\end_inset

 is the strain rate, 
\begin_inset Formula $\tau$
\end_inset

 is the stress, and 
\begin_inset Formula $A$
\end_inset

 , 
\begin_inset Formula $T_{0}$
\end_inset

, and 
\begin_inset Formula $n$
\end_inset

 are constants.
 Using 
\begin_inset Formula 
\[
\tau=2\eta\dot{\varepsilon},
\]

\end_inset

 we can write the viscosity as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\eta=\frac{\dot{\varepsilon}^{\frac{1}{n}-1}\exp\left(T_{0}/nT\right)}{2A^{\frac{1}{n}}}.
\]

\end_inset


\end_layout

\begin_layout Standard
When setting the viscosity for the first solve, the strain rate has not
 been calculated yet.
 So you must supply a reference strain rate for that first step.
 Gale uses this viscosity to find a solution and thus a new strain rate.
 Gale then iterates until the strain rate converges.
 
\end_layout

\begin_layout Standard
You may set maximum and minimum values for the resulting viscosity.
 If the temperature is greater than the melting temperature, then the viscosity
 is just set to 
\family typewriter
minViscosity
\family default
.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
T_0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
T_melt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\infty$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
refStrainRate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
minViscosity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
maxViscosity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Yielding
\end_layout

\begin_layout Standard
Yielding rheologies are a bit more complicated.
 
\end_layout

\begin_layout Subsubsection
StrainWeakening
\end_layout

\begin_layout Standard
First you need to create a 
\family typewriter
StrainWeakening
\family default
 component.
 
\family typewriter
StrainWeakening
\family default
 is mainly used to define an initial distribution of strain in a material
 and to calculate the accumulated strain on each particle.
 To that end, it requires a number of parameters.
\end_layout

\begin_layout Description
TimeIntegrator This is the component used for time integration to accumulate
 strain.
 This will usually be 
\family typewriter
timeIntegrator
\family default
.
\end_layout

\begin_layout Description
MaterialPointsSwarm This is the swarm of particles associated with this
 rheology.
 This will usually be 
\family typewriter
materialSwarm
\family default
.
\end_layout

\begin_layout Description
healingRate With this parameter, accumulated strain can decrease.
 Specifically, the time derivative of accumulated strain becomes
\begin_inset Formula 
\[
\frac{\sigma_{yield}}{\eta}\left(\frac{\beta}{1-\beta}-healingRate\right),
\]

\end_inset

 where 
\begin_inset Formula $\beta\equiv\sigma_{yield}/\sigma$
\end_inset

, 
\begin_inset Formula $\sigma_{yield}$
\end_inset

 is the yield stress, 
\begin_inset Formula $\sigma$
\end_inset

 is some measure of the current stress (e.g., the second invariant of the
 stress tensor), and 
\begin_inset Formula $\eta$
\end_inset

 is the isotropic viscosity.
 Note that the healing rate should be between 0 and 1.
\end_layout

\begin_layout Description
initialSofteningStrain The strain at which the material starts to yield.
\end_layout

\begin_layout Description
finalSofteningStrain The strain at which the material has fully yielded.
\end_layout

\begin_layout Description
initialDamageFraction The chance that an individual material particle will
 have a non-zero initial strain.
\end_layout

\begin_layout Description
initialDamageWaveNumber The wavenumber for the initial random strain.
 To avoid having initial strain on the edges of the box, this should be
 set to the inverse of the horizontal length of the box.
\end_layout

\begin_layout Description
initialDamageFactor The maximum initial random strain for a particle is
\begin_inset Newline newline
\end_inset


\family typewriter
initialDamageFactor
\family default
*
\family typewriter
finalSofteningStrain
\family default
.
 
\end_layout

\begin_layout Description
randomSeed A random number seed used when computing which particles are
 initially strained.
\end_layout

\begin_layout Description
initialStrainShape If defined, the initial random strain will only occur
 within this shape (outside the shape the initial random strain will be
 zero).
\end_layout

\begin_layout Description
strainLimitedShape If defined, the strain within this shape will not grow
 beyond 
\family typewriter
strainLimit
\family default
.
\end_layout

\begin_layout Description
strainLimit The maximum amount of strain allowed within 
\family typewriter
strainLimitedShape
\family default
.
\end_layout

\begin_layout Standard
For further reference, we define a strain weakening ratio 
\begin_inset Formula $\alpha\equiv\min\left(1,\gamma/\gamma_{softening}\right)$
\end_inset

, where 
\begin_inset Formula $\gamma$
\end_inset

 is the accumulated strain, and 
\begin_inset Formula $\gamma_{softening}$
\end_inset

 is the softening strain.
 From that we define the effective cohesion 
\begin_inset Formula $C'\equiv C_{pristine}\left(1-\alpha\right)+C_{yielded}\alpha$
\end_inset

 and effective friction coefficient 
\begin_inset Formula $\tan\phi'=\tan\phi_{pristine}\left(1-\alpha\right)+\tan\phi_{yielded}\alpha$
\end_inset

.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TimeIntegrator
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MaterialPointsSwarm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
healingRate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
initialsofteningStrain
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
finalsofteningStrain
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\infty$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
initialDamageFraction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
initialDamageWaveNumber
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-1.0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
initialDamageFactor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
randomSeed
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
initialStrainShape
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:VonMises"

\end_inset

VonMises
\end_layout

\begin_layout Standard
This is the simplest yielding rheology in Gale.
 The yielding stress is simply the effective cohesion.
 Specifically, the yielding condition specifies
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\sqrt{J_{2}}=C'
\]

\end_inset

where 
\begin_inset Formula $J_{2}$
\end_inset

 is the second invariant of the deviatoric stress tensor.
 This rheology only has a few input parameters:
\end_layout

\begin_layout Itemize

\family typewriter
cohesion
\family default
 and 
\family typewriter
cohesionAfterSoftening
\family default
 have the obvious meanings.
 
\end_layout

\begin_layout Itemize

\family typewriter
minimumYieldStress
\family default
 sets an absolute minimum to the stress required to make the material yield.
\end_layout

\begin_layout Itemize

\family typewriter
StrainRateSoftening
\family default
 is a Boolean variable that changes how the constitutive matrix is modified
 when the material has yielded.
 If 
\family typewriter
StrainRateSoftening
\family default
 is 
\family typewriter
True
\family default
, then the viscosity is set to 
\begin_inset Formula 
\[
\eta_{new}=2C'^{2}\eta/\left(C'^{2}+J_{2}\right).
\]

\end_inset

 This is a way of creeping up on the correct viscosity to avoid setting
 the viscosity too low.
 Otherwise the viscosity is set to
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula 
\[
\eta_{new}=\eta C'/\sqrt{J_{2}},
\]

\end_inset

 which essentially sets the stress of the particle to the yield stress.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cohesion
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cohesionAfterSoftening
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
minimumYieldStress
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
StrainRateSoftening
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:DruckerPrager"

\end_inset

DruckerPrager
\end_layout

\begin_layout Standard
This rheology uses the same parameters as Von Mises, but also adds a friction
 coefficient that can soften.
 Specifically, the yield condition is
\begin_inset Formula 
\[
\sqrt{J_{2}}=Ap+B,
\]

\end_inset

where 
\begin_inset Formula $p$
\end_inset

 is the pressure.
 The value of the constants 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 are different from 2D and 3D.
 In 2D, Drucker-Prager and Mohr-Coulomb are identical.
 Specifically, if we write the Mohr-Coulomb yield stress as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\sigma_{MC}=C'+\sigma_{\bot}\tan\phi',
\]

\end_inset

 then
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{ccc}
A & = & \sin\phi'\\
B & = & C'\cos\phi'
\end{array}.
\]

\end_inset

 In 3D, the mapping between friction angles and cohesion to 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 is more complicated 
\begin_inset Formula 
\[
\begin{array}{ccc}
A & = & \frac{2\sin\phi'}{\sqrt{3}\left(3-\sin\phi'\right)}\\
B & = & \frac{6C'\cos\phi'}{\sqrt{3}\left(3-\sin\phi'\right)}
\end{array}.
\]

\end_inset

 You can also write a Mohr-Coulomb rheology in this form, but then the constants
 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 depend on 
\begin_inset Formula $J_{2}$
\end_inset

.
 So reducing the viscosity does not result in a linear decrease in 
\begin_inset Formula $J_{2}$
\end_inset

.
 This makes it difficult for the code to find a solution.
 In practice, the yield surface for Drucker-Prager and Mohr-Coulomb are
 not too dissimilar.
 Mohr-Coulomb's yield surface is a six-sided cone, while Drucker-Prager's
 yield surface is the smooth cone inscribing the Mohr-Coulomb segmented
 cone.
\end_layout

\begin_layout Standard
Note that 
\family typewriter
minimumYieldStress
\family default
 is interpreted differently.
 If it is zero (the default), then the actual minimum yield stress will
 be the effective cohesion.
 This is because there tends to be numerical problems when using a very
 small minimum yield stress under tension.
\end_layout

\begin_layout Standard
When reducing the viscosity, if the second invariant of the strain rate
 tensor 
\begin_inset Formula $\dot{\epsilon}$
\end_inset

 is greater than 
\family typewriter
maximumStrainRate
\family default
 (
\begin_inset Formula $\dot{\epsilon}_{max}$
\end_inset

) and 
\begin_inset Formula $\dot{\epsilon}_{max}\neq0$
\end_inset

, then Drucker-Prager sets the new viscosity to 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\eta_{new}=\frac{Ap+B}{\sqrt{\dot{\epsilon}_{max}}}.
\]

\end_inset

 Otherwise, Drucker-Prager sets the new viscosity such that the stress will
 equal the yield stress
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\eta_{new}=\frac{Ap+B}{\sqrt{\dot{\epsilon}}}.
\]

\end_inset

After that, if 
\begin_inset Formula $\eta_{new}$
\end_inset

 is less than 
\family typewriter
minimumViscosity
\family default
, then 
\begin_inset Formula $\eta_{new}$
\end_inset

 is set to 
\family typewriter
minimumViscosity
\family default
.
 See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Yield-Fix"

\end_inset

 for more details on how to use 
\family typewriter
maxStrainRate
\family default
 and 
\family typewriter
minimumViscosity
\family default
.
\end_layout

\begin_layout Standard
Also, the Drucker-Prager implementation allows you to specify that material
 near the boundary will have different yielding properties.
 This is useful for simulating frictional boundaries.
 For example, if 
\family typewriter
boundaryLeft
\family default
 is 
\family typewriter
True
\family default
, then in the element on the left boundary, Gale will use 
\family typewriter
boundaryCohesion
\family default
 instead of 
\family typewriter
cohesion
\family default
, 
\family typewriter
boundaryFrictionCoefficient
\family default
 instead of 
\family typewriter
frictionCoefficient
\family default
, etc.
\end_layout

\begin_layout Standard
Finally, DruckerPrager requires a pressure.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="17" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PressureField
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
frictionCoefficient
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
frictionCoefficientAfterSoftening
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
minimumYieldStress
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 (see above)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
minimumViscosity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
maxStrainRate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryCohesion
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryCohesionAfterSoftening
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryFrictionCoefficient
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryFrictionCoefficientAfterSoftening
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryLeft
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryRight
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryTop
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryBottom
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
See also Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:VonMises"

\end_inset

.
\end_layout

\begin_layout Subsubsection
FaultingMoresiMulhaus2006
\end_layout

\begin_layout Standard
This is a fairly complicated non-isotropic rheology.
 The full details can be found in Moresi and Mülhaus (2006) 
\begin_inset CommandInset citation
LatexCommand cite
key "Moresi faulting"

\end_inset

, but essentially it keeps track of which direction a material is strained.
 To do so, it uses a component called 
\family typewriter
Director
\family default
.
 This would usually be
\end_layout

\begin_layout LyX-Code
”director”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
  ”Type”: ”Director”,
\end_layout

\begin_layout LyX-Code
  ”TimeIntegrator”: ”timeIntegrator”,
\end_layout

\begin_layout LyX-Code
  ”VelocityGradientsField”: ”VelocityGradientsField”,
\end_layout

\begin_layout LyX-Code
  ”MaterialPointsSwarm”: ”materialSwarm”,
\end_layout

\begin_layout LyX-Code
  ”initialDirectionX”: ”0.0”,
\end_layout

\begin_layout LyX-Code
  ”initialDirectionY”: ”1.0”,
\end_layout

\begin_layout LyX-Code
  ”initialDirectionZ”: ”0.0”,
\end_layout

\begin_layout LyX-Code
  ”dontUpdate”: ”True”
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
Otherwise, it adds one variable not present in 
\family typewriter
DruckerPrager
\family default
: 
\family typewriter
ignoreOldOrientation
\family default
.
 This tells Gale whether it should check to see whether material will weaken
 further in the current direction, or if it should try every direction equally
 each time step.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cohesion
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cohesionAfterSoftening
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
frictionCoefficient
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
frictionCoefficientAfterSoftening
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
minimumYieldStress
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ignoreOldOrientation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Boundary Conditions
\begin_inset CommandInset label
LatexCommand label
name "sec:Boundary-Conditions"

\end_inset


\end_layout

\begin_layout Standard
Gale's computational domain is logically Euclidean.
 So in 2D, there are four boundaries: 
\family typewriter
right
\family default
, 
\family typewriter
left
\family default
, 
\family typewriter
top
\family default
, and 
\family typewriter
bottom
\family default
.
 3D adds 
\family typewriter
front
\family default
 and 
\family typewriter
back
\family default
.
 Note that the boundaries in the 
\begin_inset Formula $z$
\end_inset

 axis are 
\family typewriter
front
\family default
 and 
\family typewriter
back
\family default
, not 
\family typewriter
top
\family default
 and 
\family typewriter
bottom
\family default
.
 In many cases, this makes it simple to switch between 2D and 3D.
 When doing this, you may ignore the warning that the 
\begin_inset Formula $z$
\end_inset

 boundaries are empty in 2D.
\end_layout

\begin_layout Subsection
Velocity Boundary Conditions
\begin_inset CommandInset label
LatexCommand label
name "sub:Velocity-Boundary-Conditions"

\end_inset


\end_layout

\begin_layout Standard
To impose boundary conditions on the velocity, add a composite variable
 condition (
\family typewriter
CompositeVC
\family default
) to the input file.
 Within that 
\family typewriter
CompositeVC
\family default
, add a list of conditions by using 
\family typewriter
WallVC
\family default
s.
 Within each 
\family typewriter
WallVC
\family default
, specify which boundary and what the velocity's value is.
 For example, to set the 
\begin_inset Formula $y$
\end_inset

 velocity on the bottom to zero, add
\end_layout

\begin_layout LyX-Code
”velocityBCs”: {
\end_layout

\begin_layout LyX-Code
  ”type”: ”CompositeVC”,
\end_layout

\begin_layout LyX-Code
  ”vcList”: [
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
      ”type”: ”WallVC”,
\end_layout

\begin_layout LyX-Code
      ”wall”: ”bottom”,
\end_layout

\begin_layout LyX-Code
      ”variables”: [
\end_layout

\begin_layout LyX-Code
        {
\end_layout

\begin_layout LyX-Code
          ”name”: ”vy”,
\end_layout

\begin_layout LyX-Code
          ”value”: ”0”
\end_layout

\begin_layout LyX-Code
        }
\end_layout

\begin_layout LyX-Code
      ]
\end_layout

\begin_layout LyX-Code
    } 
\end_layout

\begin_layout LyX-Code
  ]
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
If, instead, you set 
\family typewriter
vy
\family default
 to a non-zero value, then the boundary will move as the simulation proceeds.
 If you want the sides to remain fixed, then you probably want flux boundaries,
 in which case you will also have to specify a few more things (see Section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Flux-Boundary-Conditions"

\end_inset

).
\end_layout

\begin_layout Standard
You can also set the velocity to a function.
 For example, to also set the 
\begin_inset Formula $x$
\end_inset

 velocity to have a Gaussian distribution 
\begin_inset Formula $\exp\left(-\left(\frac{x-0.5}{0.1}\right)^{2}\right)$
\end_inset


\end_layout

\begin_layout LyX-Code
”velocityBCs”: {
\end_layout

\begin_layout LyX-Code
  ”type”: ”CompositeVC”,
\end_layout

\begin_layout LyX-Code
  ”vcList”: [
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
      ”type”: ”WallVC”,
\end_layout

\begin_layout LyX-Code
      ”wall”: ”bottom”,
\end_layout

\begin_layout LyX-Code
      ”variables”: [
\end_layout

\begin_layout LyX-Code
        {
\end_layout

\begin_layout LyX-Code
          ”name”: ”vy”,
\end_layout

\begin_layout LyX-Code
          ”value”: ”0”
\end_layout

\begin_layout LyX-Code
        },
\end_layout

\begin_layout LyX-Code
        {
\end_layout

\begin_layout LyX-Code
          ”name”: ”vx”,
\end_layout

\begin_layout LyX-Code
          ”value”: ”exp(-((x-0.5)/0.1)^2)”
\end_layout

\begin_layout LyX-Code
        }
\end_layout

\begin_layout LyX-Code
      ]
\end_layout

\begin_layout LyX-Code
    } 
\end_layout

\begin_layout LyX-Code
  ]
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
If you need to specify velocities for only part of the boundary (e.g., the
 left half moves at vx=1, the right half is unconstrained), then you should
 use a 
\family typewriter
MeshShapeVC
\family default
 (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Fixing-Internal-Degrees"

\end_inset

).
\end_layout

\begin_layout Subsection
Flux Boundary Conditions
\begin_inset CommandInset label
LatexCommand label
name "sub:Flux-Boundary-Conditions"

\end_inset


\end_layout

\begin_layout Standard
Let's assume you wish to have material flow across the boundary instead
 of having the boundary move.
 A simple example would be like Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-deformed-bottom"

\end_inset

, where material flows in from the left and out through the bottom.
 There are two things that you must specify for this to work.
\end_layout

\begin_layout Enumerate

\series bold
The boundaries do not move.

\series default
 For this model, you need to ensure that, while the material moves, neither
 the bottom nor left boundaries move.
 Do this by specifying
\end_layout

\begin_deeper
\begin_layout LyX-Code

\family typewriter
”staticBottom”: ”True”
\begin_inset Newline newline
\end_inset

”staticLeft”: ”True”
\end_layout

\begin_layout Standard
in EulerDeform (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:EulerDeform"

\end_inset

).
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Velocity conditions on the boundaries.

\series default
 Again, for slab subduction this involves inflow conditions on the left
 boundary and outflow conditions on bottom.
 See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Velocity-Boundary-Conditions"

\end_inset

 for details.
 The other boundaries have no-slip conditions.
\end_layout

\begin_layout Subsection
Stress Boundary Conditions
\begin_inset CommandInset label
LatexCommand label
name "sub:Stress-Boundary-Conditions"

\end_inset


\end_layout

\begin_layout Standard
If the nature of your problem is that stresses are specified on the boundary
 rather than velocities, you can specify those conditions using the 
\family typewriter
StressBC
\family default
 component.
 For example, if you want to simulate an extension model with isostasy,
 this is equivalent to adding a supporting stress on the bottom.
 In equilibrium, the supporting stress cancels the force of gravity, and
 material does not flow across the boundary.
 When material piles up, the supporting stress is too weak to support the
 material, and material flows out.
 Similarly, when material thins out, the supporting stress overcomes gravity
 and material flows in.
\end_layout

\begin_layout Standard

\family typewriter
StressBC
\family default
 is a component, so it must be inside the list of components (see Section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Components"

\end_inset

), not outside the list like the velocity boundary conditions.
 For example, to incorporate an isostatic bottom boundary condition, you
 would specify the normal stress on the bottom boundary as a linear function
 of the height.
 So if gravity is 9.81, the density of the supporting material is 2.3, and
 the height of the material is 1.2, then the 
\family typewriter
StressBC
\family default
 should be
\end_layout

\begin_layout LyX-Code
”stressBC”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
  ”Type”: ”StressBC”,
\end_layout

\begin_layout LyX-Code
  ”ForceVector”: ”mom_force”,
\end_layout

\begin_layout LyX-Code
  ”wall”: ”bottom”,
\end_layout

\begin_layout LyX-Code
  ”normal_value”: ”9.81*2.3*(1.2-y)”
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
You can apply a shear stress to the boundary by specifying 
\family typewriter
x_value
\family default
, 
\family typewriter
y_value
\family default
, or 
\family typewriter
z_value
\family default
 instead of or in addition to 
\family typewriter
normal_value
\family default
.
\end_layout

\begin_layout Subsection
Temperature Boundary Conditions
\begin_inset CommandInset label
LatexCommand label
name "sub:Temperature-Boundary-Conditions"

\end_inset


\end_layout

\begin_layout Standard
Setting the boundary conditions on the temperature works almost exactly
 the same as velocity boundary conditions (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Velocity-Boundary-Conditions"

\end_inset

).
 You need only change 
\family typewriter
velocityBCs
\family default
 to 
\family typewriter
temperatureBCs
\family default
 and the velocity variable (e.g., 
\family typewriter
vx
\family default
) to 
\family typewriter
temperature
\family default
.
 For example, to set the bottom temperature to 1, you would add
\end_layout

\begin_layout LyX-Code
”temperatureBCs”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
  ”type”: ”CompositeVC”,
\end_layout

\begin_layout LyX-Code
  ”vcList”: [
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
      ”type”: ”WallVC”
\end_layout

\begin_layout LyX-Code
      ”wall”: ”bottom”,
\end_layout

\begin_layout LyX-Code
      ”variables”: [
\end_layout

\begin_layout LyX-Code
        {
\end_layout

\begin_layout LyX-Code
          ”name”: ”temperature”,
\end_layout

\begin_layout LyX-Code
          ”value”: ”1.0”
\end_layout

\begin_layout LyX-Code
        }
\end_layout

\begin_layout LyX-Code
      ]
\end_layout

\begin_layout LyX-Code
    } 
\end_layout

\begin_layout LyX-Code
  ]
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Subsection
Deformed Upper and Lower Boundaries
\begin_inset CommandInset label
LatexCommand label
name "sec:Deformed-Upper-Boundary"

\end_inset


\end_layout

\begin_layout Standard
Normally, Gale starts the simulation in a rectangular box.
 As the simulation proceeds, the boundaries can become distorted, in particular
 the upper boundary.
 However, you can also configure Gale to start with an initially deformed
 upper or lower boundary by adding a 
\family typewriter
SurfaceAdaptor
\family default
 component.
 A simple example is to make the top a sinusoid
\end_layout

\begin_layout LyX-Code
”surfaceAdaptor”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
  ”Type”: ”SurfaceAdaptor”,
\end_layout

\begin_layout LyX-Code
  ”mesh”: ”v-mesh”,
\end_layout

\begin_layout LyX-Code
  ”sourceGenerator”: ”v-mesh-generator”,
\end_layout

\begin_layout LyX-Code
  ”topEquation”: ”0.1*sin(2*pi*x)”
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
This sets the height of the surface to
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
h=h_{0}+0.1\cdot\sin(2\pi x),
\]

\end_inset

 where 
\begin_inset Formula $h_{0}$
\end_inset

 is the original height.
\end_layout

\begin_layout Standard
Note that many of the variables are prefaced with 
\begin_inset Quotes sld
\end_inset

top
\begin_inset Quotes srd
\end_inset

.
 You can also use 
\begin_inset Quotes sld
\end_inset

bottom
\begin_inset Quotes srd
\end_inset

 there, and thus modify the height of the bottom boundary.
 So if you modified the example above to 
\end_layout

\begin_layout LyX-Code
”surfaceAdaptor”: {
\end_layout

\begin_layout LyX-Code
  ”Type”: ”SurfaceAdaptor”,
\end_layout

\begin_layout LyX-Code
  ”mesh”: ”v-mesh”,
\end_layout

\begin_layout LyX-Code
  ”sourceGenerator”: ”v-mesh-generator”,
\end_layout

\begin_layout LyX-Code
  ”topEquation”: ”0.1*sin(2*pi*x)”,
\end_layout

\begin_layout LyX-Code
  ”bottomEquation”: ”0.1*sin(2*pi*x)”
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Standard
then the top and bottom will follow similar curves.
\end_layout

\begin_layout Standard
You can also read in topographic data from a file by setting the 
\family typewriter
SurfaceType
\family default
 to 
\family typewriter
topo_data
\family default
.
\end_layout

\begin_layout LyX-Code
"surfaceAdaptor":
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
    "Type": "SurfaceAdaptor",
\end_layout

\begin_layout LyX-Code
    "mesh":"v-mesh",
\end_layout

\begin_layout LyX-Code
    "sourceGenerator": "v-mesh-generator",
\end_layout

\begin_layout LyX-Code
    "topSurfaceType": "topo_data",
\end_layout

\begin_layout LyX-Code
    "topSurfaceName": "input/cookbook/test.topo",
\end_layout

\begin_layout LyX-Code
    "topNx": "32",
\end_layout

\begin_layout LyX-Code
    "topNz": "12",
\end_layout

\begin_layout LyX-Code
    "topMinX": "minX",
\end_layout

\begin_layout LyX-Code
    "topMaxX": "maxX",
\end_layout

\begin_layout LyX-Code
    "topMinZ": "minZ",
\end_layout

\begin_layout LyX-Code
    "topMaxZ": "maxZ"
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
This will read in an ascii file with the name from 
\family typewriter
SurfaceName
\family default
 (
\begin_inset Quotes sld
\end_inset

ascii_topo
\begin_inset Quotes srd
\end_inset

 by default).
 The file has a grid with 
\family typewriter
Nx*Nz
\family default
 points covering the area from (
\family typewriter
MinX
\family default
,
\family typewriter
MinY
\family default
) to (
\family typewriter
MaxX
\family default
,
\family typewriter
MaxY
\family default
).
 Gale then interpolates the heights from that grid to its own grid.
\end_layout

\begin_layout Subsection
Erosion
\end_layout

\begin_layout Standard
Gale has two different models for modeling erosion.
 After Gale computes a solution to the Stokes flow, both of these work by
 modifying the velocity of the top nodes of the mesh.
 So it does not keep track of where material comes from and where it goes.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Diffusion"

\end_inset

Diffusion
\end_layout

\begin_layout Standard
This plugin applies a diffusive operator to the top.
 Specifically,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{\partial y}{\partial t}=-diffusionCoefficient\frac{\partial^{2}y}{\partial x^{2}}.
\]

\end_inset

 You enable diffusion by adding the plugin 
\family typewriter
SurfaceProcess
\family default
.
 For example to apply diffusion with a coefficient of 1, add
\end_layout

\begin_layout LyX-Code
"plugins": [
\end_layout

\begin_layout LyX-Code
  {
\end_layout

\begin_layout LyX-Code
    "Type": "Underworld_SurfaceProcess"
\end_layout

\begin_layout LyX-Code
  }
\end_layout

\begin_layout LyX-Code
],
\end_layout

\begin_layout LyX-Code
"SurfaceProcess":
\end_layout

\begin_layout LyX-Code
  {
\end_layout

\begin_layout LyX-Code
    "mesh": "v-mesh",
\end_layout

\begin_layout LyX-Code
    "VelocityField": "VelocityField",
\end_layout

\begin_layout LyX-Code
    "diffusionCoefficient": "0.1"
\end_layout

\begin_layout LyX-Code
  },
\end_layout

\begin_layout Standard
just before the 
\family typewriter
EulerDeform
\family default
 struct.
\end_layout

\begin_layout Subsubsection
HRS Erosion
\end_layout

\begin_layout Standard
This plugin applies the erosion law as described in Hilley and Strecker
 
\begin_inset CommandInset citation
LatexCommand cite
key "HRS"

\end_inset

.
 In particular, it forces the slope to be
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\alpha=\overline{a}_{old}+\tan^{-1}\left(2vTW^{-2}-\frac{\left(2Kk{}_{a}^{m}\right)W^{hm-1}S^{n}}{\left(hm+1\right)dt_{erosion}}\right),
\]

\end_inset


\end_layout

\begin_layout Standard
where
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
S & \equiv & \tan^{-1}\left(\overline{a}_{old}\right),\\
\overline{a} & \equiv & \left(y_{max}-y_{0}\right)/W,
\end{eqnarray*}

\end_inset


\begin_inset Formula $W$
\end_inset

, 
\begin_inset Formula $y_{max}$
\end_inset

 and 
\begin_inset Formula $y_{0}$
\end_inset

 are determined by the geometry as in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Geometry-for-HRS"

\end_inset

, and 
\begin_inset Formula $vT$
\end_inset

, 
\begin_inset Formula $K$
\end_inset

, 
\begin_inset Formula $k_{a}$
\end_inset

, 
\begin_inset Formula $h$
\end_inset

, 
\begin_inset Formula $m$
\end_inset

, 
\begin_inset Formula $n$
\end_inset

, and 
\begin_inset Formula $dt_{erosion}$
\end_inset

 are specified by the input file.
 Erosion is only applied at intervals of 
\begin_inset Formula $dt_{erosion}$
\end_inset

 and does not start eroding until after 
\family typewriter
first_t_erosion
\family default
.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/HRS.pdf
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Geometry-for-HRS"

\end_inset

Geometry for HRS Erosion
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
K
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ka
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
h
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
m
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dt_erosion
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
first_t_erosion
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Solver Parameters
\end_layout

\begin_layout Standard
There are a number of parameters that control solver behavior.
 Pseudo-code for how it works is
\end_layout

\begin_layout LyX-Code
for (i=0; i<=nonLinearMaxIterations; ++i)
\end_layout

\begin_layout LyX-Code
  {
\end_layout

\begin_layout LyX-Code
    for(j=0; j<=maxIterations; ++j)
\end_layout

\begin_layout LyX-Code
      {
\end_layout

\begin_layout LyX-Code
        Apply one linear iteration;
\end_layout

\begin_layout LyX-Code
        if(monitor)
\end_layout

\begin_layout LyX-Code
          print out residual and cpu time;
\end_layout

\begin_layout LyX-Code
        if(j>=minIterations)
\end_layout

\begin_layout LyX-Code
          {
\end_layout

\begin_layout LyX-Code
            if((useAbsoluteTolerance
\end_layout

\begin_layout LyX-Code
                && absolute_residual<tolerance)
\end_layout

\begin_layout LyX-Code
               || (!useAbsoluteTolerance
\end_layout

\begin_layout LyX-Code
                   && relative_residual<tolerance))
\end_layout

\begin_layout LyX-Code
              break;
\end_layout

\begin_layout LyX-Code
          }
\end_layout

\begin_layout LyX-Code
      }
\end_layout

\begin_layout LyX-Code
    compute non-linear_residual;
\end_layout

\begin_layout LyX-Code
    if(i>=nonLinearMinIterations
\end_layout

\begin_layout LyX-Code
       && non-linear_residual<nonLinearTolerance)
\end_layout

\begin_layout LyX-Code
      break;
\end_layout

\begin_layout LyX-Code
    if(i==nonLinearMaxIterations && killNonConvergent)
\end_layout

\begin_layout LyX-Code
      abort();
\end_layout

\begin_layout LyX-Code
  }
\end_layout

\begin_layout Standard
The linear iteration step is described more fully in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Uzawa-Algorithm"

\end_inset

.
 The parameters for the linear solve are set in the 
\family typewriter
Stokes_SLE_UzawaSolver
\family default
 component
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tolerance
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10^{-5}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
maxIterations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
minIterations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
useAbsoluteTolerance
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
monitor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Note that in all of the example input files, 
\family typewriter
tolerance
\family default
 is set equal to the global parameter 
\family typewriter
linearTolerance
\family default
.
 The parameters for the non-linear solve are set in the 
\family typewriter
Stokes_SLE
\family default
 component
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
nonLinearTolerance
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $10^{-2}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
nonLinearMaxIterations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
500
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
nonLinearMinIterations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
killNonConvergent
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
True
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Fixing-Internal-Degrees"

\end_inset

Fixing Internal Degrees of Freedom
\end_layout

\begin_layout Standard
While the velocity and temperature boundary conditions (see Sections 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Velocity-Boundary-Conditions"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Temperature-Boundary-Conditions"

\end_inset

) can be used to specify values on the boundary, it is sometime necessary
 to specify values within the domain as well.
 For example, the region that you want to simulate may not map nicely to
 a rectangular domain.
 You can fix the internal degrees of freedom for the areas outside of your
 irregular domain with a 
\family typewriter
MeshShapeVC
\family default
.
 It works very similar to 
\family typewriter
WallVC
\family default
, except that you supply a shape rather than a wall for the condition to
 work on.
 For example, adding
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
  ”type”: ”MeshShapeVC”
\end_layout

\begin_layout LyX-Code
  ”Shape”: ”fixedShape”
\end_layout

\begin_layout LyX-Code
  ”variables”: [
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
      ”name”: ”vy”
\end_layout

\begin_layout LyX-Code
      ”value”: ”0”
\end_layout

\begin_layout LyX-Code
    }
\end_layout

\begin_layout LyX-Code
  ]
\end_layout

\begin_layout LyX-Code
} 
\end_layout

\begin_layout Standard
to the list of 
\family typewriter
WallVC
\family default
s in the 
\family typewriter
CompositeVC
\family default
 will fix the 
\emph on
y
\emph default
 velocity in the 
\family typewriter
fixedShape
\family default
 region.
 Note that you can also employ this as a boundary condition by making 
\family typewriter
fixedShape
\family default
 only cover a wall.
 The main advantage of this approach over a 
\family typewriter
WallVC
\family default
 is that you can have it only cover a part of the wall, thus constraining
 only part of the boundary.
 So if you wanted half of the boundary to move at a certain velocity, but
 wanted the other half unconstrained, you would use a 
\family typewriter
MeshShapeVC
\family default
.
\end_layout

\begin_layout Standard
There is one important drawback to using a 
\family typewriter
MeshShapeVC
\family default
.
 
\family typewriter
MeshShapeVC
\family default
 constrains mesh points defined by a shape initially.
 However, if the mesh deforms, then 
\family typewriter
MeshShapeVC
\family default
 will still constrain the 
\color red
same
\color inherit
 points on the grid.
 These points will be at a different location in space, so the constraint
 is now operating on a different area.
 The only way to really prevent the mesh from deforming is to use static
 sides (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:EulerDeform"

\end_inset

) everywhere.
\end_layout

\begin_layout Section
Initial Conditions
\begin_inset CommandInset label
LatexCommand label
name "sec:Initial-Conditions"

\end_inset


\end_layout

\begin_layout Standard
For temperature dependent problems, you need to set initial conditions for
 the temperature.
 Also, for pure thermal problems, the velocity is not solved for, so it
 must be set at the beginning.
 Setting initial conditions is similar to setting boundary conditions.
 In general, the only difference is changing the condition type from 
\family typewriter
WallVC
\family default
 to 
\family typewriter
AllNodesVC
\family default
.
 As an example, to set the initial temperature everywhere to 1, you would
 add
\end_layout

\begin_layout LyX-Code
”temperatureICs”: {
\end_layout

\begin_layout LyX-Code
  ”type”: ”CompositeVC”
\end_layout

\begin_layout LyX-Code
  ”vcList”: [
\end_layout

\begin_layout LyX-Code
    {
\end_layout

\begin_layout LyX-Code
      ”type”: ”AllNodesVC”,
\end_layout

\begin_layout LyX-Code
      ”wall”: ”bottom”,
\end_layout

\begin_layout LyX-Code
      ”variables”: [
\end_layout

\begin_layout LyX-Code
        {
\end_layout

\begin_layout LyX-Code
          ”name”: ”temperature”,
\end_layout

\begin_layout LyX-Code
          ”value”: ”1.0”
\end_layout

\begin_layout LyX-Code
        }
\end_layout

\begin_layout LyX-Code
      ]
\end_layout

\begin_layout LyX-Code
    } 
\end_layout

\begin_layout LyX-Code
  ]
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Section
Buoyancy Forces
\begin_inset CommandInset label
LatexCommand label
name "sec:Buoyancy-Forces"

\end_inset


\end_layout

\begin_layout Standard
Gales supports two types of buoyancy forces.
 The first one, 
\family typewriter
BuoyancyForceTerm
\family default
, is more general, allowing you to specify buoyancy properties for each
 material.
 
\end_layout

\begin_layout Subsection
BouyancyForceTerm
\begin_inset CommandInset label
LatexCommand label
name "sub:BouyancyForceTerm"

\end_inset


\end_layout

\begin_layout Standard
If you add this component, then there will be a force on each particle of
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F=-\rho g.
\]

\end_inset

If you specify a 
\family typewriter
TemperatureField
\family default
, then the force becomes 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F=-\rho g\left(1-\alpha T\right).
\]

\end_inset

 The density (
\begin_inset Formula $\rho$
\end_inset

) and coefficient of thermal expansivity (
\begin_inset Formula $\alpha$
\end_inset

) are taken from the material properties (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Materials"

\end_inset

).
 The vector 
\family typewriter
gravityDirection
\family default
 determines the direction of the force.
 In the sample input files, 
\family typewriter
ForceVector
\family default
 is always 
\family typewriter
mom_force
\family default
, and 
\family typewriter
Swarm
\family default
 is always 
\family typewriter
picIntegrationPoints
\family default
.
\end_layout

\begin_layout Standard

\family typewriter
damping
\family default
 is whether to enable a damping term to fix a sloshing, 
\begin_inset Quotes sld
\end_inset

drunken seaman
\begin_inset Quotes srd
\end_inset

 instability often seen in models with a free surface.
 Adding the damping term with an adaptive step size makes the problem non-linear.
 If you have problems with convergence, try setting 
\family typewriter
dtFactor
\family default
 to something less than 1 (e.g.
 0.5), or use a fixed step size by setting 
\family typewriter
dt
\family default
 (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Variables"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
gravity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
gravityDirection
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(0,-1,0)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TemperatureField
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ForceVector
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Swarm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
damping
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
True
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
BuoyancyForceTermThermoChem
\begin_inset CommandInset label
LatexCommand label
name "sub:BuoyancyForceTermThermoChem"

\end_inset


\end_layout

\begin_layout Standard
If you add this component, then there will be a vertical force on each particle
 of
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F=-\rho Ra_{C}.
\]

\end_inset

If you specify a 
\family typewriter
TemperatureField
\family default
, then the force becomes 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F=Ra_{T}T-\rho Ra_{C}.
\]

\end_inset

 The thermal (
\begin_inset Formula $Ra_{T}$
\end_inset

) and chemical (
\begin_inset Formula $Ra_{C}$
\end_inset

) Rayleigh numbers are the same for all materials.
 In contrast to 
\family typewriter
BuoyanceForceTerm
\family default
, the force is always in the vertical (y) direction.
 In the sample input files, 
\family typewriter
ForceVector
\family default
 is always 
\family typewriter
mom_force
\family default
, and 
\family typewriter
Swarm
\family default
 is always 
\family typewriter
picIntegrationPoints
\family default
.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RaC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RaT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TemperatureField
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ForceVector
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Swarm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Divergence Forces
\begin_inset CommandInset label
LatexCommand label
name "sec:Divergence-Forces-Input"

\end_inset


\end_layout

\begin_layout Standard
As mentioned in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Divergence-Forces"

\end_inset

, it is possible to add a divergence force to the continuity equation so
 that material is created anew.
 The first parameter will always be the same between input files.
\end_layout

\begin_layout Description
ForceVector cont_force
\end_layout

\begin_layout Standard
The last three parameters specify the divergence.
\end_layout

\begin_layout Description
DomainShape The divergence is only non-zero inside of this shape.
\end_layout

\begin_layout Description
force_type This can be any one of 
\begin_inset Quotes sld
\end_inset

equation
\begin_inset Quotes srd
\end_inset

 (the default), 
\begin_inset Quotes sld
\end_inset

double
\begin_inset Quotes srd
\end_inset

, or 
\begin_inset Quotes sld
\end_inset

func
\begin_inset Quotes srd
\end_inset

 (mostly used for input from a file).
\end_layout

\begin_layout Description
force_value If ``force_type'' is ``double,'' then this must be a number.
 If ``force_type'' is ``func,'' then it must be the textual name of one
 of the Standard Condition Functions (e.g., 
\family typewriter
File1
\family default
).
\end_layout

\begin_layout Section
Equation Input
\begin_inset CommandInset label
LatexCommand label
name "sec:Standard-Condition-Functions"

\end_inset


\end_layout

\begin_layout Standard
Gale includes the equation parser muParserX 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://code.google.com/p/muparserx/
\end_layout

\end_inset

.
 This allows you to enter initial conditions, boundary conditions, and shapes
 using natural mathematical notation.
 The syntax is meant to be as close as possible to natural notation as possible.
 For example,
\end_layout

\begin_layout LyX-Code
exp(-2*(x^2 + y^2))
\end_layout

\begin_layout Standard
is equivalent to the formula
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
e^{-2\left(x^{2}+y^{2}\right)}.
\]

\end_inset

Within each equation, the coordinates are the only predefined variables:
 
\family typewriter
x
\family default
, 
\family typewriter
y
\family default
, 
\family typewriter
z
\family default
, 
\family typewriter
t
\family default
.
 For your convenience, you can also define variables within an equation.
 The equation
\end_layout

\begin_layout LyX-Code
r=hypot(x^2+y^2), r*exp(-(r/10)^2)
\end_layout

\begin_layout Standard
defines a radius and then uses it.
 Statements are separated by commas 
\begin_inset Quotes sld
\end_inset

,
\begin_inset Quotes srd
\end_inset

, and the return value of the equation is the last statement.
\end_layout

\begin_layout Standard
The available unary and binary operators are
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
addition
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
subtraction or unary minus
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
*
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
multiplication
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
/
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
division
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
^
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
raise to the power:
\begin_inset Formula $x^{y}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
In addition, the available functions are
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="31" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sin(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sin
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cos(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cos
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tan(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tan
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
asin(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
arcsin
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
acos(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
arccos
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
atan(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
arctan
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sinh(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hyperbolic sin
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cosh(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hyperbolic cos
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
tanh(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hyperbolic tan
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
asinh(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hyperbolic arcsin
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
acosh(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hyperbolic arccos
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
atanh(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hyperbolic arctan
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sqrt(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Square root: 
\begin_inset Formula $\sqrt{x}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cbrt(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cube root: 
\begin_inset Formula $\sqrt[3]{x}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sqrt1pm1(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
 
\begin_inset Formula $\sqrt{1+x}-1$
\end_inset

, optimised for when x is small
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hypot(x,y)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\sqrt{x^{2}+y^{2}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
erf(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
error function
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
erfc(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
complementary error function
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
log(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
natural logarithm:
\begin_inset Formula $\log\left(x\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
log1p(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\log\left(1+x\right)$
\end_inset

, optimised for when x is small
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
log10(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\log_{10}\left(x\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
log2(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\log_{2}\left(x\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
exp(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $e^{x}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
expm1(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $e^{x}-1$
\end_inset

, optimised for when x is small
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
abs(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Absolute value: 
\begin_inset Formula $|x|$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
step(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 if x<0, 1 otherwise
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
floor(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
largest integer not greater than 
\begin_inset Formula $x$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ceil(x)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
smallest integer not less than 
\begin_inset Formula $x$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sum(x1,x2,x3,...)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sum of individual values: x1+x2+x3+...
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
min(x1,x2,x3,...)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Minimum of all values
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
max(x1,x2,x3,...)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximum of all values
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
In addition, you can use the syntax 
\family typewriter
a ? b : c
\family default
 as a conditonal.
 If the first element 
\family typewriter
a
\family default
 is true, then return 
\family typewriter
b
\family default
.
 Otherwise return 
\family typewriter
c
\family default
.
 For the condition 
\family typewriter
a
\family default
, you can use all of the normal relational operators.
 To be specific, the allowed relational operators are
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
<
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
less than
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
<=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
less than or equal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
>
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
greater than
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
>=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
greater than or equal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
==
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
is equal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
!=
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
is not equal
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
or
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logical or
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
and
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
logical and
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
xor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
exclusive or
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Note that this will only evaluate the element as needed.
 So if x<1, 
\family typewriter
a
\family default
 will be evaluated, but not 
\family typewriter
b
\family default
.
 This can come in handy if 
\family typewriter
a
\family default
 or 
\family typewriter
b
\family default
 are difficult to compute or not valid for certain ranges.
\end_layout

\begin_layout Standard
If you are unsure whether the equations you entered are producing the desired
 numbers, you can turn on the verbose option (Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Verbosity-Options"

\end_inset

).
 This will output the equation that is being evaluated, the coordinates,
 and the result.
\end_layout

\begin_layout Section
File Input Data
\end_layout

\begin_layout Standard
The other way to set initial and boundary conditions is by reading it in
 from a file.
 You can use up to 10 different files as input data (
\family typewriter
File1
\family default
, 
\family typewriter
File2
\family default
, ...
 
\family typewriter
File10
\family default
).
 For each 
\family typewriter
File
\family default
, there are a number of associated parameters.
 As a concrete example, 
\family typewriter
File1
\family default
 will have data along the axis 
\family typewriter
File1_dim
\family default
 and, if defined, the axes 
\family typewriter
File1_dim2
\family default
 and 
\family typewriter
File1_dim3
\family default
.
 Depending on how many dimensions are defined, 
\family typewriter
File1
\family default
 will be an array of 
\family typewriter
File1_N
\family default
, 
\family typewriter
File1_N*File1_N2
\family default
, or 
\family typewriter
File1_N*File1_N2*File1_N3
\family default
 elements.
 Gale reads these elements from a file.
 The format of the file is one column for each of the coordinates (1, 2,
 or 3), and one column for the value.
 The coordinates must be sorted and increasing.
 Gale linearly interpolates between values as necessary.
 So a file with the two lines
\end_layout

\begin_layout LyX-Code

\family typewriter
0 10
\end_layout

\begin_layout LyX-Code

\family typewriter
100 20
\end_layout

\begin_layout Standard
will create a linear gradient between 0 and 100, starting with 10 at 0 and
 ending with 20 at 100.
 For points less than 0, Gale uses the value of the lowest point (10).
 For points greater than 100, Gale uses the value of the highest point (20).
\end_layout

\begin_layout Standard
For 2D and 3D input files, the coordinate mesh defined by the input file
 must be a rectangular grid.
\end_layout

\begin_layout Section
Tracers
\end_layout

\begin_layout Standard
You can add tracer particles to the simulation to help you track where material
 is flowing.
 The existing material particles are not suitable for that because they
 may get duplicated or removed as the simulation proceeds.
 This is necessary to keep the number of particles down to a reasonable
 level.
 Tracers, on the other hand, are merely silent observers, playing no role
 in the evolution of the system.
\end_layout

\begin_layout Standard
To add tracers to your simulation, first enable tracers by adding the variable
\end_layout

\begin_layout LyX-Code
\begin_inset Quotes sld
\end_inset

enable-tracers
\begin_inset Quotes srd
\end_inset

: true,
\end_layout

\begin_layout Standard
Note that there are no quotes around 
\family typewriter
true
\family default
.
 Next set up the initial position of the tracers.
 To put the tracers exactly where you want them, use a 
\family typewriter
ManualParticleLayout
\family default
 component.
 An example of one that puts down 8 tracers is
\end_layout

\begin_layout LyX-Code
”pLayout”: {
\end_layout

\begin_layout LyX-Code
  ”Type”: ”ManualParticleLayout”,
\end_layout

\begin_layout LyX-Code
  ”totalInitialParticles”: ”1”,
\end_layout

\begin_layout LyX-Code
  ”manualParticlePositions”: [
\end_layout

\begin_layout LyX-Code
    
\begin_inset Quotes sld
\end_inset

asciidata
\begin_inset Quotes srd
\end_inset

,
\end_layout

\begin_layout LyX-Code
    [
\begin_inset Quotes sld
\end_inset

x
\begin_inset Quotes srd
\end_inset

, 
\begin_inset Quotes sld
\end_inset

y
\begin_inset Quotes srd
\end_inset

, 
\begin_inset Quotes sld
\end_inset

z
\begin_inset Quotes srd
\end_inset

],
\end_layout

\begin_layout LyX-Code
    1.0, .1, .1,
\end_layout

\begin_layout LyX-Code
    1.3, .1, .1,
\end_layout

\begin_layout LyX-Code
    1.6, .1, .1,
\end_layout

\begin_layout LyX-Code
    1.9, .1, .1,
\end_layout

\begin_layout LyX-Code
    1.0, .2, .1,
\end_layout

\begin_layout LyX-Code
    1.3, .2, .1,
\end_layout

\begin_layout LyX-Code
    1.6, .2, .1,
\end_layout

\begin_layout LyX-Code
    1.9, .2, .1
\end_layout

\begin_layout LyX-Code
  ]
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
Finally, add a 
\family typewriter
TracerOutput
\family default
 component to output values of various fields (e.g.
 pressure, temperature) as the simulation progresses.
\end_layout

\begin_layout LyX-Code
”swarmOutput”:
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
  ”Type”: ”TracerOutput”,
\end_layout

\begin_layout LyX-Code
  ”Swarm”: ”passiveTracerSwarm”,
\end_layout

\begin_layout LyX-Code
  ”Fields”: [
\end_layout

\begin_layout LyX-Code
    ”PressureField”,
\end_layout

\begin_layout LyX-Code
    ”StrainRateInvariantField”
\end_layout

\begin_layout LyX-Code
  ]
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
This component will create eight plain text files in the output directory,
 
\family typewriter
swarmOutput.00000.dat
\family default
, 
\family typewriter
swarmOutput.00001.dat
\family default
, ...
 
\family typewriter
swarmOutput.00007.dat
\family default
.
 Each file will contain the positions of the particle through time and the
 values of the pressure and strain rate invariant at those positions.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Verbosity-Options"

\end_inset

Verbosity Options
\end_layout

\begin_layout Standard
By default, Gale prints out very little when running.
 To get more information, insert
\end_layout

\begin_layout LyX-Code
”journal.info”: ”True”,
\end_layout

\begin_layout LyX-Code
”journal.debug”: ”True”,
\end_layout

\begin_layout LyX-Code
”journal-level.info”: ”2”,
\end_layout

\begin_layout LyX-Code
”journal-level.debug”: ”2”
\end_layout

\begin_layout Standard
into the variables section (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Variables"

\end_inset

).
 This will print out more information than you need about the equations,
 components, solvers, and number of iterations.
 In addition, you can get even more information about the solvers from PETSc
 by appending 
\begin_inset Quotes sld
\end_inset


\family typewriter
-ksp_monitor
\family default

\begin_inset Quotes srd
\end_inset

 to the command line.
\end_layout

\begin_layout Chapter
Benchmarks
\end_layout

\begin_layout Standard
Gale has been tested against a number of different benchmarks.
 Each benchmark tests different parts of the code, although there is some
 overlap.
 Specifically, Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:test-coverage"

\end_inset

 summarizes which parts of the code are tested by which benchmark.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Code Functionality
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benchmark Section
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stokes solver and interpolate between particles and mesh in 2D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Relaxation-of-Topography"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Divergence"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stokes solver and interpolate between particles and mesh in 3D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Falling-Sphere"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Divergence"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Time stepping
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Relaxation-of-Topography"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gravity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Falling-Sphere"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Relaxation-of-Topography"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Free surface
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Relaxation-of-Topography"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Thermal Advection & Diffusion
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Thermal-Diffusion"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Lagrange-Thermal-Advection"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Eulerian-Thermal-Advection"

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:test-coverage"

\end_inset

Summary of which parts of the code are tested by which benchmarks
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Many of these benchmarks can be carried out to high precision (~1%).
 In particular, the error should follow the relation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
error\propto h+O(h^{2}),
\]

\end_inset

 where 
\begin_inset Formula $h$
\end_inset

 is the size of the element.
 This means that if we plot the error from three different resolutions (high,
 medium and low) and scale it by 
\begin_inset Formula $h$
\end_inset

, we should see that the high-resolution error is closer to the medium-resolutio
n error than the low-resolution error.
 In practice, this may be difficult to achieve because there are almost
 always other sources of error besides resolution.
 
\end_layout

\begin_layout Standard
Altogether, these benchmarks give us a high degree of confidence in the
 code.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Falling-Sphere"

\end_inset

Falling Sphere
\end_layout

\begin_layout Standard
This benchmark simulates a rigid sphere falling through a cylinder filled
 with a viscous medium as in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sphere-Cylinder"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/sphere_cylinder.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Sphere-Cylinder"

\end_inset

Schematic of a Sphere falling through a Cylinder
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In an infinitely large cylinder, the analytic solution for the drag on a
 sphere is
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F=6\pi\eta ru,
\]

\end_inset

 where 
\begin_inset Formula $\eta$
\end_inset

 is the viscosity of the medium, 
\begin_inset Formula $r$
\end_inset

 is the radius of the sphere, and 
\begin_inset Formula $u$
\end_inset

 is the velocity of the sphere.
 Conversely, the buoyancy force is
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F=\frac{4}{3}\pi r^{3}g\delta\rho,
\]

\end_inset

where 
\begin_inset Formula $g$
\end_inset

 is the gravitational constant and 
\begin_inset Formula $\delta\rho$
\end_inset

 is the density difference between the sphere and the medium.
 Balancing these two forces and solving for the velocity gives
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
u=\frac{2}{9}r^{2}g\delta\rho/\eta.
\]

\end_inset


\end_layout

\begin_layout Standard
Setting 
\begin_inset Formula $g=1$
\end_inset

, 
\begin_inset Formula $r=1$
\end_inset

, 
\begin_inset Formula $\delta\rho=1$
\end_inset

, and 
\begin_inset Formula $\eta=1$
\end_inset

 gives a velocity of 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
u=0.222.
\]

\end_inset


\end_layout

\begin_layout Standard
In our case, we simulate a rigid sphere with a high viscosity sphere.
 This allows some internal circulation within the sphere, and so the expression
 for the velocity becomes 
\begin_inset CommandInset citation
LatexCommand cite
key "Landau & Lifschitz"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
u=\frac{1}{3}\frac{r^{2}g\delta\rho}{\eta}\frac{\eta+\eta'}{\eta+\frac{3}{2}\eta'},
\]

\end_inset

where 
\begin_inset Formula $\eta'$
\end_inset

 is the viscosity of the sphere.
 For our case, the background medium's viscosity is 1 and the sphere's viscosity
 is 100, so the correction is about 1%.
\end_layout

\begin_layout Standard
When the boundaries are not infinitely far away, we can expand the solution
 in terms of the ratio of the radius of the sphere (
\begin_inset Formula $r$
\end_inset

) to the radius of the cylinder (
\begin_inset Formula $R$
\end_inset

).
 One solution by Habermann 
\begin_inset CommandInset citation
LatexCommand cite
key "Stokes Sphere"

\end_inset

 gives a drag force of
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F_{H}=6\pi\eta ru\frac{1-0.75857\cdot\left(\frac{r}{R}\right)^{5}}{1+f_{H}\left(\frac{r}{R}\right)},
\]

\end_inset

 where
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
f_{H}\left(\frac{r}{R}\right)=-2.1050(r/R)+2.0865(r/R)^{3}-1.7068(r/R)^{5}+0.72603(r/R)^{6}.
\]

\end_inset


\end_layout

\begin_layout Standard
For our case with 
\begin_inset Formula $r=1$
\end_inset

, 
\begin_inset Formula $R=4$
\end_inset

, this gives a velocity of
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
u=0.1122747319.
\]

\end_inset

 The walls reduce the speed by about a factor of two.
\end_layout

\begin_layout Standard
Another solution by Faxen 
\begin_inset CommandInset citation
LatexCommand cite
key "Stokes Sphere"

\end_inset

 gives a drag force of
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F_{F}=6\pi\eta ru/\left(1+f_{F}(r/R)\right),
\]

\end_inset

 where
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
f_{f}(r/R) & = & -2.10444(r/R)+2.08877(r/R)^{3}-0.94813(r/R)^{5}\\
 &  & -1.372(r/R)^{6}+3.87(r/R)^{8}-4.19(r/R)^{10}.
\end{eqnarray*}

\end_inset

For our case, this gives a speed of 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
u=0.112293603939,
\]

\end_inset

which agrees closely with the result from Habermann.
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sphere-velocity"

\end_inset

 shows the velocity solution for the resolution 32
\begin_inset Formula $\times$
\end_inset

64
\begin_inset Formula $\times$
\end_inset

32.
 Because of the symmetries of the problem we only have to simulate a quarter
 of the domain.
 Since the sphere is not completely rigid, the velocity inside the sphere
 is not uniform.
 In particular, the velocity is largest in the center of the sphere and
 decreases outward.
\end_layout

\begin_layout Standard
We plot the error in the computed velocity compared to the Faxen solution
 in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Error-in-velocity"

\end_inset

.
 The error bars correspond to the range of velocities for 
\begin_inset Formula $r<0.7$
\end_inset

.
 As the element size h decreases, the error decreases.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Sphere_v.png
	lyxscale 50
	height 60pheight%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Sphere-velocity"

\end_inset

Velocity in the sphere and surrounding medium
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Sphere_Error.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Error-in-velocity"

\end_inset

Error in computed velocity vs.
 resolution
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Relaxation-of-Topography"

\end_inset

Relaxation of Topography
\end_layout

\begin_layout Standard
Given an infinitely deep purely viscous medium with an infinitesimal initial
 sinusoidal height profile, the topography will decay exponentially with
 the timescale 
\begin_inset CommandInset citation
LatexCommand cite
key "Folds"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
t_{r}=\frac{4\pi\eta}{\rho gL},
\]

\end_inset

 where 
\begin_inset Formula $\eta$
\end_inset

 is the viscosity, 
\begin_inset Formula $\rho$
\end_inset

 is the density, 
\begin_inset Formula $g$
\end_inset

 is the gravitational constant, and 
\begin_inset Formula $L$
\end_inset

 is the wavelength of the initial sinusoid.
 
\end_layout

\begin_layout Standard
In our case, we simulate a medium with non-infinite depth (depth=L) and
 a sinusoid with a non-zero amplitude (
\begin_inset Formula $A=0.01$
\end_inset

).
 The internal fields decay exponentially with depth with a length scale
 of 
\begin_inset Formula $L/2\pi$
\end_inset

, giving an error of 0.2%.
 A non-zero amplitude creates errors of order 
\begin_inset Formula $\left(2\pi A/L\right)^{2}$
\end_inset

, which in this case is 0.4%.
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-topo"

\end_inset

 shows the results of a high-resolution (256
\begin_inset Formula $\times$
\end_inset

512) run.
 Note that we use symmetry to only simulate half of the wavelength.
 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/sinusoid.png
	lyxscale 50
	height 60pheight%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-topo"

\end_inset

Strain rate and velocities for a sinusoidal topography relaxing under gravity
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Running the code with multiple resolutions and measuring the error in the
 height in the peak gives Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:topo-error"

\end_inset

.
 The error behaves a bit erratically because of the damping term applied
 to the free surface (Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:BouyancyForceTerm"

\end_inset

).
 Even so, the error decreases linearly with increasing resolution, giving
 us confidence in our ability to accurately track topography.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/sinusoid_error.eps

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:topo-error"

\end_inset

Error in the height at the peak
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Divergence"

\end_inset

Divergence
\end_layout

\begin_layout Standard
This benchmark tests the implementation of the divergence term in equation
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:divergence"

\end_inset

.
 In 2D, a constant divergence is applied to a square domain, and the velocity
 on the corners is set to enforce a spreading from the center of the square.
 For a constant divergence 
\begin_inset Formula $d$
\end_inset

, the analytic solution for this setup is
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{ccc}
v_{x} & = & x\cdot d/2\\
v_{y} & = & y\cdot d/2
\end{array}.
\]

\end_inset

 In 3D, the analytic solution is
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{ccc}
v_{x} & = & x\cdot d/3\\
v_{y} & = & y\cdot d/3\\
v_{z} & = & z\cdot d/3
\end{array}.
\]

\end_inset

 In both cases, the strain rate invariant equals 
\begin_inset Formula $\sqrt{d/2}$
\end_inset

.
 The error is completely determined by the solver.
 In both 2D and 3D, decreasing 
\family typewriter
linearTolerance
\family default
 to 
\begin_inset Formula $10^{-9}$
\end_inset

 results in a solution with zero error.
 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Thermal-Diffusion"

\end_inset

Thermal Diffusion
\end_layout

\begin_layout Standard
This is a pure thermal benchmark.
 The Stokes equations are not solved.
 Rather, the benchmark simulates a box relaxing from an initial sinusoidal
 temperature distribution.
 We set the velocity to zero and the initial temperature to 
\begin_inset Formula 
\[
T_{t=0}=\cos\left(\pi x\right)\sin\left(2\pi y\right).
\]

\end_inset

The temperature on the bottom and top are fixed to zero.
 The temperature on the left and right side are left free, implying the
 boundary conditions 
\begin_inset Formula 
\[
\left.\frac{\partial T}{\partial x}\right|_{x=0,1}=0.
\]

\end_inset

The complete solution decays with time 
\begin_inset Formula 
\[
T=\exp\left(-\kappa\left(5\pi^{2}\right)t\right)\cos\left(\pi x\right)\sin\left(2\pi y\right),
\]

\end_inset

where 
\begin_inset Formula $\kappa=1.7$
\end_inset

 is the diffusion coefficient.
 Figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diffusion_start"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diffusion_end"

\end_inset

 show the results at 
\begin_inset Formula $t=0$
\end_inset

 and 
\begin_inset Formula $t=0.0011489$
\end_inset

 for a run with 16
\begin_inset Formula $\times$
\end_inset

16 elements.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diffusion_error"

\end_inset

 plots the error in the maximum temperature at 
\begin_inset Formula $t=0.0011489$
\end_inset

 as a function of the grid spacing 
\begin_inset Formula $h$
\end_inset

.
 The error decreases linearly as the spacing decreases.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/thermal_diffusion_start.png
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Diffusion_start"

\end_inset

Temperature at the beginning of the thermal diffusion benchmark.
 The mesh is 16
\begin_inset Formula $\times$
\end_inset

16 elements.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/thermal_diffusion_end.png
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Diffusion_end"

\end_inset

Temperature at the end of the thermal diffusion benchmark.
 The mesh is 16
\begin_inset Formula $\times$
\end_inset

16 elements.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/thermal_diffusion_error.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Diffusion_error"

\end_inset

Error in the maximum temperature at 
\begin_inset Formula $t=0.0011489$
\end_inset

 as a function of resolution.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Lagrange-Thermal-Advection"

\end_inset

Lagrangian Thermal Advection
\end_layout

\begin_layout Standard
This is another pure thermal benchmark.
 In this case, the velocity is specified and the diffusivity is set to zero.
 The temperature is initially set to be 2 inside a box and 1 outside.
 We set the velocity to 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{ccc}
v_{x} & = & 0.3x-0.2\\
v_{y} & = & (x+0.3)(1.5-x)y+(x-0.15)(0.7-x)
\end{array}.
\]

\end_inset


\end_layout

\begin_layout Standard
This velocity has been constructed such that the natural advection of the
 mesh will not be disturbed by the remesher.
 This means that the temperature field should not advect relative to the
 mesh.
 Figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Lagrange_advect_start"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Lagrange_advect_end"

\end_inset

 show the initial and final temperatures.
 The initial temperature distribution is kept sharp and intact.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/thermal_lagrangian_start.png
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Lagrange_advect_start"

\end_inset

Initial temperature and velocity of the lagrangian thermal advection benchmark.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/thermal_lagrangian_end.png
	width 50page%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Lagrange_advect_end"

\end_inset

Final temperature and velocity of the lagrangian thermal advection benchmark.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Eulerian-Thermal-Advection"

\end_inset

Eulerian Thermal Advection
\end_layout

\begin_layout Standard
This is another pure thermal benchmark.
 In contrast to the previous benchmark, the mesh is fixed and the temperature
 is advected across the grid.
 The velocity is set to 
\begin_inset Formula $v_{x}=1$
\end_inset

, 
\begin_inset Formula $v_{y}=1$
\end_inset

.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Euler_advect_start"

\end_inset

 shows the initially sharp temperature distribution.
 Figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Euler_advect_low"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Euler_advect_medium"

\end_inset

, and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Euler_advect_high"

\end_inset

 show the result at 
\begin_inset Formula $t=0.25$
\end_inset

 for runs with 16
\begin_inset Formula $\times$
\end_inset

16, 32
\begin_inset Formula $\times$
\end_inset

32, and 64
\begin_inset Formula $\times$
\end_inset

64 elements.
 While there is significant diffusion, it does improve with resolution.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/thermal_euler_start.png
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Euler_advect_start"

\end_inset

Initial temperature of the eulerian thermal advection benchmark.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/thermal_euler_low.png
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Euler_advect_low"

\end_inset

Temperature at 
\begin_inset Formula $t=0.25$
\end_inset

 for a run with 16
\begin_inset Formula $\times$
\end_inset

16 elements.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/thermal_euler_medium.png
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Euler_advect_medium"

\end_inset

Temperature at 
\begin_inset Formula $t=0.25$
\end_inset

 for a run with 32
\begin_inset Formula $\times$
\end_inset

32 elements.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/thermal_euler_high.png
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Euler_advect_high"

\end_inset

Temperature at 
\begin_inset Formula $t=0.25$
\end_inset

 for a run with 64
\begin_inset Formula $\times$
\end_inset

64 elements.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
License 
\end_layout

\begin_layout Standard

\series bold
GNU GENERAL PUBLIC LICENSE Version 2, June 1991.
 Copyright (C) 1989, 1991 Free Software Foundation, Inc.
 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
\series default
 
\begin_inset Newline newline
\end_inset


\series medium
Everyone is permitted to copy and distribute verbatim copies of this license
 document, but changing it is not allowed.
\end_layout

\begin_layout Section*
Preamble
\end_layout

\begin_layout Standard
The licenses for most software are designed to take away your freedom to
 share and change it.
 By contrast, the GNU General Public License is intended to guarantee your
 freedom to share and change free software -- to make sure the software
 is free for all its users.
 This General Public License applies to most of the Free Software Foundation's
 software and to any other program whose authors commit to using it.
 (Some other Free Software Foundation software is covered by the GNU Library
 General Public License instead.) You can apply it to your programs, too.
\end_layout

\begin_layout Standard
When we speak of free software, we are referring to freedom, not price.
 Our General Public Licenses are designed to make sure that you have the
 freedom to distribute copies of free software (and charge for this service
 if you wish), that you receive source code or can get it if you want it,
 that you can change the software or use pieces of it in new free programs;
 and that you know you can do these things.
\end_layout

\begin_layout Standard
To protect your rights, we need to make restrictions that forbid anyone
 to deny you these rights or to ask you to surrender the rights.
 These restrictions translate to certain responsibilities for you if you
 distribute copies of the software, or if you modify it.
\end_layout

\begin_layout Standard
For example, if you distribute copies of such a program, whether gratis
 or for a fee, you must give the recipients all the rights that you have.
 You must make sure that they, too, receive or can get the source code.
 And you must show them these terms so they know their rights.
\end_layout

\begin_layout Standard
We protect your rights with two steps:
\end_layout

\begin_layout Enumerate
Copyright the software, and 
\end_layout

\begin_layout Enumerate
Offer you this license which gives you legal permission to copy, distribute
 and/or modify the software.
\end_layout

\begin_layout Standard
Also, for each author's protection and ours, we want to make certain that
 everyone understands that there is no warranty for this free software.
 If the software is modified by someone else and passed on, we want its
 recipients to know that what they have is not the original, so that any
 problems introduced by others will not reflect on the original authors'
 reputations.
\end_layout

\begin_layout Standard
Finally, any free program is threatened constantly by software patents.
 We wish to avoid the danger that redistributors of a free program will
 individually obtain patent licenses, in effect making the program proprietary.
 To prevent this, we have made it clear that any patent must be licensed
 for everyone's free use or not licensed at all.
 
\end_layout

\begin_layout Standard
The precise terms and conditions for copying, distribution and modification
 follow.
\end_layout

\begin_layout Section*
GNU GENERAL PUBLIC LICENSE TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION
 AND MODIFICATION 
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{itemize}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
item[0.]
\end_layout

\end_inset

This License applies to any program or other work which contains a notice
 placed by the copyright holder saying it may be distributed under the terms
 of this General Public License.
 The ”Program” below refers to any such program or work, and a ”work based
 on the Program” means either the Program or any derivative work under copyright
 law: that is to say, a work containing the Program or a portion of it,
 either verbatim or with modifications and/or translated into another language.
 (Hereinafter, translation is included without limitation in the term ”modificat
ion.”) Each licensee is addressed as ”you.”
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Activities other than copying, distribution and modification are not covered
 by this License; they are outside its scope.
 The act of running the Program is not restricted, and the output from the
 Program is covered only if its contents constitute a work based on the
 Program (independent of having been made by running the Program).
 Whether that is true depends on what the Program does.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{itemize}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
You may copy and distribute verbatim copies of the Program's source code
 as you receive it, in any medium, provided that you conspicuously and appropria
tely publish on each copy an appropriate copyright notice and disclaimer
 of warranty; keep intact all the notices that refer to this License and
 to the absence of any warranty; and give any other recipients of the Program
 a copy of this License along with the Program.
 
\end_layout

\begin_deeper
\begin_layout Standard
You may charge a fee for the physical act of transferring a copy, and you
 may at your option offer warranty protection in exchange for a fee.
 
\end_layout

\end_deeper
\begin_layout Enumerate
You may modify your copy or copies of the Program or any portion of it,
 thus forming a work based on the Program, and copy and distribute such
 modifications or work under the terms of Section 1 above, provided that
 you also meet all of these conditions: 
\end_layout

\begin_deeper
\begin_layout Enumerate
You must cause the modified files to carry prominent notices stating that
 you changed the files and the date of any change.
 
\end_layout

\begin_layout Enumerate
You must cause any work that you distribute or publish, that in whole or
 in part contains or is derived from the Program or any part thereof, to
 be licensed as a whole at no charge to all third parties under the terms
 of this License.
 
\end_layout

\begin_layout Enumerate
If the modified program normally reads commands interactively when run,
 you must cause it, when started running for such interactive use in the
 most ordinary way, to print or display an announcement including an appropriate
 copyright notice and a notice that there is no warranty (or else, saying
 that you provide a warranty) and that users may redistribute the program
 under these conditions, and telling the user how to view a copy of this
 License.
 (Exception: if the Program itself is interactive but does not normally
 print such an announcement, your work based on the Program is not required
 to print an announcement.) 
\end_layout

\begin_layout Standard
These requirements apply to the modified work as a whole.
 If identifiable sections of that work are not derived from the Program,
 and can be reasonably considered independent and separate works in themselves,
 then this License, and its terms, do not apply to those sections when you
 distribute them as separate works.
 But when you distribute the same sections as part of a whole which is a
 work based on the Program, the distribution of the whole must be on the
 terms of this License, whose permissions for other licensees extend to
 the entire whole, and thus to each and every part regardless of who wrote
 it.
 
\end_layout

\begin_layout Standard
Thus, it is not the intent of this section to claim rights or contest your
 rights to work written entirely by you; rather, the intent is to exercise
 the right to control the distribution of derivative or collective works
 based on the Program.
 
\end_layout

\begin_layout Standard
In addition, mere aggregation of another work not based on the Program with
 the Program (or with a work based on the Program) on a volume of a storage
 or distribution medium does not bring the other work under the scope of
 this License.
 
\end_layout

\end_deeper
\begin_layout Enumerate
You may copy and distribute the Program (or a work based on it, under Section
 2) in object code or executable form under the terms of Sections 1 and
 2 above provided that you also do one of the following: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Accompany it with the complete corresponding machine-readable source code,
 which must be distributed under the terms of Sections 1 and 2 above on
 a medium customarily used for software interchange; or, 
\end_layout

\begin_layout Enumerate
Accompany it with a written offer, valid for at least three years, to give
 any third party, for a charge no more than your cost of physically performing
 source distribution, a complete machine-readable copy of the corresponding
 source code, to be distributed under the terms of Sections 1 and 2 above
 on a medium customarily used for software interchange; or, 
\end_layout

\begin_layout Enumerate
Accompany it with the information you received as to the offer to distribute
 corresponding source code.
 (This alternative is allowed only for noncommercial distribution and only
 if you received the program in object code or executable form with such
 an offer, in accord with Subsection b above.) 
\end_layout

\begin_layout Standard
The source code for a work means the preferred form of the work for making
 modifications to it.
 For an executable work, complete source code means all the source code
 for all modules it contains, plus any associated interface definition files,
 plus the scripts used to control compilation and installation of the executable.
 However, as a special exception, the source code distributed need not include
 anything that is normally distributed (in either source or binary form)
 with the major components (compiler, kernel, and so on) of the operating
 system on which the executable runs, unless that component itself accompanies
 the executable.
\end_layout

\begin_layout Standard
If distribution of executable or object code is made by offering access
 to copy from a designated place, then offering equivalent access to copy
 the source code from the same place counts as distribution of the source
 code, even though third parties are not compelled to copy the source along
 with the object code.
 
\end_layout

\end_deeper
\begin_layout Enumerate
You may not copy, modify, sublicense, or distribute the Program except as
 expressly provided under this License.
 Any attempt otherwise to copy, modify, sublicense or distribute the Program
 is void, and will automatically terminate your rights under this License.
 However, parties who have received copies, or rights, from you under this
 License will not have their licenses terminated so long as such parties
 remain in full compliance.
 
\end_layout

\begin_layout Enumerate
You are not required to accept this License, since you have not signed it.
 However, nothing else grants you permission to modify or distribute the
 Program or its derivative works.
 These actions are prohibited by law if you do not accept this License.
 Therefore, by modifying or distributing the Program (or any work based
 on the Program), you indicate your acceptance of this License to do so,
 and all its terms and conditions for copying, distributing or modifying
 the Program or works based on it.
 
\end_layout

\begin_layout Enumerate
Each time you redistribute the Program (or any work based on the Program),
 the recipient automatically receives a license from the original licensor
 to copy, distribute or modify the Program subject to these terms and conditions.
 You may not impose any further restrictions on the recipients' exercise
 of the rights granted herein.
 You are not responsible for enforcing compliance by third parties to this
 License.
 
\end_layout

\begin_layout Enumerate
If, as a consequence of a court judgment or allegation of patent infringement
 or for any other reason (not limited to patent issues), conditions are
 imposed on you (whether by court order, agreement or otherwise) that contradict
 the conditions of this License, they do not excuse you from the conditions
 of this License.
 If you cannot distribute so as to satisfy simultaneously your obligations
 under this License and any other pertinent obligations, then as a consequence
 you may not distribute the Program at all.
 For example, if a patent license would not permit royalty-free redistribution
 of the Program by all those who receive copies directly or indirectly through
 you, then the only way you could satisfy both it and this License would
 be to refrain entirely from distribution of the Program.
\end_layout

\begin_deeper
\begin_layout Standard
If any portion of this section is held invalid or unenforceable under any
 particular circumstance, the balance of the section is intended to apply
 and the section as a whole is intended to apply in other circumstances.
\end_layout

\begin_layout Standard
It is not the purpose of this section to induce you to infringe any patents
 or other property right claims or to contest validity of any such claims;
 this section has the sole purpose of protecting the integrity of the free
 software distribution system, which is implemented by public license practices.
 Many people have made generous contributions to the wide range of software
 distributed through that system in reliance on consistent application of
 that system; it is up to the author/donor to decide if he or she is willing
 to distribute software through any other system and a licensee cannot impose
 that choice.
 
\end_layout

\begin_layout Standard
This section is intended to make thoroughly clear what is believed to be
 a consequence of the rest of this License.
 
\end_layout

\end_deeper
\begin_layout Enumerate
If the distribution and/or use of the Program is restricted in certain countries
 either by patents or by copyrighted interfaces, the original copyright
 holder who places the Program under this License may add an explicit geographic
al distribution limitation excluding those countries, so that distribution
 is permitted only in or among countries not thus excluded.
 In such case, this License incorporates the limitation as if written in
 the body of this License.
 
\end_layout

\begin_layout Enumerate
The Free Software Foundation may publish revised and/or new versions of
 the General Public License from time to time.
 Such new versions will be similar in spirit to the present version, but
 may differ in detail to address new problems or concerns.
 
\end_layout

\begin_deeper
\begin_layout Standard
Each version is given a distinguishing version number.
 If the Program specifies a version number of this License which applies
 to it and ”any later version,” you have the option of following the terms
 and conditions either of that version or of any later version published
 by the Free Software Foundation.
 If the Program does not specify a version number of this License, you may
 choose any version ever published by the Free Software Foundation.
\end_layout

\end_deeper
\begin_layout Enumerate
If you wish to incorporate parts of the Program into other free programs
 whose distribution conditions are different, write to the author to ask
 for permission.
 For software which is copyrighted by the Free Software Foundation, write
 to the Free Software Foundation; we sometimes make exceptions for this.
 Our decision will be guided by the two goals of preserving the free status
 of all derivatives of our free software and of promoting the sharing and
 reuse of software generally.
 
\end_layout

\begin_layout Subsection*
NO WARRANTY 
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{itemize}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
item[11.]
\end_layout

\end_inset

BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR
 THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.
 EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER
 PARTIES PROVIDE THE PROGRAM ”AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER
 EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH
 YOU.
 SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY
 SERVICING, REPAIR OR CORRECTION.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
item[12.]
\end_layout

\end_inset

IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL
 ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE
 THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING
 ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF
 THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS
 OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR
 THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
 EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY
 OF SUCH DAMAGES.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{itemize}
\end_layout

\end_inset


\end_layout

\begin_layout Section*
END OF TERMS AND CONDITIONS 
\end_layout

\begin_layout Subsection*
How to Apply These Terms to Your New Programs
\end_layout

\begin_layout Standard
If you develop a new program, and you want it to be of the greatest possible
 use to the public, the best way to achieve this is to make it free software
 which everyone can redistribute and change under these terms.
 
\end_layout

\begin_layout Standard
To do so, attach the following notices to the program.
 It is safest to attach them to the start of each source file to most effectivel
y convey the exclusion of warranty; and each file should have at least the
 ”copyright” line and a pointer to where the full notice is found.
 For example:
\end_layout

\begin_layout Quote
One line to give the program's name and a brief idea of what it does.
 Copyright 
\size footnotesize
© (
\size default
year) (name of author) 
\end_layout

\begin_layout Quote
This program is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License as published by the Free
 Software Foundation; either version 2 of the License, or (at your option)
 any later version.
 
\end_layout

\begin_layout Quote
This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
 
\end_layout

\begin_layout Quote
You should have received a copy of the GNU General Public License along
 with this program; if not, write to the Free Software Foundation, Inc.,
 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA 
\end_layout

\begin_layout Standard
Also add information on how to contact you by electronic and paper mail.
 
\end_layout

\begin_layout Standard
If the program is interactive, make it output a short notice like this when
 it starts in an interactive mode: 
\end_layout

\begin_layout Quote
Gnomovision version 69, Copyright © year name of author Gnomovision comes
 with ABSOLUTELY NO WARRANTY; for details type `show w'.
 This is free software, and you are welcome to redistribute it under certain
 conditions; type `show c' for details.
 
\end_layout

\begin_layout Standard
The hypothetical commands `show w' and `show c' should show the appropriate
 parts of the General Public License.
 Of course, the commands you use may be called something other than `show
 w' and `show c'; they could even be mouse-clicks or menu items -- whatever
 suits your program.
 
\end_layout

\begin_layout Standard
You should also get your employer (if you work as a programmer) or your
 school, if any, to sign a ”copyright disclaimer” for the program, if necessary.
 Here is a sample; alter the names: 
\end_layout

\begin_layout Quote
Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovisi
on' (which makes passes at compilers) written by James Hacker.
 
\end_layout

\begin_layout Quote
(signature of Ty Coon)
\begin_inset Newline newline
\end_inset

1 April 1989 
\begin_inset Newline newline
\end_inset

Ty Coon, President of Vice 
\end_layout

\begin_layout Standard
This General Public License does not permit incorporating your program into
 proprietary programs.
 If your program is a subroutine library, you may consider it more useful
 to permit linking proprietary applications with the library.
 If this is what you want to do, use the GNU Library General Public License
 instead of this License.
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "1"
key "Fullsack"

\end_inset

Fullsack, Phillipe (1995).
 An arbitrary Lagrangian-Eulerian formulation for creeping flows and its
 application in tectonic models, 
\emph on
Geophys.
 J.
 Int., 120
\emph default
, 1-23.
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "2"
key "VPAC"

\end_inset

Quenette, S., B.
 Appelbe, M.
 Gurnis, L.
 Hodkinson, L.
 Moresi, and P.
 Sunter (2005), An Investigation into Design for Performance and Code Maintainab
ility in High Performance Computing, 
\emph on
ANZIAM J
\emph default
.
\emph on
, 46
\emph default
(e)
\emph on
,
\emph default
 C1001-C1016.
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "3"
key "Underworld"

\end_inset

Moresi, L.N., F.
 Dufour, and H.-B.
 Mühlhaus (2003), A Lagrangian integration point finite element method for
 large deformation modeling of viscoelastic geomaterials, 
\emph on
J.
 Comp.
 Phys., 184
\series bold
,
\series default
\emph default
 476-497.
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "4"
key "Moresi faulting"

\end_inset

Moresi, L.N., and H.-B.
 Mühlhaus (2006), Anisotropic viscous models of large-deformation Mohr-Coulomb
 failure, 
\emph on
Philosophical Magazine, 86
\emph default
(21)
\emph on
,
\emph default
 3287-3305.
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "5"
key "Uzawa"

\end_inset

 Moresi, L.N., and V.S.
 Solomatov (1995), Numerical investigation of 2D convection with extremely
 large viscosity variations, 
\emph on
Phys.
 Fluids,
\emph default
 
\emph on
7
\emph default
(9)
\emph on
,
\emph default
 2154-2162.
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "6"
key "Ellipsis"

\end_inset

O'Neill, C., L.
 Moresi, D.
 Müller, R.
 Albert, and F.
 Dufour (2006), Ellipsis 3D: a particle-in-cell finite element hybrid code
 for modelling mantle convection and lithospheric deformation, 
\shape italic
Comput.
 Geosci
\shape default
.
 
\shape italic
32
\emph on
(10)
\shape default
\emph default
, 1769-1779.
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "7"
key "Citcom"

\end_inset

Zhong, S., M.T.
 Zuber, L.N.
 Moresi, and M.
 Gurnis (2000), The role of temperature-dependent viscosity and surface
 plates in spherical shell models of mantle convection, 
\shape italic
J.
 Geophys.
 Res.
\shape default
, 
\shape italic
105
\shape default
, 11,063-11,082.
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "8"
key "Clast"

\end_inset

Schmid, D.W., and Y.Y.
 Podladchikov (2003), Analytical solutions for deformable elliptical inclusions
 in general shear, 
\shape italic
Geophys.
 J.
 Int.
\shape default
, 
\shape italic
155
\shape default
, 269-288.
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "9"
key "Landau & Lifschitz"

\end_inset

 Landau, L.D., and E.M.
 Lifshitz (1987), 
\emph on
Fluid Mechanics
\emph default
, Pergamon Press, 61-62.
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "10"
key "Folds"

\end_inset

 Johnson, A.M., and R.C.
 Fletcher (1994), 
\emph on
Folding of Viscous Layers
\emph default
, Columbia University Press, 19.
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "11"
key "Buiter et al Numerical Sandbox"

\end_inset

Buiter, S.J.H., and A.Y.
 Babeyko, S.
 Ellis, T.V.
 Gerya, B.J.P.
 Kaus, A.
 Kellner, G.
 Schreurs, and Y.
 Yamada (2006), The numerical sandbox: comparison of model results for a
 shortening and an extension experiment, 
\emph on
Analogue and Numerical Modelling of Crustal-Scale Processes
\emph default
, 
\emph on
253
\emph default
, edited by S.J.H.
 Buiter and G.
 Schreurs, pp.
 29-64, Geological Society, London, Special Publications, doi: 10.1144/GSL.SP.2006.2
53.01.02.
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "12"
key "Stokes Sphere"

\end_inset

Lindgren, E.R.
 (1999), The Motion of a Sphere in an Incompressible Viscous Fluid at Reynolds
 Numbers Considerably Less Than One, 
\shape italic
Physica Scriptae
\shape default
, 
\shape italic
60
\shape default
, 97-110.
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "13"
key "FD Stokes"

\end_inset

 Deubelbeiss, Y., and B.J.P.
 Kaus (2007), A comparison of finite difference formultions for the Stokes
 equations in presence of strongly varying viscosity, poster presented at
 2007 AGU.
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "14"
key "Stable Stokes"

\end_inset

Dohrmann, C., and 
\color none
P.
 Bochev (2004), A stabilized finite element method for the Stokes problem
 based on polynomial pressure projections, 
\shape italic
\color inherit
Int.
 J.
 Num.
 Meth.
 Fluids.
\shape default
\color none
, 
\emph on
\color inherit
46,
\emph default
\color none
 183-201
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography

\color none
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "15"
key "Fast Solvers"

\end_inset

Elman, H.C., D.J.
 Silvester, and A.J.
 Wathen (2005), 
\shape italic
\color inherit
Finite Elements and Fast Iterative Solvers: with Applications in Incompressible
 Fluid Dynamics
\shape default
\color none
, Oxford University Press
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "16"
key "Geomod 2008"

\end_inset

Buiter, S., and G.
 Schreurs, http://www.geodynamics.no/benchmarks/benchmark-annum2008.html
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "17"
key "Dahlen Wedge"

\end_inset

Dahlen, F.A.
 (1984), Noncohesive Critical Wedges: An Exact Solution,
\shape italic
 J.
 Geophys.
 Res., 89
\shape default
, B12, 10125-10133
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "18"
key "Shear angles"

\end_inset

Kaus, B.J.P.
 (2009), Factors that control the angle of shear bands in geodynamic numerical
 models of brittle deformation, 
\shape italic
Tectonophysics
\shape default
, 
\shape italic
484
\shape default
, 36-47
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "19"
key "Dike"

\end_inset

Buck, W.R., L.L.
 Lavier, and A.N.B.
 Poliakov (2005), Modes of faulting at mid-ocean ridges, 
\shape italic
Nature
\shape default
, 
\shape italic
434
\shape default
, 719-723
\end_layout

\begin_layout Bibliography
\labelwidthstring Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "20"
key "HRS"

\end_inset

Hilley, G.E.
 and M.R.
 Strecker (2004), Growth and erosion of fold-and-thrust belts with an applicatio
n to the Aconcagua fold-and-thrust belt, Argentina, 
\shape italic
J.
 Geophys.
 Res.
\shape default
, 
\shape italic
109
\shape default
, B01410, doi:10.1029/2002JB002282 
\end_layout

\end_body
\end_document
