#LyX 1.6.6 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass book
\begin_preamble
\usepackage{hyperref}

\let\myUrl\url
\renewcommand{\url}[1]{(\myUrl{#1})}
\end_preamble
\use_default_options false
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language swedish
\papercolumns 1
\papersides 2
\paperpagestyle headings
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Standard
\noindent
\align center

\color none
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\begin_inset Graphics
	filename gale_cover.png
	lyxscale 30
	width 75page%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Title
Gale
\end_layout

\begin_layout Author
© California Institute of Technology
\begin_inset Newline newline
\end_inset

Walter Landry and Luke Hodkinson
\begin_inset Newline newline
\end_inset

Version 1.5.0
\end_layout

\begin_layout Date
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph*
About the cover:
\end_layout

\begin_layout Standard
A 3D simulation of a mid-ocean ridge courtesy of Garrett Ito.
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
raggedbottom
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Preface
\end_layout

\begin_layout Section
Who Will Use Gale?
\end_layout

\begin_layout Standard
The main audience for Gale is research scientists interested in modeling
 tectonic processes on long geological time scales.
 Examples of problems that can be solved are the development of tectonic
 structures associated with extension and compression, especially where
 localization is important.
 You do not have to be an expert in finite element analysis or scientific
 computing to use this software.
\end_layout

\begin_layout Section
Citation
\end_layout

\begin_layout Standard
Computational Infrastructure for Geodynamics (CIG) is making this source
 code available to you in the hope that the software will enhance your research
 in geophysics.
 The underlying C code for the finite element package was donated to CIG
 in July of 2005.
 A number of individuals have contributed a significant portion of their
 careers toward the development of Gale.
 It is essential that you recognize these individuals in the normal scientific
 practice by making appropriate acknowledgements.
 
\end_layout

\begin_layout Standard
The code is based on the method described in 
\end_layout

\begin_layout Itemize
Moresi, L.N., F.
 Dufour, and H.-B.
 Mühlhaus (2003), A Lagrangian integration point finite element method for
 large deformation modeling of viscoelastic geomaterials, 
\emph on
J.
 Comp.
 Phys., 184
\series bold
,
\series default
\emph default
 476-497.
 
\end_layout

\begin_layout Standard
The code was originally developed by the Victorian Partnership for Advanced
 Computing (VPAC) and Louis Moresi's group at Monash University.
 Walter Landry of CIG and Luke Hodkinson of VPAC have enhanced the code
 to satisfy the requirements of the long-term tectonics community.
 Roger Buck, Gus Correa, Robert Bialas, Guillaume Duclaux, John Sheehan,
 Garrett Ito, 
\color none
Noah Fay, Neil de Laplante, Matthieu Quinquis, Patrice Rey, Lara O'Dwyer,
 Louise Kellogg, Laetitia Le Pourhiet, Leonardo Da Cruz, Jolante Van Wijk,
 Tristan Salles, Mark Fleharty, Taichi Sato, and Lester Anderson
\color inherit
 provided valuable user testing.
 The Gale team requests that in your oral presentations and in your papers
 that you indicate your use of this code and acknowledge the authors of
 the code, CIG 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

www.geodynamics.org
\end_layout

\end_inset

, Victoria Partnership for Advanced Computing 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

www.vpac.org
\end_layout

\end_inset

, and Monash University 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

www.monash.edu
\end_layout

\end_inset

.
\end_layout

\begin_layout Section
Support
\end_layout

\begin_layout Standard
Gale development is supported by a grant from the National Science Foundation
 to CIG, managed by the California Institute of Technology, under Grant
 No.
 EAR-0406751.
 However, most of the software components below Gale have been developed
 by the Victoria Partnership for Advanced Computing (VPAC) and Monash University.
 Some of the support for VPAC has come from subawards from CIG.
\end_layout

\begin_layout Standard
Any opinions, findings, and conclusions or recommendations expressed in
 this material are those of the authors and do not necessarily reflect the
 views of the National Science Foundation.
 
\end_layout

\begin_layout Section
Gale History
\end_layout

\begin_layout Standard
Gale arose from discussions at an NSF-sponsored workshop on Tectonic Modeling
 held in Breckenridge, Colorado, in June 2005; see Geodynamic Modeling of
 Tectonics Processes 2005 workshop report 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

www.geodynamics.org/cig/workinggroups/long/workshops/2005/issues
\end_layout

\end_inset

.
 At that workshop, members of the tectonics community advocated that CIG
 develop a new open-source software package for solving tectonic problems.
 Existing private codes have seen a great deal of use in crustal and lithospheri
c deformation problems such as orogenesis, rifting, and subduction.
 They have also been coupled with surface erosion models, as well as being
 employed for deeper mantle dynamics problems.
 Gale is an open-source code that is intended to cover these research areas
\color none
, with the addition of 3D capability.
\end_layout

\begin_layout Standard
The development of Gale was jump-started by building on top of Underworld
 
\begin_inset CommandInset citation
LatexCommand cite
key "Underworld"

\end_inset

, a mantle convection code developed by Louis Moresi's group at Monash and
 the Victorian Partnership for Advanced Computing (VPAC).
 Underworld was created as a parallel version of Ellipsis3D 
\begin_inset CommandInset citation
LatexCommand cite
key "Ellipsis"

\end_inset

, a mantle convection code which grew out of CitCom 
\begin_inset CommandInset citation
LatexCommand cite
key "Citcom"

\end_inset

.
 Walter Landry of CIG and Luke Hodkinson of VPAC are the primary developers
 of the Gale-specific components.
\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Section
About Gale
\end_layout

\begin_layout Standard
Gale is a parallel, two- or three-dimensional code that solves problems
 related to orogenesis, rifting, and subduction.
 Gale starts with a collection of particles to track material properties
 such as density and, for strain-softening materials, strain.
 At each point in time, a finite element mesh is superimposed over the particles.
 This allows Gale to simulate  problems with large deformations and irregular
 boundaries.
\end_layout

\begin_layout Standard
CIG developed Gale in response to community demand by building on existing
 work by VPAC and Louis Moresi's group at Monash University.
 The code is being released under the GNU General Public License.
\end_layout

\begin_layout Section
Gale Computational Approach and Governing Equations
\end_layout

\begin_layout Subsection
Infrastructure
\end_layout

\begin_layout Standard
Particles are the fundamental object in Gale.
 Particles store all of the material properties, including density, strain,
 and thermal diffusivity.
 A logically regular finite element mesh is created at each time step.
 Material properties are interpolated from the particles to the mesh, and
 the Stokes equations are then solved on that mesh.
 This mesh can become quite distorted, as the boundaries of the mesh will
 be stretched to cover the particles wherever they go.
 Once the Stokes equations are solved, the mesh is retained only to provide
 a good initial guess for the next time step.
\end_layout

\begin_layout Subsection
Units
\end_layout

\begin_layout Standard
Gale has no internal knowledge of units.
 So if you tell Gale that a box is 10 units across, it does not know or
 care whether it is 10 cm or 10 km.
 You only have to make sure that you are consistent.
 For example, if you give velocities in cm/year, make sure that your viscosities
 and lengths also use cm and years.
 However, you may have to scale your units to make the solver work (see
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Scaling"

\end_inset

).
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Basic-Equations"

\end_inset

Basic Equations
\end_layout

\begin_layout Standard
We start by decomposing the stress tensor 
\begin_inset Formula $\sigma$
\end_inset

 into pressure 
\begin_inset Formula $p$
\end_inset

 and deviatoric stress 
\begin_inset Formula $\tau$
\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\sigma_{ij}=\tau_{ij}-p\delta_{ij},\label{eq:stress}\end{equation}

\end_inset

where 
\begin_inset Formula $\delta$
\end_inset

 is the Kronecker delta.
 In its simplest form, Gale solves a conservation equation for momentum
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\tau_{ij,j}-p_{,i}=0,\label{eq:simple momentum conservation}\end{equation}

\end_inset

subject to the (incompressible) continuity equation
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
v_{i,i}=0,\label{eq:continuity}\end{equation}

\end_inset

where 
\begin_inset Formula $v$
\end_inset

 is the velocity.
 We use the convention that repeated indices (e.g., 
\begin_inset Formula $v_{i,i}$
\end_inset

) imply a sum over all dimensions.
 So in three dimensions
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
v_{i,i}\equiv v_{x,x}+v_{y,y}+v_{z,z}.\label{eq:implicit summation}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Note that there is no explicit time dependency in the momentum Equation
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:simple momentum conservation"

\end_inset

.
 Gale simulates creeping flows, so acceleration terms are neglected and
 material motion evolves through a series of equilibria.
 If your boundary condition has a time dependent component, then you may
 infer a time.
 For example, if the boundaries move inwards at 1 mm/sec, then the solution
 when the boundaries have moved 5 mm would correspond to 5 seconds.
\end_layout

\begin_layout Standard
Assuming a simple Newtonian fluid, we can write 
\begin_inset Formula $\tau$
\end_inset

 in terms of the rate of strain tensor 
\begin_inset Formula $\dot{\varepsilon}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\tau_{ij}=2\eta\dot{\varepsilon}_{ij}\equiv\eta\left(v_{i,j}+v_{j,i}\right),\label{eq:stress strain}\end{equation}

\end_inset

where 
\begin_inset Formula $\eta$
\end_inset

 is the viscosity.
\end_layout

\begin_layout Subsection
Gravity
\end_layout

\begin_layout Standard
Equations 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:simple momentum conservation"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:continuity"

\end_inset

 do not include the effect of gravity.
 Gravity is accounted for by adding a body force term to Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:simple momentum conservation"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\tau_{ij,j}-p_{,i}=f_{i},\label{eq:body force}\end{equation}

\end_inset

where
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\begin{array}{ccc}
f_{x} & = & 0\\
f_{y} & = & -g\rho\\
f_{z} & = & 0\end{array}.\label{eq:gravity body force}\end{equation}

\end_inset

 Note that the vertical direction is in the 
\begin_inset Formula $y$
\end_inset

 direction, not the 
\begin_inset Formula $z$
\end_inset

 direction.
 This makes it easy to switch between 2D and 3D models without rewriting
 the entire input file.
\end_layout

\begin_layout Subsection
Divergence Forces
\begin_inset CommandInset label
LatexCommand label
name "sub:Divergence-Forces"

\end_inset


\end_layout

\begin_layout Standard
It can sometimes be convenient to create a model where material is created
 within the simulation.
 For example, magma chambers can be fed through small channels that emanate
 from far away, outside the simulation.
 Simulating these small channels would be too computationally expensive.
 Instead, we can model the magma as just being created in the chamber.
\end_layout

\begin_layout Standard
You do this by adding a divergence term to the continuity Equation (Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:continuity"

\end_inset

),
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
v_{i,i}=d,\label{eq:divergence}\end{equation}

\end_inset

 where 
\begin_inset Formula $d$
\end_inset

 is a scalar that can depend on anything: time, space, strain, etc.
 In this form, the divergence modifies the velocity.
 However, since the velocity and pressure are not really independent, you
 can also think of it as setting a condition on the pressure.
 For example, consider a one dimensional isoviscous case with no gravity.
 You can write the momentum Equation (Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:simple momentum conservation"

\end_inset

) as
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\eta\left(v_{i,jj}+v_{j,ij}\right)+p_{,i}=0.\label{eq:1D momentum}\end{equation}

\end_inset

 In one dimension, Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:divergence"

\end_inset

 becomes
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
v_{x,x}=d,\label{eq:1D divergence}\end{equation}

\end_inset

 which implies
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
2\eta d_{,x}+p_{,x}=0.\label{eq:pressure_divergence_derivative}\end{equation}

\end_inset

 So if you specify the divergence as a constant in one region and zero outside,
 that is equivalent to specifying a pressure drop across the boundary of
 the region.
 This result also holds in general for spherical and ellipsoidal regions,
 although not if the viscosity varies across the boundary of the region.
\end_layout

\begin_layout Subsection
Rheology
\end_layout

\begin_layout Standard
Gale incorporates a number of different rheologies and allows you to create
 your own.
 For more complicated, non-linear rheologies, Gale still solves Equation
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:stress strain"

\end_inset

 for the velocity.
 However, because the viscosity may depend on the velocity and its derivatives,
 Gale now has to iterate until it reaches a self consistent solution for
 the viscosity and velocity.
 See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Uzawa-Algorithm"

\end_inset

 for more details.
\end_layout

\begin_layout Standard
For details on the existing rheologies, see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Materials"

\end_inset

.
 To create your own rheology, see Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Modifying-Gale"

\end_inset

 for guidance.
\end_layout

\begin_layout Subsection
Temperature
\end_layout

\begin_layout Standard
Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:body force"

\end_inset

 does not explicitly include the effect of temperature and heat transfer.
 Temperature can be implicitly included by using a temperature dependent
 viscosity and/or modifying the gravitational force to have a thermal buoyancy
 term.
 To make the simulation completely self consistent, we solve the energy
 equation
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\frac{\partial T}{\partial t}+v\cdot\nabla T=\kappa\nabla^{2}T+Q,\label{eq:energy}\end{equation}

\end_inset

where 
\begin_inset Formula $T$
\end_inset

 is the temperature, 
\begin_inset Formula $\kappa$
\end_inset

 is the thermal diffusivity, and 
\begin_inset Formula $Q$
\end_inset

 is the rate of energy production (e.g., from radiogenic sources).
 Note that Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:energy"

\end_inset

 introduces time into the equation.
\end_layout

\begin_layout Subsection
Numerical Solution
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Artificial-Compressibility"

\end_inset

Artificial Compressibility
\end_layout

\begin_layout Standard
In Gale, the velocity and pressure are represented by linear (Q1) finite
 elements (formally, this is called a Q1-Q1 scheme).
 Normally, this formulation is unstable.
 To stabilize it, we follow Dohrmann & Bochev 
\begin_inset CommandInset citation
LatexCommand cite
key "Stable Stokes"

\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "Fast Solvers"

\end_inset

 and add a compressibility term to the divergence equation
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
v_{i,i}+Cp=d,\label{eq:stabilized}\end{equation}

\end_inset

 where
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\begin{array}{ccc}
C & \equiv & \frac{1}{\nu}\left(M-D\right)\\
M & \equiv & \int_{\Omega_{e}}\psi(x)\psi^{T}(x)d\Omega_{e}\\
D & \equiv & \int_{\Omega_{e}}d\Omega_{e}\end{array},\]

\end_inset

 
\begin_inset Formula $\Omega_{e}$
\end_inset

 is the finite element, and 
\begin_inset Formula $\psi(x)$
\end_inset

 is its basis function.
 That is, we add a compressibility that is scaled by the viscosity and proportio
nal to the mass matrix and the area.
 So as we increase resolution, both of these terms scale as the area of
 the element and go to zero.
\end_layout

\begin_layout Standard
Prior versions of Gale used constant elements for the pressure (a Q1-P0
 scheme).
 That scheme admits solutions that have an arbitrarily sized checkerboard
 pressure term.
 For simple viscous problems, the pressure is not used any further than
 getting the velocity solution, which the checkerboard term does not affect.
 However, with a yielding rheology, pressure plays a critical role in determinin
g when materials yield.
 We can moderate this checkerboard instability by averaging the pressure
 at the nodes of the elements.
 In practice, this does not solve all of the problems.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Q1-P0"

\end_inset

 shows a simple subduction model with the old Q1-P0 scheme and averaged
 pressures.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Q1-Q1"

\end_inset

 shows the new Q1-Q1 scheme.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Q1P0.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Q1-P0"

\end_inset

Pressure for a subduction model using Q1-P0 elements and averaged pressures.
 Notice that, even when averaging the pressure, there is an even-odd artifact
 centered on the bottom.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Q1Q1.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Q1-Q1"

\end_inset

Strain rate invariant for a subduction model using Q1-Q1 elements 
\end_layout

\end_inset


\end_layout

\end_inset

These instabilities in the old Q1-P0 scheme also slowed down convergence,
 while the new Q1-Q1 scheme is dramatically faster.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Scaling"

\end_inset

Scaling
\end_layout

\begin_layout Standard
The new scheme is not without its downsides.
 First of all, the new code does not scale the physical quantities as well
 as the old code.
 In particular, note that the units for Equations 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:body force"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:stabilized"

\end_inset

 are different.
 Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:stabilized"

\end_inset

 has been divided by viscosity and multiplied by length.
 So, if you have a viscosity of 
\begin_inset Formula $10^{25}Pa\cdot s$
\end_inset

 and you express your viscosities in 
\begin_inset Formula $Pa\cdot s$
\end_inset

, the compressibility pressure term will become too small and the code will
 be unable to solve.
 One workaround is to scale the units of time and mass (e.g., seconds and
 kg) so that the viscosities are around 1.
 So if the viscosities are around 
\begin_inset Formula $10^{25}$
\end_inset

, then scale time and mass as
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\begin{array}{ccc}
s & \rightarrow & 10^{25}s,\\
kg & \rightarrow & 10^{50}kg.\end{array}\]

\end_inset

 This implies that a viscosity of 
\begin_inset Formula $10^{25}Pa\cdot s$
\end_inset

 becomes 1, and a velocity of 
\begin_inset Formula $10^{-11}m/s$
\end_inset

 becomes 
\begin_inset Formula $10^{14}$
\end_inset

.
 Viscosities become small and velocities become large.
\end_layout

\begin_layout Standard
Scaling it this way means that you do not have to scale the length or stresses.
 You also do not have to scale the density or gravity, since they only appear
 when multiplied by each other.
 The main things you have to change are the viscosities and velocities.
 For thermal simulations, you also have to scale the thermal diffusivity.
 
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Hydrostatic-Pressure"

\end_inset

Hydrostatic Pressure
\end_layout

\begin_layout Standard
Ideally, the compressibility term should be applied to the dynamic pressure,
 not the hydrostatic pressure.
 This is not a problem in simple sandbox simulations, where the dynamic
 pressure is about the same size as the hydrostatic pressure.
 However, in geological models, the hydrostatic pressure is much, much larger
 than the dynamic pressure.
 This means that the compressibility term is far too large, leading to excessive
 compressibility.
 As Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Collapsing_compressible"

\end_inset

 shows, this can completely alter the dynamics.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/collapsing_compressible.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Collapsing_compressible"

\end_inset

Strain rate invariant and velocity arrows for a geologic model without hydrostat
ic correction.
 The compressibility is so large on the bottom that the whole region falls
 down, dominating the dynamics.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
To fix this, you can subtract out the hydrostatic term.
 You can write Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:body force"

\end_inset

 as
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\tau_{ij,j}-p_{0,i}-\delta p_{,i}=f_{0i}+\delta f_{i},\label{eq:hydrostatic}\end{equation}

\end_inset

 where 
\begin_inset Formula $p_{0}$
\end_inset

 is the hydrostatic pressure, and 
\begin_inset Formula $f_{0}$
\end_inset

 is the background buoyancy force that leads to a hydrostatic pressure.
 Since 
\begin_inset Formula $p_{0}$
\end_inset

 and 
\begin_inset Formula $f_{0}$
\end_inset

 are constructed to be hydrostatic, they cancel each other.
 You can then rewrite Equations 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:body force"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:divergence"

\end_inset

 as
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\begin{array}{ccc}
\tau_{ij,j}-\delta p_{,i} & = & \delta f_{i}\\
v_{i,i}+C\delta p & = & d\end{array}.\label{eq:complete numerical stokes}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Note that if you are simulating a simple viscous problem in a box, you never
 even use the complete pressure.
 In the general case such as with a yielding rheology, the viscosity may
 depend on the overall pressure.
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Uzawa-Algorithm"

\end_inset

Uzawa Algorithm
\end_layout

\begin_layout Standard
Using standard finite-element techniques, you can collect all of the terms
 together and represent them in matrix form
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\left(\begin{array}{cc}
K & G\\
G^{T} & C\end{array}\right)\left(\begin{array}{c}
v\\
p\end{array}\right)=\left(\begin{array}{c}
f\\
d\end{array}\right),\label{eq:matrix form}\end{equation}

\end_inset

where 
\begin_inset Formula $K$
\end_inset

 is a complicated submatrix depending on material properties, 
\begin_inset Formula $G$
\end_inset

 is the simple gradient operator, C is the artificial compressibility term,
 
\begin_inset Formula $f$
\end_inset

 is the body force (e.g., gravity), and 
\begin_inset Formula $d$
\end_inset

 is the divergence term.
 This implies the separate relations
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\begin{array}{ccc}
Kv+Gp & = & f\\
G^{T}v+Cp & = & d\end{array}.\label{eq:expanded matrix}\end{equation}

\end_inset


\end_layout

\begin_layout Standard
In order to solve this, it turns out to be useful to solve a simplified
 form of
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\left(G^{T}K^{-1}G\right)z=r,\]

\end_inset

 where 
\begin_inset Formula $r$
\end_inset

 is given and 
\begin_inset Formula $z$
\end_inset

 is unknown.
 Starting from an approximate solution to this equation makes it easier
 to find a solution to the complete equation.
 The choice used in Gale is to approximate 
\begin_inset Formula $G^{T}K^{-1}G$
\end_inset

 with 
\begin_inset Formula \[
Q\equiv G^{T}\left[diag\left(K\right)\right]^{-1}G.\]

\end_inset

 
\begin_inset Formula $Q$
\end_inset

 is known as a preconditioner.
 To actually solve Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:expanded matrix"

\end_inset

, we use the Uzawa algorithm 
\begin_inset CommandInset citation
LatexCommand cite
key "Uzawa"

\end_inset

.
 In particular, the steps are
\end_layout

\begin_layout Enumerate
Start with an initial guess of 
\begin_inset Formula $q_{0}$
\end_inset

 of the pressure-like variable.
\end_layout

\begin_layout Enumerate
Solve 
\begin_inset Formula $K\, u_{0}=f-Gq_{0}$
\end_inset

 for 
\begin_inset Formula $u_{0}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Calculate the residual 
\begin_inset Formula $r_{0}=G^{T}u_{0}+Cq_{0}-d$
\end_inset

.
\end_layout

\begin_layout Enumerate
do
\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

k=1
\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Solve 
\begin_inset Formula $Qz_{k-1}=r_{k-1}$
\end_inset

 for 
\begin_inset Formula $z_{k-1}$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

if k==1
\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $s_{1}=z_{0}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

else
\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $\beta=\frac{z_{k-1}^{T}r_{k-1}}{z_{k-2}^{T}r_{k-2}}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $s_{k}=r_{k-1}+\beta s_{k-1}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

end if
\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Solve 
\begin_inset Formula $Ku^{*}=Gs_{k}$
\end_inset

 for 
\begin_inset Formula $u^{*}$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $\alpha=\frac{z_{k-1}^{T}r_{k-1}}{s_{k}^{T}\left(G^{T}u^{*}-Ms_{k}\right)}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $q_{k+1}=q_{k}+\alpha s_{k}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $u_{k+1}=u_{k}-\alpha u^{*}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Formula $r_{k}=r_{k-1}-\alpha\left(G^{T}u^{*}-Ms_{k}\right)$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

k=k+1
\end_layout

\begin_layout Enumerate
while 
\begin_inset Formula $\left(u_{k+1}-u_{k}\right)/u_{k+1}>linear\, tolerance$
\end_inset


\end_layout

\begin_layout Standard
That will give us a single solution to Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:expanded matrix"

\end_inset

 with a certain viscosity.
 However, because of yielding or strain-rate dependent rheologies, the viscosity
 will change and the solution will not be consistent.
 To make it consistent, we need to recompute the viscosities with the new
 solution for the pressure and velocity.
 Then we solve Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:expanded matrix"

\end_inset

 again using our previous solution for the pressure as a starting point.
 We continue this process until the change in the velocity is less than
 the non-linear tolerance.
\end_layout

\begin_layout Chapter
Installation and Getting Help
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Installation of Gale on a desktop or laptop machine is, in most cases, very
 easy.
 Binary packages have been created for the most common platforms, i.e., Linux,
 Mac OS X, and Windows.
 Installation on other architectures or on parallel machines requires building
 the software from the source code, which can be difficult for inexperienced
 users.
 
\end_layout

\begin_layout Section
Binaries
\end_layout

\begin_layout Standard
If you do not need to run on parallel machines, the easiest way to install
 Gale is to download binaries for your platform from the Gale website 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

geodynamics.org/cig/software/packages/long/gale/
\end_layout

\end_inset

.
 Then you can run Gale from the command line or DOS prompt.
 CIG provides binaries for Linux, Mac OS X (10.4 or greater), and Windows
 (2000 and XP).
\end_layout

\begin_layout Section
Building from Source
\end_layout

\begin_layout Standard
Read this only if the binaries are not sufficient for you.
 
\end_layout

\begin_layout Subsection
System Requirements
\end_layout

\begin_layout Standard
Gale works on a variety of computational platforms and has been tested on
 workstations running 
\end_layout

\begin_layout Itemize
Mac OS X 10.4.6 (Intel)
\end_layout

\begin_layout Itemize
Windows Vista
\end_layout

\begin_layout Itemize
Debian stable (x86 and AMD64), testing (x86 and AMD64), and unstable (x86)
\end_layout

\begin_layout Standard
Gale has also been tested on clusters running RedHat Enterprise Linux 3
 (EM64T).
\end_layout

\begin_layout Subsection
Dependencies
\end_layout

\begin_layout Standard
In order to build Gale, you must have the headers and development libraries
 for
\end_layout

\begin_layout Itemize
MPI
\end_layout

\begin_layout Itemize
PETSc 3.0 (not 3.1!)
\end_layout

\begin_layout Itemize
libxml2
\end_layout

\begin_layout Standard
You must also have python 2.2.1 or greater installed.
 If you do not already have MPI, then in many cases PETSc can install a
 version for you.
 Installing PETSc also requires a Blas/Lapack implementation, which, again,
 PETSc can install for you.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sec:Downloading-the-Code"

\end_inset

Downloading the Code
\end_layout

\begin_layout Standard
You can get the source for the latest release from the Gale website 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

geodynamics.org/cig/software/packages/long/gale/
\end_layout

\end_inset

.
 In that tarball is the file INSTALL.
 For some platforms, there are platform-specific instructions.
 Generally, the hardest part is not installing Gale itself, but PETSc.
\end_layout

\begin_layout Subsubsection
Source Code Repository (Experts Only)
\end_layout

\begin_layout Standard
Advanced users and software developers may be interested in downloading
 the latest Gale source code directly from the CIG source code repository,
 instead of using the prepared source package.
 To check whether you have a Mercurial client installed on your machine,
 type:
\end_layout

\begin_layout LyX-Code
hg
\end_layout

\begin_layout Standard
You should get a help message that starts with:
\end_layout

\begin_layout LyX-Code
Mercurial Distributed SCM
\end_layout

\begin_layout LyX-Code
...
\end_layout

\begin_layout Standard
Otherwise, you will need to download and install a Mercurial client, available
 at the Mercurial Website 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

mercurial.selenic.com
\end_layout

\end_inset

.
 Then the code can be checked out with the following commands: 
\end_layout

\begin_layout LyX-Code
hg clone http://geodynamics.org/hg/long/3D/gale gale
\end_layout

\begin_layout LyX-Code
hg clone http://geodynamics.org/hg/long/3D/gale/PICellerator gale/PICellerator
\end_layout

\begin_layout LyX-Code
hg clone http://geodynamics.org/hg/long/3D/gale/StGermain gale/StGermain
\end_layout

\begin_layout LyX-Code
hg clone http://geodynamics.org/hg/long/3D/gale/StgDomain gale/StgDomain
\end_layout

\begin_layout LyX-Code
hg clone http://geodynamics.org/hg/long/3D/gale/StgFEM gale/StgFEM 
\end_layout

\begin_layout LyX-Code
hg clone http://geodynamics.org/hg/long/3D/gale/Underworld gale/Underworld
\end_layout

\begin_layout LyX-Code
hg clone http://geodynamics.org/hg/long/3D/gale/config gale/config
\end_layout

\begin_layout LyX-Code
hg clone http://geodynamics.org/hg/long/3D/gale/gLucifer gale/gLucifer
\end_layout

\begin_layout Standard
You can then update your checkout with the commands
\end_layout

\begin_layout LyX-Code
cd gale
\end_layout

\begin_layout LyX-Code
hg pull
\end_layout

\begin_layout LyX-Code
hg up
\end_layout

\begin_layout LyX-Code
cd PICellerator
\end_layout

\begin_layout LyX-Code
hg pull
\end_layout

\begin_layout LyX-Code
hg up
\end_layout

\begin_layout LyX-Code
cd ../StGermain
\end_layout

\begin_layout LyX-Code
hg pull
\end_layout

\begin_layout LyX-Code
hg up
\end_layout

\begin_layout LyX-Code
cd ../StgDomain
\end_layout

\begin_layout LyX-Code
hg pull
\end_layout

\begin_layout LyX-Code
hg up
\end_layout

\begin_layout LyX-Code
cd ../StgFEM
\end_layout

\begin_layout LyX-Code
hg pull
\end_layout

\begin_layout LyX-Code
hg up
\end_layout

\begin_layout LyX-Code
cd ../Underworld
\end_layout

\begin_layout LyX-Code
hg pull
\end_layout

\begin_layout LyX-Code
hg up
\end_layout

\begin_layout LyX-Code
cd ../config
\end_layout

\begin_layout LyX-Code
hg pull
\end_layout

\begin_layout LyX-Code
hg up
\end_layout

\begin_layout LyX-Code
cd ../gLucifer
\end_layout

\begin_layout LyX-Code
hg pull
\end_layout

\begin_layout LyX-Code
hg up 
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Section
Support
\end_layout

\begin_layout Standard
The primary point of support for Gale is the CIG Long-Term Crustal Dynamics
 Mailing List 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

cig-long@geodynamics.org
\end_layout

\end_inset

.
 Feel free to send questions, comments, feature requests, and bugs to the
 list.
 The mailing list is archived at
\end_layout

\begin_layout LyX-Code
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

geodynamics.org/pipermail/cig-long/
\end_layout

\end_inset


\end_layout

\begin_layout Standard
You may also use the bug tracker
\end_layout

\begin_layout LyX-Code
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

geodynamics.org/roundup
\end_layout

\end_inset


\end_layout

\begin_layout Standard
to submit bugs and requests for new features.
\end_layout

\begin_layout Chapter
Running Gale
\end_layout

\begin_layout Section
Basic Usage
\end_layout

\begin_layout Standard
If you downloaded binaries for your platform, you can run the Gale executable
 directly.
 For example,
\end_layout

\begin_layout LyX-Code
./Gale_1_5_0 input/cookbook/yielding.xml
\end_layout

\begin_layout Standard
will output 
\end_layout

\begin_layout LyX-Code
TimeStep = 0, Time = 0
\end_layout

\begin_layout LyX-Code
TimeStep = 1, Time = 0.010764
\end_layout

\begin_layout LyX-Code
TimeStep = 2, Time = 0.0214745
\end_layout

\begin_layout LyX-Code
TimeStep = 3, Time = 0.0321333
\end_layout

\begin_layout LyX-Code
TimeStep = 4, Time = 0.0427393
\end_layout

\begin_layout LyX-Code
TimeStep = 5, Time = 0.0532923
\end_layout

\begin_layout LyX-Code
TimeStep = 6, Time = 0.0637925
\end_layout

\begin_layout LyX-Code
TimeStep = 7, Time = 0.0742399
\end_layout

\begin_layout LyX-Code
TimeStep = 8, Time = 0.0846353
\end_layout

\begin_layout LyX-Code
TimeStep = 9, Time = 0.0949793
\end_layout

\begin_layout Standard
It will also create a great deal of output in the directory 
\family typewriter
output
\family default
/.
\end_layout

\begin_layout Standard
If you do not specify an input file, you will get no output.
 If Gale cannot find the file, you will get an error:
\end_layout

\begin_layout LyX-Code

\size small
Error: File input/cookbook/foo.xml doesn't exist, not readable, or not valid.
\end_layout

\begin_layout Standard
Due to quirks in some implementations of MPI, you may have to specify the
 complete path to the input file (e.g., 
\family typewriter
./Gale_1_5_0 /home/juser/gale/input/cookbook/yielding.xml
\family default
).
\end_layout

\begin_layout Standard
In general, Gale does not have many defaults, so almost everything must
 be specified in the input file.
 For examples of how to create your own input files, see Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Cookbooks"

\end_inset

.
 For a complete description of the input file format, see Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Input-File-Format"

\end_inset

.
 
\end_layout

\begin_layout Standard
If you compile Gale yourself, you can run it from where you installed it.
 If running in parallel on your own machine, prepend 
\family typewriter
mpirun
\family default
 or 
\family typewriter
mpiexec
\family default
 (depending on your local implementation of MPI).
 For example, if your computer has two cores, then
\end_layout

\begin_layout LyX-Code
mpirun -np 2 bin/Gale /home/juser/gale/input/cookbook/yielding.xml
\end_layout

\begin_layout Standard
will use both cores.
\end_layout

\begin_layout Section
Advanced Usage
\end_layout

\begin_layout Subsection
Direct Solvers
\end_layout

\begin_layout Standard
If you have a problem with strong viscosity gradients, the default solver
 (GMRES) may converge very slowly.
 Strong viscosity gradients occur when you start with materials with different
 viscosities (e.g., Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Circular-Inclusion"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Falling-Sphere"

\end_inset

), or when materials yield (e.g., Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Geomod-2004"

\end_inset

).
\end_layout

\begin_layout Standard
One solution is to use a direct solver instead of GMRES.
 PETSc has a facility where you can use command-line arguments to change
 the solver.
 For example, on a single machine, to use a direct LU solve, you only need
 to append arguments to the command line
\end_layout

\begin_layout LyX-Code
./Gale_1_5_0  input/cookbook/yielding.xml -pc_type lu -ksp_type preonly
\end_layout

\begin_layout Standard
In parallel, the analogous approach would be to use Mumps, a parallel direct
 solver.
 You first need to make sure that your version of PETSc was installed with
 Mumps.
 If you built PETSc yourself, you need to add the option 
\begin_inset Quotes sld
\end_inset


\family typewriter
--download-mumps=yes
\family default

\begin_inset Quotes srd
\end_inset

 when configuring.
\end_layout

\begin_layout Standard
Once that is done, enabling it is again just appending a few arguments to
 the command line
\end_layout

\begin_layout LyX-Code
./Gale_1_5_0  input/cookbook/yielding.xml -pc_factor_mat_solver_package mumps
 
\backslash

\end_layout

\begin_layout LyX-Code
-ksp_type preonly -pc_type lu -mat_mumps_icntl_14 100
\end_layout

\begin_layout Standard
Note that this is different from previous versions of Gale.
 Petsc changed the syntax for calling Mumps solvers.
 Also, Mumps changed the default amount of memory it allocates.
 This is not an issue for small simulations, but larger simulations can
 easily run out of memory.
 The option 
\begin_inset Quotes sld
\end_inset


\family typewriter
-mat_mumps_icntl_14 100
\family default

\begin_inset Quotes sld
\end_inset

 tells Mumps to allocate more memory.
\end_layout

\begin_layout Subsection
Command-Line Parameters
\end_layout

\begin_layout Standard
You can also change the default values of the input file without modifying
 that file by appending arguments.
 For example, to change only the number of time steps from the default value
 of 10 to 20, use the following command
\end_layout

\begin_layout LyX-Code
./Gale_1_5_0  input/cookbook/yielding.xml --maxTimeSteps=20
\end_layout

\begin_layout Standard
You can append any number of modified parameters in one unbroken line (here
 shown wrapped around)
\end_layout

\begin_layout LyX-Code

\size small
./Gale_1_5_0  input/cookbook/yielding.xml --maxTimeSteps=20 --dim=3 --elementResI=
64 
\begin_inset Newline newline
\end_inset

--elementResJ=64 --elementResK=64 --particlesPerCell=60 --dumpEvery=10
\end_layout

\begin_layout Section
Output and Visualization
\end_layout

\begin_layout Standard
The sample input files will produce a directory in which you will find a
 number of
\color none
 files.
 The formats of these files are described fully in Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Output-File-Format"

\end_inset

.
\end_layout

\begin_layout Standard
The default setting is to create VTK files every 10 time steps.
 To change the frequency for creating VTK files, you need to change the
 parameter 
\family typewriter
dumpEvery
\family default
.
 For example, if you modify the line with 
\family typewriter
dumpEvery
\family default
 to
\end_layout

\begin_layout LyX-Code
<param name="dumpEvery">25</param>
\end_layout

\begin_layout Standard
then the VTK files will only be created every 25 time steps.
 Similarly, to change the frequency of checkpoints, you need to change the
 parameter 
\family typewriter
checkpointEvery
\family default
.
 You can change the value to any number you choose.
\end_layout

\begin_layout Standard

\color none
There are a number of different options for visualizing the data.
 The easiest way is to use the VTK files.
 These files are in a standard, self-describing file format that can be
 easily visualized with several different visualization programs, e.g., ParaView
 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

paraview.org
\end_layout

\end_inset

, MayaVI 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

mayavi.sf.net
\end_layout

\end_inset

, and Visit 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

www.llnl.gov/visit
\end_layout

\end_inset

.
 ParaView is recommended as it is easy to get working, easy to use, and
 scales to large data sets.
\end_layout

\begin_layout Standard
Another option is to use the scripts in the 
\family typewriter
tools/
\family default
 directory to convert the VTK files into CSV format.
 Then the data can be easily manipulated with standard tools like Python
 or Matlab.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Basic Visualization with ParaView
\begin_inset CommandInset label
LatexCommand label
name "sub:Visualization-with-ParaView"

\end_inset


\end_layout

\begin_layout Standard

\color none
These instructions are for Paraview version 3.6.1.
 To visualize step 10 of 
\family typewriter
input/cookbook/yielding.xml
\family default
, 
\end_layout

\begin_layout Enumerate

\color none
Start Paraview and open a new data file: 
\family sans
File
\family default
 
\begin_inset Formula $\triangleright$
\end_inset

 
\family sans
Open
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center

\color none
\begin_inset Graphics
	filename images/Paraview_open_data.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
A file dialog screen will appear.
 Navigate to the output directory and select 
\family typewriter
\color none
fields.00009.pvts
\family default
.
 Then click the green ``Apply
\begin_inset Quotes srd
\end_inset

 button.
 Paraview will display a pseudocolor plot of the strain rate invariant.
\end_layout

\begin_deeper
\begin_layout Standard
\align center

\color none
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center

\color none
\begin_inset Graphics
	filename images/Paraview_strainrate.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
You can instead plot the pressure by first clicking on the ``Display''
\color none
 tab.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_display.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Click on the drop-down list to the right of ``Color by'' and select ``PressureFi
eld.''
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_nodal_pressure.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Now you can plot the velocity as arrows on top of the pressure: Click on
 the ``Glyph'' symbol
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_glyph.png

\end_inset


\end_layout

\begin_layout Standard
and then press the green ``Apply'' button.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_pressure_velocity.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
You can temporarily remove the pressure to see the velocities better by
 clicking on the
\color none
 ``
\color inherit
eye
\begin_inset Quotes srd
\end_inset

 graphic 
\begin_inset Graphics
	filename images/Paraview_eye.png

\end_inset

 next to 
\family typewriter
fields.00009.pvts
\family default
.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center

\color none
\begin_inset Graphics
	filename images/Paraview_v.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
You can also visualize the magnitude of the velocity: First 
\color none
click the ``eye
\begin_inset Quotes srd
\end_inset

 again, then click on the text 
\family typewriter
\color inherit
fields.00009.pvts
\family default
\color none
.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center

\color none
\begin_inset Graphics
	filename images/Paraview_pressure_velocityII.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Next 
\color none
click on the ``Display'' tab.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center

\color none
\begin_inset Graphics
	filename images/Paraview_pressure_velocity_display.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Finish by clicking on the drop-down list to the right of ``Color by'' and
 selecting ``VelocityMagnitudeField.''
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_vmag.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Now you can look at the particles.
 Starting over, open 
\family typewriter
\color none
picIntegrationPoints.00009.pvtu
\family default
 and click on the green ``Apply'' button.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center

\color none
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center

\color none
\begin_inset Graphics
	filename images/Paraview_particles_viscosity.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\color none
This displays the viscosity of the particles.
 The red points represent the high viscosity ball, while the blue points
 represent material that has yielded.
\end_layout

\end_deeper
\begin_layout Enumerate
To see explicitly which material has failed plastically, click on the ``Display'
' tab and change the ``Color by'' box to ``Post_Failure_Strain.''
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_particles_yielding.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Now we will visualize a 3D simulation.
 Run Gale with the input file 
\family typewriter
input/cookbook/viscous_extension3D.xml
\family default
 and open 
\family typewriter
fields.00009.ptvs
\family default
.
 Paraview will display an outline of the 3D volume.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_3D_outline.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Click on the button near the top center labeled 
\begin_inset Quotes sld
\end_inset

Outline
\begin_inset Quotes srd
\end_inset

 and change it to 
\begin_inset Quotes sld
\end_inset

Surface
\begin_inset Quotes srd
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_3D_surface_button.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Next click on the button near the top left labeled 
\begin_inset Quotes sld
\end_inset

Solid Color
\begin_inset Quotes srd
\end_inset

 and change it to 
\begin_inset Quotes sld
\end_inset

StrainRateInvariantField
\begin_inset Quotes srd
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_3D_color_button.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
You can now rotate it by clicking and holding with button 1 on your mouse.
 You can zoom in and out by clicking and holding button 2, and translate
 by clicking and holding button 3.
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_3D_rotate.png
	lyxscale 50
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
Visualizing Movies with Paraview
\end_layout

\begin_layout Standard
To create a movie, with Paraview, you need to create a special 
\family typewriter
pvd
\family default
 file that stitches all of the individual frames together.
 You can do this with the utility 
\family typewriter
tools/generate_pvd
\family default
.
 You generally invoke it as
\end_layout

\begin_layout LyX-Code
generate_pvd NAME TYPE START END STEP
\end_layout

\begin_layout Standard
where 
\family typewriter
NAME
\family default
 is usually either 
\begin_inset Quotes sld
\end_inset

fields
\begin_inset Quotes srd
\end_inset

 or 
\begin_inset Quotes sld
\end_inset

picIntegrationPoints
\begin_inset Quotes srd
\end_inset

, depending on whether you want to animate the fields or the particles.
 If you create your own swarm of particles, then they will have their own
 VTK files, and you would use that name with 
\family typewriter
generate_pvd
\family default
.
 
\end_layout

\begin_layout Standard

\family typewriter
TYPE
\family default
 is either '
\family typewriter
u
\family default
' for unstructured (particles), or '
\family typewriter
s
\family default
' for unstructured (fields).
 START is the time of the first time step, END is the last step, and STEP
 is the step size between successive frames.
 So the command
\end_layout

\begin_layout LyX-Code
generate_pvd picIntegrationPoints u 0 100 10
\end_layout

\begin_layout Standard
will generate 
\family typewriter
picIntegrationPoints.pvd
\family default
.
 That file starts at t=0 and includes every 10'th step up to and including
 100.
 So to animate the post yielding strain in 
\family typewriter
input/viscous_extension3D.xml
\family default
, you would run, from the top directory,
\end_layout

\begin_layout LyX-Code
generate_pvd fields t fields -s s 0 9
\end_layout

\begin_layout Standard
Loading up 
\family typewriter
fields.pvd
\family default
 in Paraview gives you access to the movie buttons
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename images/Paraview_movie_controls.png

\end_inset


\end_layout

\begin_layout Subsection
Generating CSV files
\end_layout

\begin_layout Standard
The script 
\family typewriter
tools/vtk2csv.py
\family default
 converts VTK files to a simple comma separated format.
 To run it, you must have Paraview installed.
 Included with the Paraview installation is a utility 
\family typewriter
pvpython
\family default
.
 This is a version of Python set up to automatically have access to all
 of the Paraview libraries.
 It takes any number of VTK files on input and outputs corresponding CSV
 files.
 So to convert the file 
\family typewriter
fields.00009.pvts
\family default
 and all associated 
\family typewriter
vts
\family default
 files, you run it as
\end_layout

\begin_layout LyX-Code
pvpython vtk2csk.py fields.00009.pvts
\end_layout

\begin_layout Standard
and it will output 
\family typewriter
fields.00009.csv
\family default
.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Gauging-Accuracy"

\end_inset

Gauging Accuracy
\end_layout

\begin_layout Standard
Gale makes a number of approximations.
 Before trusting any results you get from Gale, you must vary a number of
 parameters to insure that the results are not an artifact of Gale's approximati
ons.
 The most important parameter is the resolution.
\end_layout

\begin_layout Standard
In Gale, there are two kinds of resolution: grid and particles.
 The grid is where the Stokes equations are solved, and defines the resolution
 of everything in the ``fields'' output files (e.g., velocity, pressure, strain
 rate, etc.).
 The resolution of the grid is determined by 
\family typewriter
elementResI
\family default
, 
\family typewriter
elementResJ
\family default
, and 
\family typewriter
elementResK
\family default
.
\end_layout

\begin_layout Standard
The particles carry material information.
 If you have a smooth velocity field, but a complex particle properties
 field, you need a greater ratio of particles to grid points.
 The resolution of the particles is expressed in terms of the number of
 particles per grid cell.
 So increasing the grid resolution automatically increases the particle
 resolution proportionately.
 To further modify the particle resolution, change the parameter 
\family typewriter
particlesPerCell
\family default
.
\end_layout

\begin_layout Standard
In other words, for every simulation you need to vary the grid resolution
 (
\family typewriter
elementResI
\family default
, 
\family typewriter
elementResJ
\family default
, 
\family typewriter
elementResK
\family default
) and the particles resolution (
\family typewriter
particlesPerCell
\family default
).
\end_layout

\begin_layout Standard
In addition, you may need to vary the scaling factor for time steps (
\family typewriter
dtFactor
\family default
).
 Depending on the boundary conditions, you may need to vary the size of
 the box (
\family typewriter
minX
\family default
, 
\family typewriter
minY
\family default
, 
\family typewriter
minZ
\family default
, 
\family typewriter
maxX
\family default
, 
\family typewriter
maxY
\family default
, 
\family typewriter
maxZ
\family default
).
 Finally, vary the tolerance for each linear and nonlinear iteration (
\family typewriter
linearTolerance
\family default
 and 
\family typewriter
nonlinearTolerance
\family default
).
\end_layout

\begin_layout Standard
How much to vary the various parameters depends upon each parameter.
 In general, changing each parameter by a factor of two should give you
 a good enough idea of how much the simulation depends on that parameter.
\end_layout

\begin_layout Chapter
Cookbooks
\begin_inset CommandInset label
LatexCommand label
name "cha:Cookbooks"

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
In this chapter, you will edit a template file (
\family typewriter
input/cookbook/template.xml
\family default
) to create customized input files.
 You should be able to use the template file as a basis for most of your
 own input files.
 There are two things in the template file, however, that might need modificatio
n: the force of gravity, which by default is set to 1 (if you are using
 cgs, for example, the force of gravity must be changed to 980), and the
 normal velocity on all boundaries except the top, which are set to zero.
 Beyond that, you only need to specify where to place materials.
\end_layout

\begin_layout Subsection
Adding Lines to the Template File
\end_layout

\begin_layout Standard
Unless otherwise specified, when you are instructed to add sections to the
 input file
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
To copy and paste from this PDF with Adobe Acrobat, right click to get the
 context menu and select ``Allow Hand Tool to Select Text.''
\end_layout

\end_inset

, that text should be added after the line
\end_layout

\begin_layout LyX-Code
<struct name="components">
\end_layout

\begin_layout Standard
at the beginning of the file, and before the lines
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<list name="plugins">
\end_layout

\begin_layout Standard
The template file is indented to make it easier to notice if you add a component
 in the middle of another component.
 This is solely for the benefit of users.
 Gale does not pay attention to indentation when reading the files.
\end_layout

\begin_layout Subsection
Adding Variables to the Template File
\end_layout

\begin_layout Standard
When you are instructed to add a variable, you must add it at the end of
 the file before the closing line
\end_layout

\begin_layout LyX-Code
</StGermainData>
\end_layout

\begin_layout Standard
Finished versions of all of these examples are found in 
\family typewriter
input/cookbook
\family default
/.
 
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Viscous-Material"

\end_inset

Viscous Material
\end_layout

\begin_layout Standard
This example simply fills up the computational domain with a single viscous
 material.
 It is a valid input file, but will not run as nothing is moving.
 This file mainly serves as the basis for subsequent examples.
\end_layout

\begin_layout Enumerate
First, copy 
\family typewriter
template.xml
\family default
 to 
\family typewriter
myviscous.xml
\family default
 to edit as follows.
 
\end_layout

\begin_layout Enumerate
Add in a material.
 The simplest variety is a purely viscous material, so add a box covering
 the whole domain:
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct name="boxShape">
\end_layout

\begin_layout LyX-Code
  <param name="Type">Box</param>
\end_layout

\begin_layout LyX-Code
  <param name="startX">minX</param>
\end_layout

\begin_layout LyX-Code
  <param name="endX">maxX</param>
\end_layout

\begin_layout LyX-Code
  <param name="startY">minY</param>
\end_layout

\begin_layout LyX-Code
  <param name="endY">maxY</param>
\end_layout

\begin_layout LyX-Code
  <param name="startZ">minZ</param>
\end_layout

\begin_layout LyX-Code
  <param name="endZ">maxZ</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
Note: Default parameters for the box (e.g., 
\family typewriter
minX
\family default
, 
\family typewriter
maxX
\family default
, 
\family typewriter
minY
\family default
, etc.) are already defined in 
\family typewriter
template.xml
\family default
.
\end_layout

\end_deeper
\begin_layout Enumerate
Then set the material's viscosity
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct name="backgroundViscosity">
\end_layout

\begin_layout LyX-Code
  <param name="Type">MaterialViscosity</param>
\end_layout

\begin_layout LyX-Code
  <param name="eta0">1.0</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
Remember that Gale has no internal knowledge of units, so if you think of
 everything in cgs, then this implies a viscosity of 
\begin_inset Formula $1\frac{g}{cm^{2}\, s}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
Finally, you create the material, using the components just created.
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct name="viscous">
\end_layout

\begin_layout LyX-Code
  <param name="Type">RheologyMaterial</param>
\end_layout

\begin_layout LyX-Code
  <param name="Shape">boxShape</param>
\end_layout

\begin_layout LyX-Code
  <param name="density">1.0</param>
\end_layout

\begin_layout LyX-Code
  <list name="Rheology">
\end_layout

\begin_layout LyX-Code
    <param>backgroundViscosity</param>
\end_layout

\begin_layout LyX-Code
    <param>storeViscosity</param>
\end_layout

\begin_layout LyX-Code
    <param>storeStress</param>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
The 
\family typewriter
storeViscosity
\family default
 and 
\family typewriter
storeStress
\family default
 parameters are standard components that enable you to get the viscosity
 and stress information on each particle.
\end_layout

\end_deeper
\begin_layout Enumerate
Save this file, as it will be the basis for other examples that follow.
 
\end_layout

\begin_layout Enumerate
You can now run this example, and the output will go into the directory
 
\family typewriter
output
\family default
.
 If you want to run in 3D, you only need to change the line after
\end_layout

\begin_deeper
\begin_layout LyX-Code
<param name="outputPath">./output.template</param> 
\end_layout

\begin_layout Standard
from
\end_layout

\begin_layout LyX-Code
<param name="dim">2</param>
\end_layout

\begin_layout Standard
to
\end_layout

\begin_layout LyX-Code
<param name="dim">3</param>
\end_layout

\end_deeper
\begin_layout Standard
You can compare your result with the worked example in the file 
\family typewriter
input/cookbook/viscous.xml
\family default
.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Viscous-Material-in"

\end_inset

Viscous Material in Simple Extension
\end_layout

\begin_layout Standard
The input file you created in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Viscous-Material"

\end_inset

 is valid, but nothing moves, so Gale will output errors if you try to run
 it.
 In this next example, you will make the material extend by having the right
 boundary move.
\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
myviscous.xml
\family default
 to 
\family typewriter
myviscous_extension.xml
\family default
.
\end_layout

\begin_layout Enumerate
Make the right boundary move by changing the line after this section
\end_layout

\begin_deeper
\begin_layout LyX-Code
<param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
<param name="wall">right</param>
\end_layout

\begin_layout LyX-Code
<list name="variables">
\end_layout

\begin_layout LyX-Code
  <struct>
\end_layout

\begin_layout LyX-Code
    <param name="name">vx</param>
\end_layout

\begin_layout LyX-Code
    <param name="type">double</param>
\end_layout

\begin_layout Standard
from
\end_layout

\begin_layout LyX-Code
<param name="value">0.0</param>
\end_layout

\begin_layout Standard
to
\end_layout

\begin_layout LyX-Code
<param name="value">1.0</param>
\end_layout

\begin_layout Quote

\series bold
\color red
Warning:
\series default
\color none
 There are several 
\family typewriter
WallVC
\family default
 structs: 
\family typewriter
front
\family default
, 
\family typewriter
back
\family default
, 
\family typewriter
left
\family default
, 
\family typewriter
right
\family default
, 
\family typewriter
top
\family default
 and 
\family typewriter
bottom
\family default
.
 Here we have only modified the 
\family typewriter
right
\family default
 side.
\end_layout

\end_deeper
\begin_layout Standard
A worked example is at 
\family typewriter
input/cookbook/viscous_extension.xml
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-viscous-extension"

\end_inset

 shows the strain rate invariant and velocity (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Visualization-with-ParaView"

\end_inset

).
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_viscous_extension.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-viscous-extension"

\end_inset

Strain rate invariant and velocity of viscous material in extension
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The structure in the strain rate invariant arises from the artificial compressib
ilty (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Artificial-Compressibility"

\end_inset

).
 The magnitude of this structure is small, so you can ignore it for now.
 Later, in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Hydrostatic-Term"

\end_inset

, you will remove it by adding a 
\family typewriter
HydrostaticTerm
\family default
.
 
\end_layout

\begin_layout Section
Viscous Material with Complex Boundaries
\end_layout

\begin_layout Standard
Another exercise is to make the bottom boundary move differently, and not
 just have the material slide along.
 In particular, this example will simulate a box like in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Split-Boundary"

\end_inset

, where the bottom right side of the box moves, but the viscous material
 sticks to the bottom left.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/splitwall.eps
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Split-Boundary"

\end_inset

Split Boundary
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
First, copy 
\family typewriter
myviscous_extension.xml
\family default
 to 
\family typewriter
myviscous_split.xml
\end_layout

\begin_layout Enumerate
Modify the bottom boundary condition of WallVC to
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct>
\end_layout

\begin_layout LyX-Code
  <param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
  <param name="wall">bottom</param>
\end_layout

\begin_layout LyX-Code
  <list name="variables">
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="name">vy</param>
\end_layout

\begin_layout LyX-Code
      <param name="type">double</param>
\end_layout

\begin_layout LyX-Code
      <param name="value">0.0</param>
\end_layout

\begin_layout LyX-Code
    </struct>
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="name">vx</param>
\end_layout

\begin_layout LyX-Code
      <param name="type">func</param>
\end_layout

\begin_layout LyX-Code
      <param name="value">StepFunction</param>
\end_layout

\begin_layout LyX-Code
    </struct>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
This makes the velocity of the bottom boundary a step function.
 
\end_layout

\end_deeper
\begin_layout Enumerate
You must also specify the parameters of the step function by adding the
 variables
\end_layout

\begin_deeper
\begin_layout LyX-Code
<param name="StepFunctionLowerOffset">1.0</param>
\end_layout

\begin_layout LyX-Code
<param name="StepFunctionUpperOffset">1.0</param>
\end_layout

\begin_layout LyX-Code
<param name="StepFunctionValue">1.0</param>
\end_layout

\begin_layout LyX-Code
<param name="StepFunctionDim">0</param>
\end_layout

\begin_layout LyX-Code
<param name="StepFunctionLessThan">False</param>
\end_layout

\begin_layout Standard
to the end of the file (just before 
\family typewriter
</StGermain
\family default
Data
\family typewriter
>
\family default
).
 
\end_layout

\begin_layout Quote

\series bold
\color red
Warning:
\series default
\color none
 Do not add them in the list named 
\family typewriter
``variables
\family default
.'' 
\end_layout

\end_deeper
\begin_layout Standard
A worked example is in the file 
\family typewriter
input/cookbook/viscous_split.xml
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-complex"

\end_inset

 shows the strain rate invariant and velocity (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Visualization-with-ParaView"

\end_inset

).
 The strain rate is concentrated around the step function in the bottom
 velocity boundary.
 Notice the development of a basin above the discontinuity.
 The ability to track the development of topography on the free surfaces
 is one of the strengths of Gale.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_viscous_split.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-complex"

\end_inset

Strain rate invariant and velocity with complex boundaries
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Viscous-In-Outflow"

\end_inset

Viscous Material with Inflow/Outflow Boundaries
\end_layout

\begin_layout Standard
This example implements a different kind of boundary condition, where material
 flows in one side and out another as in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Inflow/Outflow-Boundary"

\end_inset

.
 The current example is not intended to be geologically realistic in any
 sense, but is meant to illustrate the flexibility we have in the development
 of complex boundary conditions.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/inflow.eps
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Inflow/Outflow-Boundary"

\end_inset

Inflow/Outflow Boundary
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Copy the file 
\family typewriter
myviscous.xml
\family default
 that you created in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Viscous-Material"

\end_inset

 to 
\family typewriter
myviscous_inflow.xml
\family default
.
 
\end_layout

\begin_layout Enumerate
Then, add the following lines after the 
\family typewriter
wrapTop
\family default
 line so that Gale keeps the left and bottom sides fixed:
\end_layout

\begin_deeper
\begin_layout LyX-Code
<param name="staticLeft">True</param>
\end_layout

\begin_layout LyX-Code
<param name="staticBottom">True</param>
\end_layout

\end_deeper
\begin_layout Enumerate
Now specify the velocity on the boundaries using the 
\family typewriter
StepFunctionProduct
\family default
 functions.
 For the left boundary, modify the left 
\family typewriter
WallVC
\family default
 to
\end_layout

\begin_deeper
\begin_layout LyX-Code
<param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
<param name="wall">left</param>
\end_layout

\begin_layout LyX-Code
<list name="variables">
\end_layout

\begin_layout LyX-Code
  <struct>
\end_layout

\begin_layout LyX-Code
    <param name="name">vx</param>
\end_layout

\begin_layout LyX-Code
    <param name="type">func</param>
\end_layout

\begin_layout LyX-Code
    <param name="value">StepFunctionProduct3</param>
\end_layout

\begin_layout LyX-Code
  </struct>
\end_layout

\begin_layout LyX-Code
</list>
\end_layout

\begin_layout Standard
and add the variables at the end of the file (just before 
\family typewriter
</StGermainData>
\family default
)
\end_layout

\begin_layout LyX-Code
<param name="StepFunctionProduct3Start">0.1</param>
\end_layout

\begin_layout LyX-Code
<param name="StepFunctionProduct3End">0.2</param>
\end_layout

\begin_layout LyX-Code
<param name="StepFunctionProduct3Value">1</param>
\end_layout

\end_deeper
\begin_layout Enumerate
For the bottom boundary, modify the bottom 
\family typewriter
WallVC
\family default
 to
\end_layout

\begin_deeper
\begin_layout LyX-Code
<param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
<param name="wall">bottom</param>
\end_layout

\begin_layout LyX-Code
<list name="variables">
\end_layout

\begin_layout LyX-Code
  <struct>
\end_layout

\begin_layout LyX-Code
    <param name="name">vy</param>
\end_layout

\begin_layout LyX-Code
    <param name="type">func</param>
\end_layout

\begin_layout LyX-Code
    <param name="value">StepFunctionProduct2</param>
\end_layout

\begin_layout LyX-Code
  </struct>
\end_layout

\begin_layout LyX-Code
  <struct>
\end_layout

\begin_layout LyX-Code
    <param name="name">vx</param>
\end_layout

\begin_layout LyX-Code
    <param name="type">func</param>
\end_layout

\begin_layout LyX-Code
    <param name="value">StepFunctionProduct1</param>
\end_layout

\begin_layout LyX-Code
  </struct>
\end_layout

\begin_layout LyX-Code
</list>
\end_layout

\begin_layout Standard
and add the variables to the end of the file (just before 
\family typewriter
</StGermainData>
\family default
)
\end_layout

\begin_layout LyX-Code
<param name="StepFunctionProduct1Start">0.9</param>
\end_layout

\begin_layout LyX-Code
<param name="StepFunctionProduct1End">1.1</param>
\end_layout

\begin_layout LyX-Code
<param name="StepFunctionProduct1Value">1.0</param>
\end_layout

\begin_layout LyX-Code
<param name="StepFunctionProduct2Start">0.9</param>
\end_layout

\begin_layout LyX-Code
<param name="StepFunctionProduct2End">1.1</param>
\end_layout

\begin_layout LyX-Code
<param name="StepFunctionProduct2Value">-1.0</param>
\end_layout

\end_deeper
\begin_layout Enumerate
Finally, when Gale knows that there is an inflow condition, it is more careful
 when creating particles.
 This slows down the code a little, so it is not enabled by default.
 To enable this, modify the 
\family typewriter
PCDVC
\family default
 struct by adding the line
\end_layout

\begin_deeper
\begin_layout LyX-Code
<param name="Inflow">True</param>
\end_layout

\begin_layout Standard
after the lines
\end_layout

\begin_layout LyX-Code
<struct name="weights">
\end_layout

\begin_layout LyX-Code
  <param name="Type">PCDVC</param>
\end_layout

\begin_layout LyX-Code
  <param name="resolutionX">10</param>
\end_layout

\begin_layout LyX-Code
  <param name="resolutionY">10</param>
\end_layout

\begin_layout LyX-Code
  <param name="resolutionZ">10</param>
\end_layout

\begin_layout LyX-Code
  <param name="lowerT">0.6</param>
\end_layout

\begin_layout LyX-Code
  <param name="upperT">25</param>
\end_layout

\begin_layout LyX-Code
  <param name="maxDeletions">3</param>
\end_layout

\begin_layout LyX-Code
  <param name="maxSplits">3</param>
\end_layout

\begin_layout LyX-Code
  <param name="MaterialPointsSwarm">materialSwarm</param>
\end_layout

\end_deeper
\begin_layout Standard
A worked example is in the file 
\family typewriter
input/cookbook/viscous_inflow.xml
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-inflow"

\end_inset

 shows the strain rate invariant and velocity (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Visualization-with-ParaView"

\end_inset

).
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Paraview_viscous_inflow.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-inflow"

\end_inset

Strain rate invariant and velocity with inflow/outflow boundaries
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Viscous Material in Extension with Normal Stress Boundaries
\end_layout

\begin_layout Standard
This example modifies the extension example in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Viscous-Material-in"

\end_inset

 to use a stress boundary normal to the bottom surface, instead of specifying
 the velocity.
 A normal stress boundary condition simulates the effect of material below
 the material pushing up, supporting the material in the box.
 Then, when material piles up, gravity forces will overcome the stress boundary
 and flow out of the simulation.
 Conversely, if material is thinned out, the stress boundary will push new
 material into the simulation.
 This kind of boundary is often more relevant for geological simulations.
\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
my_viscous_extension.xml
\family default
 to 
\family typewriter
my_viscous_normal_stress.xml
\end_layout

\begin_layout Enumerate
Remove the current bottom boundary condition by removing the lines
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct>
\end_layout

\begin_layout LyX-Code
  <param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
  <param name="wall">bottom</param>
\end_layout

\begin_layout LyX-Code
  <list name="variables">
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="name">vy</param>
\end_layout

\begin_layout LyX-Code
      <param name="type">double</param>
\end_layout

\begin_layout LyX-Code
      <param name="value">0.0</param>
\end_layout

\begin_layout LyX-Code
    </struct>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\end_deeper
\begin_layout Enumerate
Add in a StressBC component
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct name="stressBC">
\end_layout

\begin_layout LyX-Code
  <param name="Type">StressBC</param>
\end_layout

\begin_layout LyX-Code
  <param name="ForceVector">mom_force</param>
\end_layout

\begin_layout LyX-Code
  <param name="Swarm">picIntegrationPoints</param>
\end_layout

\begin_layout LyX-Code
  <param name="wall">bottom</param>
\end_layout

\begin_layout LyX-Code
  <param name="y_type">double</param>
\end_layout

\begin_layout LyX-Code
  <param name="y_value">0.35</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
The density of the material is 1, and the height is 0.35, so the stress needed
 to counteract gravity is 0.35.
\end_layout

\end_deeper
\begin_layout Enumerate
The bottom essentially becomes an inflow/outflow boundary, so you need to
 prevent the bottom from moving by adding after
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct>
\end_layout

\begin_layout LyX-Code
  <param name="mesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <param name="remesher">velocityRemesher</param>
\end_layout

\begin_layout LyX-Code
  <param name="velocityField">VelocityField</param>
\end_layout

\begin_layout LyX-Code
  <param name="wrapTop">True</param>
\end_layout

\begin_layout Standard
the line
\end_layout

\begin_layout LyX-Code
<param name="staticBottom">True</param>
\end_layout

\end_deeper
\begin_layout Enumerate
As in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Viscous-In-Outflow"

\end_inset

, for an inflow condition, you need to modify the 
\family typewriter
PCDVC
\family default
 struct by adding the line
\end_layout

\begin_deeper
\begin_layout LyX-Code
<param name="Inflow">True</param>
\end_layout

\begin_layout Standard
after the lines
\end_layout

\begin_layout LyX-Code
<struct name="weights">
\end_layout

\begin_layout LyX-Code
  <param name="Type">PCDVC</param>
\end_layout

\begin_layout LyX-Code
  <param name="resolutionX">10</param>
\end_layout

\begin_layout LyX-Code
  <param name="resolutionY">10</param>
\end_layout

\begin_layout LyX-Code
  <param name="resolutionZ">10</param>
\end_layout

\begin_layout LyX-Code
  <param name="lowerT">0.6</param>
\end_layout

\begin_layout LyX-Code
  <param name="upperT">25</param>
\end_layout

\begin_layout LyX-Code
  <param name="maxDeletions">3</param>
\end_layout

\begin_layout LyX-Code
  <param name="maxSplits">3</param>
\end_layout

\begin_layout LyX-Code
  <param name="MaterialPointsSwarm">materialSwarm</param>
\end_layout

\end_deeper
\begin_layout Enumerate
When you deleted the bottom boundary condition, the vertical velocity became
 unspecified.
 Recall that the momentum equation (Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:simple momentum conservation"

\end_inset

) only depends on the derivative of the velocity.
 So stress boundary conditions cannot set the overall magnitude of the velocity.
 To fix this, you can fix the material to the sides of the simulation.
 You do this by adding
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct>
\end_layout

\begin_layout LyX-Code
  <param name="name">vy</param>
\end_layout

\begin_layout LyX-Code
  <param name="type">double</param>
\end_layout

\begin_layout LyX-Code
  <param name="value">0.0</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
in two places: after
\end_layout

\begin_layout LyX-Code
<param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
<param name="wall">left</param>
\end_layout

\begin_layout LyX-Code
<list name="variables">
\end_layout

\begin_layout LyX-Code
  <struct>
\end_layout

\begin_layout LyX-Code
    <param name="name">vx</param>
\end_layout

\begin_layout LyX-Code
    <param name="type">double</param>
\end_layout

\begin_layout LyX-Code
    <param name="value">0.0</param>
\end_layout

\begin_layout LyX-Code
  </struct>
\end_layout

\begin_layout Standard
and after
\end_layout

\begin_layout LyX-Code
<param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
<param name="wall">right</param>
\end_layout

\begin_layout LyX-Code
<list name="variables">
\end_layout

\begin_layout LyX-Code
  <struct>
\end_layout

\begin_layout LyX-Code
    <param name="name">vx</param>
\end_layout

\begin_layout LyX-Code
    <param name="type">double</param>
\end_layout

\begin_layout LyX-Code
    <param name="value">1.0</param>
\end_layout

\begin_layout LyX-Code
  </struct>
\end_layout

\end_deeper
\begin_layout Standard
A worked example is at 
\family typewriter
input/cookbook/viscous_normal_stress.xml
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-viscous-normal-stress"

\end_inset

 shows the strain rate invariant and velocity (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Visualization-with-ParaView"

\end_inset

).
 Notice that material is now flowing in from the bottom.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_normal_stress.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-viscous-normal-stress"

\end_inset

Strain rate invariant and velocity of viscous material in extension with
 a normal stress boundary
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Viscous Material with Deformable Bottom Boundary
\end_layout

\begin_layout Standard
The previous example can be modified so that, instead of having material
 flow through the bottom boundary, the boundary itself deforms.
 You can do this by changing the one line
\end_layout

\begin_layout LyX-Code
<param name="staticBottom">True</param>
\end_layout

\begin_layout Standard
to
\end_layout

\begin_layout LyX-Code
<param name="wrapBottom">True</param>
\end_layout

\begin_layout Standard
A worked example is in 
\family typewriter
input/cookbook/viscous_bottom.xml
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-deformable-bottom"

\end_inset

 shows the strain rate invariant and velocity.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Paraview_bottom.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-deformable-bottom"

\end_inset

Strain rate invariant and velocity of viscous material with a deformable
 bottom boundary
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Viscous-Material-with"

\end_inset

Viscous Material with Initially Deformed Upper Boundary
\end_layout

\begin_layout Standard
All of the previous examples are set up as a regular rectangular box.
 However, Gale can also start with the top initially deformed, such as if
 we had a mountain range with substantial topography.
 This example will make it sinusoidal as in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sinusoidal-Top"

\end_inset

.
 This example has no moving boundaries, so the material will simply relax.
 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/sinusoid.eps
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Sinusoidal-Top"

\end_inset

Sinusoidal Top
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
myviscous.xml
\family default
 to 
\family typewriter
myviscous_sinusoid.xml
\family default
.
 
\end_layout

\begin_layout Enumerate
Add a 
\family typewriter
SurfaceAdaptor
\family default
 component:
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct name="surfaceAdaptor">
\end_layout

\begin_layout LyX-Code
  <param name="Type">SurfaceAdaptor</param>
\end_layout

\begin_layout LyX-Code
  <param name="mesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <param name="sourceGenerator">linearMesh-generator</param>
\end_layout

\begin_layout LyX-Code
  <param name="topSurfaceType">sine</param>
\end_layout

\begin_layout LyX-Code
  <list name="topOrigin">
\end_layout

\begin_layout LyX-Code
    <param>0.0</param>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
  <param name="topAmplitude">0.1</param>
\end_layout

\begin_layout LyX-Code
  <param name="topFrequency">6.28318530718</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\end_deeper
\begin_layout Standard
A worked example is in 
\family typewriter
input/cookbook/viscous_sinusoid.xml
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-initial-deformed"

\end_inset

 shows the strain rate invariant and velocity (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Visualization-with-ParaView"

\end_inset

).
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_viscous_sinusoid.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-initial-deformed"

\end_inset

Strain rate invariant and velocity with initially deformed upper boundary
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Viscous Material with Fixed, Deformed Bottom Boundary
\end_layout

\begin_layout Standard
This example deforms the bottom boundary and keeps it fixed.
 We will set the left half of the boundary to follow a circle, while the
 right half will still be flat.
 Then, the boundary condition for the velocity is set to move the material
 in from the left and out through the bottom as in Figure .
 This is meant to approximate one slab subducting under another.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/deformed_bottom.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Geometry-deformed-bottom"

\end_inset

Geometry and boundary conditions for the fixed, deformed bottom boundary
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
myviscous_inflow.xml
\family default
 to 
\family typewriter
myviscous_deformed_bottom.xml
\end_layout

\begin_layout Enumerate
Add a 
\family typewriter
SurfaceAdaptor
\family default
 component for the bottom boundary:
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct name="surfaceAdaptor">
\end_layout

\begin_layout LyX-Code
  <param name="Type">SurfaceAdaptor</param>
\end_layout

\begin_layout LyX-Code
  <param name="mesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <param name="sourceGenerator">linearMesh-generator</param>
\end_layout

\begin_layout LyX-Code
  <param name="bottomSurfaceType">cylinder</param>
\end_layout

\begin_layout LyX-Code
  <param name="bottomX0">SolidBodyRotationCentreX</param>
\end_layout

\begin_layout LyX-Code
  <param name="bottomY0">SolidBodyRotationCentreY</param>
\end_layout

\begin_layout LyX-Code
  <param name="bottomRadius">InnerRadiusCylinder</param>
\end_layout

\begin_layout LyX-Code
  <param name="bottomMinX">CylinderMinX</param>
\end_layout

\begin_layout LyX-Code
  <param name="bottomMaxX">CylinderMaxX</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\end_deeper
\begin_layout Enumerate
Replace the left boundary condition for the velocity
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct>
\end_layout

\begin_layout LyX-Code
  <param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
  <param name="wall">left</param>
\end_layout

\begin_layout LyX-Code
  <list name="variables">
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="name">vx</param>
\end_layout

\begin_layout LyX-Code
      <param name="type">func</param>
\end_layout

\begin_layout LyX-Code
      <param name="value">StepFunctionProduct3</param>
\end_layout

\begin_layout LyX-Code
    </struct>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
with
\end_layout

\begin_layout LyX-Code
<struct>
\end_layout

\begin_layout LyX-Code
  <param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
  <param name="wall">left</param>
\end_layout

\begin_layout LyX-Code
  <list name="variables">
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="name">vx</param>
\end_layout

\begin_layout LyX-Code
      <param name="type">func</param>
\end_layout

\begin_layout LyX-Code
      <param name="value">Velocity_PartialRotationX</param>
\end_layout

\begin_layout LyX-Code
    </struct>
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="name">vy</param>
\end_layout

\begin_layout LyX-Code
      <param name="type">func</param>
\end_layout

\begin_layout LyX-Code
      <param name="value">Velocity_PartialRotationY</param>
\end_layout

\begin_layout LyX-Code
    </struct>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\end_deeper
\begin_layout Enumerate
Replace the bottom boundary condition
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct>
\end_layout

\begin_layout LyX-Code
  <param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
  <param name="wall">bottom</param>
\end_layout

\begin_layout LyX-Code
  <list name="variables">
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="name">vy</param>
\end_layout

\begin_layout LyX-Code
      <param name="type">func</param>
\end_layout

\begin_layout LyX-Code
      <param name="value">StepFunctionProduct2</param>
\end_layout

\begin_layout LyX-Code
    </struct>
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="name">vx</param>
\end_layout

\begin_layout LyX-Code
      <param name="type">func</param>
\end_layout

\begin_layout LyX-Code
      <param name="value">StepFunctionProduct1</param>
\end_layout

\begin_layout LyX-Code
    </struct>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
with
\end_layout

\begin_layout LyX-Code
<struct>
\end_layout

\begin_layout LyX-Code
  <param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
  <param name="wall">bottom</param>
\end_layout

\begin_layout LyX-Code
  <list name="variables">
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="name">vx</param>
\end_layout

\begin_layout LyX-Code
      <param name="type">func</param>
\end_layout

\begin_layout LyX-Code
      <param name="value">Velocity_PartialRotationX</param>
\end_layout

\begin_layout LyX-Code
    </struct>
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="name">vy</param>
\end_layout

\begin_layout LyX-Code
      <param name="type">func</param>
\end_layout

\begin_layout LyX-Code
      <param name="value">Velocity_PartialRotationY</param>
\end_layout

\begin_layout LyX-Code
    </struct>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\end_deeper
\begin_layout Enumerate
Finally, replace the 
\family typewriter
StepFunction
\family default
 variables
\end_layout

\begin_deeper
\begin_layout LyX-Code
  <param name="StepFunctionProduct3Start">0.1</param>
\end_layout

\begin_layout LyX-Code
  <param name="StepFunctionProduct3End">0.2</param>
\end_layout

\begin_layout LyX-Code
  <param name="StepFunctionProduct3Value">1</param>
\end_layout

\begin_layout LyX-Code
  <param name="StepFunctionProduct1Start">0.9</param>
\end_layout

\begin_layout LyX-Code
  <param name="StepFunctionProduct1End">1.1</param>
\end_layout

\begin_layout LyX-Code
  <param name="StepFunctionProduct1Value">1.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="StepFunctionProduct2Start">0.9</param>
\end_layout

\begin_layout LyX-Code
  <param name="StepFunctionProduct2End">1.1</param>
\end_layout

\begin_layout LyX-Code
  <param name="StepFunctionProduct2Value">-1.0</param>
\end_layout

\begin_layout Standard
with rotation variables
\end_layout

\begin_layout LyX-Code
  <param name="SolidBodyRotationOmega">-1</param>
\end_layout

\begin_layout LyX-Code
  <param name="SolidBodyRotationCentreX">0</param>
\end_layout

\begin_layout LyX-Code
  <param name="SolidBodyRotationCentreY">-3</param>
\end_layout

\begin_layout LyX-Code
  <param name="InnerRadiusCylinder">3.15</param>
\end_layout

\begin_layout LyX-Code
  <param name="CylinderMinX">0</param>
\end_layout

\begin_layout LyX-Code
  <param name="CylinderMaxX">0.960468635615</param>
\end_layout

\begin_layout LyX-Code
  <param name="RadiusCylinder">3.35</param>
\end_layout

\end_deeper
\begin_layout Standard
A worked example is in input/cookbook/viscous_deformed_bottom.xml.
 Figure shows the strain rate invariant and velocity.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Paraview_deformed_bottom.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-deformed-bottom"

\end_inset

Strain rate invariant and velocity for a deformed bottom boundary
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Hydrostatic-Term"

\end_inset

Hydrostatic Term
\end_layout

\begin_layout Standard
This example will add a HydrostaticTerm to the simple extension model (Section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Viscous-Material-in"

\end_inset

) to improve its accuracy.
 So first copy 
\family typewriter
myviscous_extension.xml
\family default
 to 
\family typewriter
myhydrostatic.xml
\family default
.
 Then add a 
\family typewriter
HydrostaticTerm
\family default
 and 
\family typewriter
StressBC
\family default
 just before the 
\family typewriter
BuoyancyForceTerm
\end_layout

\begin_layout LyX-Code
<struct name="hydrostaticTerm">
\end_layout

\begin_layout LyX-Code
  <param name="Type">HydrostaticTerm</param>
\end_layout

\begin_layout LyX-Code
  <param name="upperDensity">1</param>
\end_layout

\begin_layout LyX-Code
  <param name="height">maxY</param>
\end_layout

\begin_layout LyX-Code
  <param name="gravity">gravity</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="stressBC">
\end_layout

\begin_layout LyX-Code
  <param name="Type">StressBC</param>
\end_layout

\begin_layout LyX-Code
  <param name="ForceVector">mom_force</param>
\end_layout

\begin_layout LyX-Code
  <param name="Swarm">picIntegrationPoints</param>
\end_layout

\begin_layout LyX-Code
  <param name="wall">top</param>
\end_layout

\begin_layout LyX-Code
  <param name="y_type">HydrostaticTerm</param>
\end_layout

\begin_layout LyX-Code
  <param name="y_value">hydrostaticTerm</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
Then, in the 
\family typewriter
BuoyancyForceTerm
\family default
, add an entry for 
\family typewriter
HydrostaticTerm
\family default
 so that the 
\family typewriter
BuoyancyForceTerm
\family default
 now looks like
\end_layout

\begin_layout LyX-Code
<struct name="buoyancyForceTerm">
\end_layout

\begin_layout LyX-Code
  <param name="Type">BuoyancyForceTerm</param>
\end_layout

\begin_layout LyX-Code
  <param name="ForceVector">mom_force</param>
\end_layout

\begin_layout LyX-Code
  <param name="Swarm">picIntegrationPoints</param>
\end_layout

\begin_layout LyX-Code
  <param name="gravity">gravity</param>
\end_layout

\begin_layout LyX-Code
  <param name="HydrostaticTerm">hydrostaticTerm</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Hydro_sri"

\end_inset

 shows the strain rate invariant with the same color scale as Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-viscous-extension"

\end_inset

.
 With the 
\family typewriter
HydrostaticTerm
\family default
, the artifacts seen at the top and bottom in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-viscous-extension"

\end_inset

 disappear.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Paraview_hydro.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Hydro_sri"

\end_inset

Strain rate invariant for an extension model with the hydrostatic pressure
 subtracted out.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A worked example is in 
\family typewriter
input/cookbook/hydrostatic.xml
\family default
.
\end_layout

\begin_layout Section
Multiple Viscous Materials
\begin_inset CommandInset label
LatexCommand label
name "sec:Multiple-Viscous-Materials"

\end_inset


\end_layout

\begin_layout Standard
All of the previous examples have only one type of viscous material.
 This example will create a simulation where there are multiple viscous
 materials such as in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Multiple-Viscous-Materials"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/multi-material.eps
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Multiple-Viscous-Materials"

\end_inset

Multiple Viscous Materials
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
myviscous_extension.xml
\family default
 (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Viscous-Material-in"

\end_inset

) to 
\family typewriter
mymulti_material.xml
\family default
.
 
\end_layout

\begin_layout Enumerate
Add the sphere.
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct name="sphereShape">
\end_layout

\begin_layout LyX-Code
  <param name="Type">Sphere</param>
\end_layout

\begin_layout LyX-Code
  <param name="CentreX">1.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="CentreY">0.15</param>
\end_layout

\begin_layout LyX-Code
  <param name="radius">0.10</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
Note: If run in 3D, this is a sphere.
 The example shown here is run in 2D, so the result is a circle.
\end_layout

\end_deeper
\begin_layout Enumerate
Then add the new material.
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct name="sphereViscosity">
\end_layout

\begin_layout LyX-Code
  <param name="Type">MaterialViscosity</param>
\end_layout

\begin_layout LyX-Code
  <param name="eta0">10.0</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="sphereViscous">
\end_layout

\begin_layout LyX-Code
  <param name="Type">RheologyMaterial</param>
\end_layout

\begin_layout LyX-Code
  <param name="Shape">sphereShape</param>
\end_layout

\begin_layout LyX-Code
  <param name="density">1.0</param>
\end_layout

\begin_layout LyX-Code
  <list name="Rheology">
\end_layout

\begin_layout LyX-Code
    <param>sphereViscosity</param>
\end_layout

\begin_layout LyX-Code
    <param>storeViscosity</param>
\end_layout

\begin_layout LyX-Code
    <param>storeStress</param>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\end_deeper
\begin_layout Enumerate
Change the shape of the original material so it is not inside the sphere.
 To do this, create a new shape which is the old shape minus the sphere:
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct name="nonSphereShape">
\end_layout

\begin_layout LyX-Code
  <param name="Type">Intersection</param>
\end_layout

\begin_layout LyX-Code
  <list name="shapes">
\end_layout

\begin_layout LyX-Code
    <param>boxShape</param>
\end_layout

\begin_layout LyX-Code
    <param>!sphereShape</param>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\end_deeper
\begin_layout Enumerate
Finally, modify the original viscous material to use this new 
\family typewriter
nonSphereShape
\family default
 by changing the line after 
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct name="viscous">
\end_layout

\begin_layout LyX-Code
  <param name="Type">RheologyMaterial</param>
\end_layout

\begin_layout Standard
from 
\end_layout

\begin_layout LyX-Code
<param name="Shape">boxShape</param>
\end_layout

\begin_layout Standard
to
\end_layout

\begin_layout LyX-Code
<param name="Shape">nonSphereShape</param>
\end_layout

\end_deeper
\begin_layout Standard
A worked example is in 
\family typewriter
input/cookbook/multi_material.xml
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-multiple"

\end_inset

 shows the strain rate invariant and velocity (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Visualization-with-ParaView"

\end_inset

),
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_multi_material.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-multiple"

\end_inset

Strain rate invariant and velocity with multiple viscous materials
\end_layout

\end_inset


\end_layout

\end_inset

and Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Viscosities-with-multiple"

\end_inset

 shows the viscosity of the particles.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_multi_viscosity.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Viscosities-with-multiple"

\end_inset

Viscosities with multiple viscous materials
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Yielding Material in Simple Extension
\end_layout

\begin_layout Standard
This example replaces the background viscous material with a yielding material.
 This will produce localizations as some material fails.
\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
mymulti_material.xml
\family default
 to 
\family typewriter
myyielding.xml
\end_layout

\begin_layout Enumerate
Add a 
\family typewriter
StrainWeakening
\family default
 component and a 
\family typewriter
DruckerPrager
\family default
 component
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct name="strainWeakening">
\end_layout

\begin_layout LyX-Code
  <param name="Type">StrainWeakening</param>
\end_layout

\begin_layout LyX-Code
  <param name="TimeIntegrator">timeIntegrator</param>
\end_layout

\begin_layout LyX-Code
  <param name="MaterialPointsSwarm">materialSwarm</param>
\end_layout

\begin_layout LyX-Code
  <param name="softeningStrain">0.1</param>
\end_layout

\begin_layout LyX-Code
  <param name="initialDamageFraction">0.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="initialDamageWavenumber">0.5</param>
\end_layout

\begin_layout LyX-Code
  <param name="initialDamageFactor">0.5</param>
\end_layout

\begin_layout LyX-Code
  <param name="healingRate">0.0</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="yielding">
\end_layout

\begin_layout LyX-Code
  <param name="Type">DruckerPrager</param>
\end_layout

\begin_layout LyX-Code
  <param name="PressureField">PressureField</param>
\end_layout

\begin_layout LyX-Code
  <param name="VelocityGradientsField">VelocityGradientsField</param>
\end_layout

\begin_layout LyX-Code
  <param name="MaterialPointsSwarm">materialSwarm</param>
\end_layout

\begin_layout LyX-Code
  <param name="Context">context</param>
\end_layout

\begin_layout LyX-Code
  <param name="StrainWeakening">strainWeakening</param>
\end_layout

\begin_layout LyX-Code
  <param name="cohesion">1.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="cohesionAfterSoftening">0.0001</param>
\end_layout

\begin_layout LyX-Code
  <param name="frictionCoefficient">0.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="frictionCoefficientAfterSoftening">0.0</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\end_deeper
\begin_layout Enumerate
Finally, remove the existing viscous 
\family typewriter
RheologyMaterial
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct name="viscous">
\end_layout

\begin_layout LyX-Code
  <param name="Type">RheologyMaterial</param>
\end_layout

\begin_layout LyX-Code
  <param name="Shape">nonSphereShape</param>
\end_layout

\begin_layout LyX-Code
  <param name="density">1.0</param>
\end_layout

\begin_layout LyX-Code
  <list name="Rheology">
\end_layout

\begin_layout LyX-Code
    <param>backgroundViscosity</param>
\end_layout

\begin_layout LyX-Code
    <param>storeViscosity</param>
\end_layout

\begin_layout LyX-Code
    <param>storeStress</param>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
and replace it with a yielding 
\family typewriter
RheologyMaterial
\end_layout

\begin_layout LyX-Code
<struct name="crust">
\end_layout

\begin_layout LyX-Code
  <param name="Type">RheologyMaterial</param>
\end_layout

\begin_layout LyX-Code
  <param name="Shape">nonSphereShape</param>
\end_layout

\begin_layout LyX-Code
  <list name="Rheology">
\end_layout

\begin_layout LyX-Code
    <param>backgroundViscosity</param>
\end_layout

\begin_layout LyX-Code
    <param>yielding</param>
\end_layout

\begin_layout LyX-Code
    <param>storeViscosity</param>
\end_layout

\begin_layout LyX-Code
    <param>storeStress</param>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\end_deeper
\begin_layout Standard
A worked example is in 
\family typewriter
input/cookbook/yielding.xml
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:strain-yield"

\end_inset

 shows the strain rate invariant and velocity (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Visualization-with-ParaView"

\end_inset

).
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_yielding.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:strain-yield"

\end_inset

Strain rate invariant and velocity of yielding material in extension
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Viscosity-of-yielding"

\end_inset

 shows the viscosity of the particles,
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_yielding_viscosity.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Viscosity-of-yielding"

\end_inset

Viscosity of yielding material in extension
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
and Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Degree-of-yielding"

\end_inset

 shows the accumulated post-yielding strain of the particles.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_yielding_yielding.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Degree-of-yielding"

\end_inset

Accumulated post-yielding strain of yielding material in extension
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Thermal-Convection"

\end_inset

Thermal Convection
\end_layout

\begin_layout Standard
Temperature can play a decisive role in geophysical processes.
 This example takes the multiple viscous material example from Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Multiple-Viscous-Materials"

\end_inset

, heats it on the bottom, and adds in radiogenic heating throughout.
\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
mymulti_material.xml
\family default
 to 
\family typewriter
mythermal.xml
\end_layout

\begin_layout Enumerate
Add in the thermal components from Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Temperature-components"

\end_inset

.
\end_layout

\begin_layout Enumerate
Add in temperature boundary conditions after the velocity boundary conditions
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct name="temperatureBCs">
\end_layout

\begin_layout LyX-Code
  <param name="type">CompositeVC</param>
\end_layout

\begin_layout LyX-Code
  <list name="vcList">
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
      <param name="wall">bottom</param>
\end_layout

\begin_layout LyX-Code
      <list name="variables">
\end_layout

\begin_layout LyX-Code
        <struct>
\end_layout

\begin_layout LyX-Code
          <param name="name">temperature</param>
\end_layout

\begin_layout LyX-Code
          <param name="type">double</param>
\end_layout

\begin_layout LyX-Code
          <param name="value">2.0</param>
\end_layout

\begin_layout LyX-Code
        </struct>
\end_layout

\begin_layout LyX-Code
      </list>
\end_layout

\begin_layout LyX-Code
    </struct>
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
      <param name="wall">left</param>
\end_layout

\begin_layout LyX-Code
      <list name="variables">
\end_layout

\begin_layout LyX-Code
        <struct>
\end_layout

\begin_layout LyX-Code
          <param name="name">temperature</param>
\end_layout

\begin_layout LyX-Code
          <param name="type">double</param>
\end_layout

\begin_layout LyX-Code
          <param name="value">1.0</param>
\end_layout

\begin_layout LyX-Code
        </struct>
\end_layout

\begin_layout LyX-Code
      </list>
\end_layout

\begin_layout LyX-Code
    </struct>
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
      <param name="wall">right</param>
\end_layout

\begin_layout LyX-Code
      <list name="variables">
\end_layout

\begin_layout LyX-Code
        <struct>
\end_layout

\begin_layout LyX-Code
          <param name="name">temperature</param>
\end_layout

\begin_layout LyX-Code
          <param name="type">double</param>
\end_layout

\begin_layout LyX-Code
          <param name="value">1.0</param>
\end_layout

\begin_layout LyX-Code
        </struct>
\end_layout

\begin_layout LyX-Code
      </list>
\end_layout

\begin_layout LyX-Code
    </struct>
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
      <param name="wall">top</param>
\end_layout

\begin_layout LyX-Code
      <list name="variables">
\end_layout

\begin_layout LyX-Code
        <struct>
\end_layout

\begin_layout LyX-Code
          <param name="name">temperature</param>
\end_layout

\begin_layout LyX-Code
          <param name="type">double</param>
\end_layout

\begin_layout LyX-Code
          <param name="value">1.0</param>
\end_layout

\begin_layout LyX-Code
        </struct>
\end_layout

\begin_layout LyX-Code
      </list>
\end_layout

\begin_layout LyX-Code
    </struct> 
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
      <param name="wall">front</param>
\end_layout

\begin_layout LyX-Code
      <list name="variables">
\end_layout

\begin_layout LyX-Code
        <struct>
\end_layout

\begin_layout LyX-Code
          <param name="name">temperature</param>
\end_layout

\begin_layout LyX-Code
          <param name="type">double</param>
\end_layout

\begin_layout LyX-Code
          <param name="value">1.0</param>
\end_layout

\begin_layout LyX-Code
        </struct>
\end_layout

\begin_layout LyX-Code
      </list>
\end_layout

\begin_layout LyX-Code
    </struct> 
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
      <param name="wall">back</param>
\end_layout

\begin_layout LyX-Code
      <list name="variables">
\end_layout

\begin_layout LyX-Code
        <struct>
\end_layout

\begin_layout LyX-Code
          <param name="name">temperature</param>
\end_layout

\begin_layout LyX-Code
          <param name="type">double</param>
\end_layout

\begin_layout LyX-Code
          <param name="value">1.0</param>
\end_layout

\begin_layout LyX-Code
        </struct>
\end_layout

\begin_layout LyX-Code
      </list>
\end_layout

\begin_layout LyX-Code
    </struct> 
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\end_deeper
\begin_layout Enumerate
Add in initial conditions for the temperature after the boundary conditions
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct name="temperatureICs">
\end_layout

\begin_layout LyX-Code
  <param name="type">CompositeVC</param>
\end_layout

\begin_layout LyX-Code
  <list name="vcList">
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="type">AllNodesVC</param>
\end_layout

\begin_layout LyX-Code
      <list name="variables">
\end_layout

\begin_layout LyX-Code
        <struct>
\end_layout

\begin_layout LyX-Code
          <param name="name">temperature</param>
\end_layout

\begin_layout LyX-Code
          <param name="type">double</param>
\end_layout

\begin_layout LyX-Code
          <param name="value">1.0</param>
\end_layout

\begin_layout LyX-Code
        </struct>
\end_layout

\begin_layout LyX-Code
      </list>
\end_layout

\begin_layout LyX-Code
    </struct> 
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\end_deeper
\begin_layout Enumerate
Specify the background material's thermal expansivity, thermal diffusivity,
 radiogenic heating rate, and radiogenic decay time scale by adding after
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct name="viscous">
\end_layout

\begin_layout LyX-Code
  <param name="Type">RheologyMaterial</param>
\end_layout

\begin_layout LyX-Code
  <param name="Shape">boxShape</param>
\end_layout

\begin_layout LyX-Code
  <param name="density">1.0</param>
\end_layout

\begin_layout Standard
the lines
\end_layout

\begin_layout LyX-Code
  <param name="alpha">1.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="diffusivity">1.0</param>
\end_layout

\begin_layout LyX-Code
  <list name="heatingElements">
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="Q">1.0</param>
\end_layout

\begin_layout LyX-Code
      <param name="lambda">1.0</param>
\end_layout

\begin_layout LyX-Code
    </struct>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout Standard
For the sphere, after the lines
\end_layout

\begin_layout LyX-Code
<struct name="sphereViscous">
\end_layout

\begin_layout LyX-Code
  <param name="Type">RheologyMaterial</param>
\end_layout

\begin_layout LyX-Code
  <param name="Shape">sphereShape</param>
\end_layout

\begin_layout LyX-Code
  <param name="density">1.0</param>
\end_layout

\begin_layout Standard
add the lines
\end_layout

\begin_layout LyX-Code
  <param name="alpha">10.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="diffusivity">10.0</param>
\end_layout

\begin_layout LyX-Code
  <list name="heatingElements">
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="Q">1000.0</param>
\end_layout

\begin_layout LyX-Code
      <param name="lambda">10.0</param>
\end_layout

\begin_layout LyX-Code
    </struct>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout Standard
This makes the sphere more expansive, conductive, and radioactive.
\end_layout

\end_deeper
\begin_layout Enumerate
Modify the buoyancy force term by adding the temperature field after
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct name="buoyancyForceTerm">
\end_layout

\begin_layout LyX-Code
  <param name="Type">BuoyancyForceTerm</param>
\end_layout

\begin_layout LyX-Code
  <param name="ForceVector">mom_force</param>
\end_layout

\begin_layout Standard
with the line
\end_layout

\begin_layout LyX-Code
  <param name="TemperatureField">TemperatureField</param>
\end_layout

\end_deeper
\begin_layout Enumerate
Finally, to highlight the effects of temperature, make the boundary move
 more slowly by changing the line after
\end_layout

\begin_deeper
\begin_layout LyX-Code
<param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
  <param name="wall">right</param>
\end_layout

\begin_layout LyX-Code
  <list name="variables">
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="name">vx</param>
\end_layout

\begin_layout LyX-Code
      <param name="type">double</param>
\end_layout

\begin_layout Standard
from
\end_layout

\begin_layout LyX-Code
    <param name="value">1.0</param>
\end_layout

\begin_layout Standard
to
\end_layout

\begin_layout LyX-Code
    <param name="value">0.01</param>
\end_layout

\end_deeper
\begin_layout Standard
A worked example is in 
\family typewriter
thermal.xml
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Temperature-and-velocity"

\end_inset

 shows the temperature and velocity.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/Paraview_thermal.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Temperature-and-velocity"

\end_inset

Temperature and velocity for the thermal convection example
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Power-Law-Creep"

\end_inset

Power Law Creep
\end_layout

\begin_layout Standard
A common approximation for the rheology of rocks is power law creep.
 This example shows how to implement this with the NonNewtonian rheologies.
\end_layout

\begin_layout Enumerate
Copy 
\family typewriter
mythermal.xml
\family default
 to 
\family typewriter
mynon_newtonian.xml
\family default
.
\end_layout

\begin_layout Enumerate
Add the NonNewtonian rheology after NonSphereShape
\end_layout

\begin_deeper
\begin_layout LyX-Code
<struct name="nonNewtonian">
\end_layout

\begin_layout LyX-Code
  <param name="Type">NonNewtonian</param>
\end_layout

\begin_layout LyX-Code
  <param name="StrainRateInvariantField">StrainRateInvariantField</param>
\end_layout

\begin_layout LyX-Code
  <param name="n">3.4</param>
\end_layout

\begin_layout LyX-Code
  <param name="T_0">1.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="A">1.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="refStrainRate">0.01</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\end_deeper
\begin_layout Enumerate
Change
\end_layout

\begin_deeper
\begin_layout LyX-Code
<list name="Rheology">
\end_layout

\begin_layout LyX-Code
  <param>backgroundViscosity</param>
\end_layout

\begin_layout LyX-Code
  <param>storeViscosity</param>
\end_layout

\begin_layout LyX-Code
  <param>storeStress</param>
\end_layout

\begin_layout LyX-Code
</list>
\end_layout

\begin_layout Standard
to
\end_layout

\begin_layout LyX-Code
<list name="Rheology">
\end_layout

\begin_layout LyX-Code
  <param>nonNewtonian</param>
\end_layout

\begin_layout LyX-Code
  <param>storeViscosity</param>
\end_layout

\begin_layout LyX-Code
  <param>storeStress</param>
\end_layout

\begin_layout LyX-Code
</list>
\end_layout

\end_deeper
\begin_layout Standard
A worked example is in 
\family typewriter
non_newtonian.xml
\family default
.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Power-Law-Creep"

\end_inset

 shows the temperature and velocity.
 The differences with the example in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Temperature-and-velocity"

\end_inset

 are mostly because the viscosity is higher everywhere.
\end_layout

\begin_layout LyX-Code
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Paraview_non_newtonian.png
	lyxscale 75
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Power-Law-Creep"

\end_inset

Temperature and velocity for the power-law creep model
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Geologic Example
\end_layout

\begin_layout Standard
The previous chapter gave examples on how to make simple problems with simple
 parameters (e.g., length=1, viscosity=1).
 Scaling these input parameters to realistic values (e.g., length=1000km,
 viscosity=
\begin_inset Formula $10^{26}$
\end_inset

) should be as easy as changing the various parameters to the right number.
 In practice, it can be quite difficult, because you may have to change
 many different parameters at once to ensure a stable solution.
 To make that transition easier, start with the sample input files in 
\family typewriter
input/examples/tibet.xml
\family default
 and 
\family typewriter
input/examples/tibet3D.xml
\family default
.
 The first file simulates a Tibetan scale plateau under extension in 2D.
 A schematic of the simulation is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Schematic-of-extension"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/tibet_setup.eps

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Schematic-of-extension"

\end_inset

Schematic of extension example
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The height of the crust in the center is set to approximately isostatically
 compensate for the thicker crust.
 There is also a nonlinear temperature gradient, going from 273 K at the
 surface to 1333 K at the bottom.
\end_layout

\begin_layout Standard
The crust has a density of 
\begin_inset Formula $2800kg/m^{3}$
\end_inset

, a coefficient of thermal expansivity (
\begin_inset Formula $\alpha$
\end_inset

) of 
\begin_inset Formula $3\cdot10^{-5}K^{-1}$
\end_inset

, a thermal diffusivity of 
\begin_inset Formula $10^{-6}m^{2}/s$
\end_inset

, a radiogenic heating rate (
\begin_inset Formula $Q$
\end_inset

) of 
\begin_inset Formula $10^{-12}K/s$
\end_inset

, and a radiogenic decay timescale (
\begin_inset Formula $\lambda$
\end_inset

) of 
\begin_inset Formula $0s$
\end_inset

.
 The crust's viscosity is modeled with a Frank-Kamenetskii temperature dependent
 viscosity (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Frank-Kamenetskii"

\end_inset

), with the viscosity going from 
\begin_inset Formula $10^{25}kg\, m^{-1}s^{-1}$
\end_inset

 at the surface to 
\begin_inset Formula $10^{20}kg\, m^{-1}s^{-1}$
\end_inset

 at the bottom.
 The crust's yielding behavior is modeled with a Drucker-Prager rheology,
 with an internal angle of friction of 
\begin_inset Formula $30$
\end_inset

 degrees and a cohesion of 
\begin_inset Formula $4.4\cdot10^{6}kg\, m^{-1}s^{-2}$
\end_inset

 weakening to 
\begin_inset Formula $4\cdot10^{5}kg\, m^{-1}s^{-2}$
\end_inset

.
\end_layout

\begin_layout Standard
The mantle has a density of 
\begin_inset Formula $3300kg/m^{3}$
\end_inset

, a coefficient of thermal expansivity (
\begin_inset Formula $\alpha$
\end_inset

) of 
\begin_inset Formula $3\cdot10^{-5}K^{-1}$
\end_inset

, a thermal diffusivity of 
\begin_inset Formula $10^{-6}m^{2}/s$
\end_inset

, and radiogenic heating rate (
\begin_inset Formula $Q$
\end_inset

) of 
\begin_inset Formula $8.48\cdot10^{-13}K/s$
\end_inset

, and a radiogenic decay timescale (
\begin_inset Formula $\lambda$
\end_inset

) of 
\begin_inset Formula $0s$
\end_inset

.
 The mantle is assumed to be purely viscous with the same parameters as
 the crust.
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:tibet2D"

\end_inset

 shows the strain rate invariant after the model has extended 5.4 km.
 The resolution is 2048
\begin_inset Formula $\times$
\end_inset

512, and we used a direct solver (Mumps).
 The most prominent faults occur near the edge of the plateau, although
 smaller faults occur throughout the crust.
 The depth of the faults is limited by the relatively low viscosity deeper
 in the crust.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/tibet2D.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:tibet2D"

\end_inset

Strain rate invariant for the 2D Tibetan scale extension model after 5.4
 km of extension.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The 3D input file models a region 1000km
\begin_inset Formula $\times$
\end_inset

1000km.
 Topography is imported from a data file.
 Underneath, the crust extends further down 32 km, and the mantle is 68
 km thick beyond that.
 The location of the input file is hard coded in 
\end_layout

\begin_layout LyX-Code

\family typewriter
src/StGermain/Discretisation/Mesh/src/SurfaceAdaptor.c
\end_layout

\begin_layout Standard
It needs a data file 
\family typewriter
ascii_topo
\family default
.
 This file is very large, so it is not distributed with Gale.
 You may download the file used to make the picture at 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

geodynamics.org/~walter/ascii_topo
\end_layout

\end_inset

.
 It covers a region of the Tibetan plateau under extension.
 The material properties are the same as in the 2D case.
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:tibet3D"

\end_inset

 shows the strain rate invariant after the model has extended 16 km.
 The resolution is 128
\begin_inset Formula $\times$
\end_inset

128
\begin_inset Formula $\times$
\end_inset

16, and we used an iterative solver (GMRES).
 The fault locations are determined by the variations in topography.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/tibet3D.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:tibet3D"

\end_inset

Strain rate invariant for the 3D Tibetan scale extension model after 16
 km of extension
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Modifying Gale
\begin_inset CommandInset label
LatexCommand label
name "cha:Modifying-Gale"

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
If you wish to change material properties, here is a brief overview of how
 to modify the code.
 The following is currently lacking in many areas, but will be expanded
 and refined in future releases.
 
\end_layout

\begin_layout Section
Software Components of Gale
\end_layout

\begin_layout Standard
Gale makes use of several physics libraries, including StGermain, StgFEM,
 PiCellerator, and UnderWorld.
 These are open-source finite element method libraries written by the Victorian
 Partnership for Advanced Computing (VPAC) and Louis Moresi's group at Monash
 University (see Fig 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Mapping-between-MicroFEM"

\end_inset

).
 Gale also makes use of PETSc, a suite of data structures and routines for
 the parallel solution of scientific applications modeled by partial differentia
l equations.
 
\end_layout

\begin_layout Subsection
StGermain 
\end_layout

\begin_layout Standard
StGermain 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

csd.vpac.org/twiki/bin/view/Stgermain/WebHome
\end_layout

\end_inset

 provides an infrastructure that can be used to create reusable, collaborative
 computational development environments.
 It aims to provide the efficiency and style of coding near that of traditional
 HPC as well as new techniques and methods in scientific computing.
 Effectively, it is the application of contemporary software engineering
 on multi-disciplinary computational research.
 In particular, StGermain can be used in the development of computational
 finite element codes.
 It permits the interchanging of numerical schemes without having to change
 the problem description or the constitutive rules utilized.
 It also allows numerical schemes and constitutive rules to be reused for
 different problems in different disciplines.
 Scientists can then switch to new computational technologies as they become
 available.
 StGermain also capitalizes on the resources invested in software development
 on a research project, rendering that software effectively reusable for
 subsequent projects.
 In turn, intellectual property, skills and adaptability of the recipients
 develop over time.
 
\end_layout

\begin_layout Subsection
PETSc
\end_layout

\begin_layout Standard
PETSc 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

www-unix.mcs.anl.gov/petsc/petsc-as
\end_layout

\end_inset

, the Portable, Extensible Toolkit for Scientific Computation, is a suite
 of data structures and routines for the uni- and parallel-processor solution
 of large-scale scientific application problems modeled by partial differential
 equations.
 It employs the MPI standard for all message-passing communication.
 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Mapping-between-MicroFEM"

\end_inset

Mapping between MicroFEM and Gale
\end_layout

\end_inset


\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/GALE_imag.eps
	lyxscale 80
	scale 80

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
StgFEM 
\end_layout

\begin_layout Standard
StgFEM 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

csd.vpac.org/twiki/bin/view/Stgfem/WebHome
\end_layout

\end_inset

 uses the StGermain philosophy of reusability and collaborative development
 to create a finite element problem composer in terms of both the linear
 system to be solved and the finite element discretization of the problem
 domain.
 The composition can be described in XML and could be represented in a network
 diagram with an appropriate tool.
 StgFEM describes finite element systems for various formulations in a manner
 that can allow the underlying numerics to be interchanged.
 
\end_layout

\begin_layout Subsection
PiCellerator 
\end_layout

\begin_layout Standard
PICellerator 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

csd.vpac.org/twiki/bin/view/PICellerator/WebHome
\end_layout

\end_inset

 (Particle In Cellerator), a Lagrangian Integration Point Finite Element
 framework, is implemented as an integration scheme substitute for the default
 Gaussian scheme implemented in StgFEM.
 The PICellerator concept has since grown to become a general Lagrangian
 integration scheme framework and a Lagrangian constitutive rule framework.
 The PIC scheme is provided and other Arbitrary Lagrangian Eulerian schemes
 are in development.
 Constitutive rules are reusable across these schemes.
 
\end_layout

\begin_layout Subsection
UnderWorld 
\end_layout

\begin_layout Standard
UnderWorld 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

wasabi.maths.monash.edu.au/twiki/view/Software/Underworld
\end_layout

\end_inset

 is a StGermain parallel modeling framework Geoscience research code which
 utilizes a Lagrangian particle-in-cell finite element scheme (the prototype
 of which is the Ellipsis code), visualized using gLucifer.
 UnderWorld (Monash University), StGermain (Victorian Partnership for Advanced
 Computing or VPAC) and gLucifer (Monash University) are under development
 as part of the Australian Computational Earth Systems Simulator (ACcESS),
 an Australian Government National Research Facility, a node of which is
 located at the Australian Crustal Research Centre (ACRC) at Monash University
 (Clayton Campus).
 
\end_layout

\begin_layout Section
System Description
\end_layout

\begin_layout Standard
Gale uses StgFEM to formulate implicit finite element systems, with the
 bulk of the information placed in a stiffness matrix and a force vector.
 Depending on the type of solver used, there may be several matrices and
 vectors.
 The stiffness matrix class has a member whose purpose is to assemble the
 entire matrix.
 It does this through the use of 
\begin_inset Quotes eld
\end_inset

stiffness matrix terms.
\begin_inset Quotes erd
\end_inset

 The 
\family typewriter
StiffnessMatrixTerm
\family default
 class provides an interface through which the elemental contributions to
 the matrix may be influenced.
 In typical fluid flow systems, the majority of the physics is applied to
 the model through constitutive laws which modify the stiffness matrix to
 reflect certain physical situations.
 The 
\family typewriter
ConstitutiveMatrix
\family default
 class inherits from 
\family typewriter
StiffnessMatrixTerm
\family default
, providing an interface tailored to implementing material-based continuum
 physics.
 
\end_layout

\begin_layout Standard
So, where does the actual physics take place? The answer is in the Rheology
 class, but first look at the PIC (particle-in-cell) scheme.
 There are a number of benefits to using a PIC scheme, but the main use
 is to store material properties on each particle.
 These properties can then be used to drive our constitutive laws, in turn
 modifying the produced stiffness matrices.
 For each defined material in the domain, there may be a number of associated
 rheological laws.
 Whenever an element in the system is assembled, each stiffness matrix term
 is evaluated, implying that the constitutive matrix will be evaluated for
 each element.
 For each particle internal to an element, the 
\family typewriter
ConstitutiveMatrix
\family default
 class will evaluate all associated rheologies, each rheology modifying
 the constitutive matrix.
 
\end_layout

\begin_layout Standard
Modifying the constitutive matrix takes place in the form of viscosity values.
 In this, probably the simplest of rheological laws, the 
\family typewriter
ModifyConstitutiveMatrix
\family default
 method simply sets a specific viscosity value for the current element/material
 point tuple.
 
\end_layout

\begin_layout Section
Sample Rheologies 
\end_layout

\begin_layout Subsection
Simple Viscous 
\end_layout

\begin_layout Standard
This excerpt is taken from the file 
\family typewriter
src/Underworld/Rheology/src/MaterialViscosity.c
\family default
.
 It has been inherited from the Rheology class and thus possesses a virtual
 method named 
\end_layout

\begin_layout LyX-Code

\family typewriter
MaterialViscosity_ModifyConstitutiveMatrix
\family default
 
\end_layout

\begin_layout Standard
which has been overridden to set the viscosity in the constitutive matrix,
 as follows: 
\end_layout

\begin_layout LyX-Code
void _MaterialViscosity_ModifyConstitutiveMatrix( 
\end_layout

\begin_layout LyX-Code
   void*                rheology, 
\end_layout

\begin_layout LyX-Code
   ConstitutiveMatrix*  constitutiveMatrix, 
\end_layout

\begin_layout LyX-Code
   MaterialPointsSwarm* swarm,
\end_layout

\begin_layout LyX-Code
   Element_LocalIndex   lElement_I,
\end_layout

\begin_layout LyX-Code
   MaterialPoint*       materialPoint,
\end_layout

\begin_layout LyX-Code
   Coord                xi )
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
   MaterialViscosity* self = (MaterialViscosity*)rheology;
\end_layout

\begin_layout LyX-Code
   ConstitutiveMatrix_SetIsotropicViscosity( constitutiveMatrix,
\end_layout

\begin_layout LyX-Code
                                             self->eta0 );
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
The parameters passed to this method provide access to the rheology class's
 members/methods, the constitutive matrix, the swarm (material points),
 the index of the element currently being assembled, the material point
 currently being evaluated, and the material point's elemental coordinates.
\end_layout

\begin_layout Section
Standard Condition Functions
\begin_inset CommandInset label
LatexCommand label
name "sec:Standard-Condition-Functions-modify"

\end_inset


\end_layout

\begin_layout Standard
If you need to write your own Standard Condition Functions (see Section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Standard-Condition-Functions"

\end_inset

), then the easiest way is to copy and paste an existing function.
 For example, suppose you wanted to create a function 
\family typewriter
xSquared
\family default
 that returns 
\begin_inset Formula $Ax^{2}$
\end_inset

, where A is a constant provided in the input file.
 You start by opening the file
\end_layout

\begin_layout LyX-Code
src/StgFEM/plugins/StandardConditionFunctions/StandardConditionFunctions.c
\end_layout

\begin_layout Standard
and finding the function
\end_layout

\begin_layout LyX-Code
StgFEM_StandardConditionFunctions_Extension
\end_layout

\begin_layout Standard
Make a copy of that function and rename it to
\end_layout

\begin_layout LyX-Code
StgFEM_StandardConditionFunctions_xSquared
\end_layout

\begin_layout Standard
Then you only need to modify the last 6 lines of the function to get the
 desired behavior.
 Specifically, it will become
\end_layout

\begin_layout LyX-Code
void StgFEM_StandardConditionFunctions_xSquared( Node_LocalIndex node_lI,
\end_layout

\begin_layout LyX-Code
                                                 Variable_Index var_I,
\end_layout

\begin_layout LyX-Code
                                                 void* _context, void* _result
 ) {
\end_layout

\begin_layout LyX-Code
        DiscretisationContext*  context            = (DiscretisationContext*)_co
ntext;
\end_layout

\begin_layout LyX-Code
        Dictionary*             dictionary         = context->dictionary;
\end_layout

\begin_layout LyX-Code
        FeVariable*             feVariable         = NULL;
\end_layout

\begin_layout LyX-Code
        FeMesh*                 mesh               = NULL;
\end_layout

\begin_layout LyX-Code
        double*                 result             = (double*) _result;
\end_layout

\begin_layout LyX-Code
        double*                 coord;
\end_layout

\begin_layout LyX-Code
        double                  factor;
\end_layout

\begin_layout LyX-Code
        
\end_layout

\begin_layout LyX-Code
        feVariable = (FeVariable*)FieldVariable_Register_GetByName(
\end_layout

\begin_layout LyX-Code
                                  context->fieldVariable_Register, "VelocityFiel
d" );
\end_layout

\begin_layout LyX-Code
        mesh       = feVariable->feMesh;
\end_layout

\begin_layout LyX-Code
        /* Find Centre of Solid Body Rotation */
\end_layout

\begin_layout LyX-Code
        factor = Dictionary_GetDouble_WithDefault( dictionary, "xSquaredFactor",
 1.0 );
\end_layout

\begin_layout LyX-Code
        /* Find coordinate of node */
\end_layout

\begin_layout LyX-Code
        coord = Mesh_GetVertex( mesh, node_lI );
\end_layout

\begin_layout LyX-Code
        *result = factor * (coord[ I_AXIS ]*coord[ I_AXIS ];
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
Then you need to register your function at the top of the file.
 After the lines
\end_layout

\begin_layout LyX-Code
condFunc = ConditionFunction_New( StgFEM_StandardConditionFunctions_Extension,
\end_layout

\begin_layout LyX-Code
                                  "Velocity_Extension" );
\end_layout

\begin_layout LyX-Code
ConditionFunction_Register_Add( context->condFunc_Register, condFunc );
\end_layout

\begin_layout Standard
add the lines
\end_layout

\begin_layout LyX-Code

\size small
condFunc = ConditionFunction_New( StgFEM_StandardConditionFunctions_xSquared,
 "xSquared" );
\end_layout

\begin_layout LyX-Code

\size small
ConditionFunction_Register_Add( context->condFunc_Register, condFunc );
\end_layout

\begin_layout Standard
The last thing to do is to modify
\end_layout

\begin_layout LyX-Code

\size small
src/StgFEM/plugins/StandardConditionFunctions/StandardConditionFunctions.h
\end_layout

\begin_layout Standard
After the line
\end_layout

\begin_layout LyX-Code

\size small
void StgFEM_StandardConditionFunctions_Extension( Node_LocalIndex node_lI,
 Variable_Index var_I,
\end_layout

\begin_layout LyX-Code

\size small
                                                  void* _context, void*
 _result ) ;
\end_layout

\begin_layout Standard
add the line
\end_layout

\begin_layout LyX-Code

\size small
void StgFEM_StandardConditionFunctions_xSquared( Node_LocalIndex node_lI,
 Variable_Index var_I,
\end_layout

\begin_layout LyX-Code

\size small
                                                 void* _context, void* _result
 ) ;
\end_layout

\begin_layout Standard
Now recompile the code, and you should be able to use your new function
 from input files.
\end_layout

\begin_layout Chapter
\start_of_appendix
Input File Format
\begin_inset CommandInset label
LatexCommand label
name "cha:Input-File-Format"

\end_inset


\end_layout

\begin_layout Section
Structure
\end_layout

\begin_layout Standard
The input files are XML files.
 This leverages a well-known format to specify concepts like hierarchies,
 lists, parameters, and arbitrary structures.
 The entire document is placed withing a 
\family typewriter
StGermainData
\family default
 structure.
\end_layout

\begin_layout LyX-Code
<?xml version="1.0"?>
\end_layout

\begin_layout LyX-Code
<StGermainData xmlns="http://www.vpac.org/StGermain/XML_IO_Handler/Jun2003">
\end_layout

\begin_layout LyX-Code
...
\end_layout

\begin_layout LyX-Code
</StGermainData>
\end_layout

\begin_layout Standard
Within that structure, there are five main parts of every Gale input file:
 the components, the plugins, EulerDeform, Velocity Conditions, and the
 variables.
\end_layout

\begin_layout Subsection
Components
\begin_inset CommandInset label
LatexCommand label
name "sub:Components"

\end_inset


\end_layout

\begin_layout Standard
The components section is separated off from the rest of the file with an
 enclosing 
\family typewriter
components
\family default
 structure.
 This 
\family typewriter
components
\family default
 structure is where the bulk of the file will be.
 It specifies things like what the mesh will be like, which material goes
 where, what the material properties are, what kind of solver to use, etc.
 Most of the ideas you need to specify your problem will go into the components.
 When adding a new component, it is important to remember to put the new
 component inside the components structure.
 Otherwise Gale will (silently) not use that component.
 For example, an input file such as
\end_layout

\begin_layout LyX-Code
<struct name="components">
\end_layout

\begin_layout LyX-Code
  <struct name="conditionFunctions">
\end_layout

\begin_layout LyX-Code
    <param name="Type">StgFEM_StandardConditionFunctions</param>
\end_layout

\begin_layout LyX-Code
  </struct>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
will correctly initialize 
\family typewriter
StgFEM_StandardConditionFunctions
\family default
, but the input file
\end_layout

\begin_layout LyX-Code
<struct name="components">
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="conditionFunctions">
\end_layout

\begin_layout LyX-Code
  <param name="Type">StgFEM_StandardConditionFunctions</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
will not, and no error message will alert you of the problem.
\end_layout

\begin_layout Subsection
Plugins
\begin_inset CommandInset label
LatexCommand label
name "sub:Plugins"

\end_inset


\end_layout

\begin_layout Standard
Gale nominally has the ability to load modules during runtime.
 Dynamically loading modules is, in general, difficult to get working on
 multiple platforms.
 To simplify things, Gale compiles a number of plugins into the code:
\end_layout

\begin_layout LyX-Code
StgFEM_FrequentOutput
\end_layout

\begin_layout LyX-Code
StgFEM_CPUTime
\end_layout

\begin_layout LyX-Code
Underworld_MovingMesh
\end_layout

\begin_layout LyX-Code
Underworld_Vrms
\end_layout

\begin_layout LyX-Code
Underworld_EulerDeform
\end_layout

\begin_layout LyX-Code
StgFEM_PrintFeVariableDiscreteValues
\end_layout

\begin_layout LyX-Code
Underworld_VTKOutput
\end_layout

\begin_layout Standard
To use these plugins, list them in a 
\family typewriter
plugins
\family default
 section outside of the 
\family typewriter
components
\family default
 structure.
 For example, the following lines will enable the 
\family typewriter
EulerDeform
\family default
 and 
\family typewriter
VTKOutput
\family default
 plugins
\end_layout

\begin_layout LyX-Code
<list name="plugins">
\end_layout

\begin_layout LyX-Code
  <param>Underworld_EulerDeform</param>
\end_layout

\begin_layout LyX-Code
  <param>Underworld_VTKOutput</param>
\end_layout

\begin_layout LyX-Code
</list> 
\end_layout

\begin_layout Standard
You can add additional plugins by modifying the list of static plugins in
 
\family typewriter
src/Gale/src/main.c
\family default
 and making sure that the plugin is compiled into the Gale executable.
\end_layout

\begin_layout Subsubsection
EulerDeform
\begin_inset CommandInset label
LatexCommand label
name "sub:EulerDeform"

\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter
Underworld_EulerDeform
\family default
 plugin allows the upper surface to move freely or stay rigidly in place.
 An example 
\family typewriter
EulerDeform
\family default
 struct is
\end_layout

\begin_layout LyX-Code
<struct name="EulerDeform">
\end_layout

\begin_layout LyX-Code
  <list name="systems">
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="mesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
      <param name="remesher">velocityRemesher</param>
\end_layout

\begin_layout LyX-Code
      <param name="velocityField">VelocityField</param>
\end_layout

\begin_layout LyX-Code
      <param name="wrapTop">True</param>
\end_layout

\begin_layout LyX-Code
      <list name="fields">
\end_layout

\begin_layout LyX-Code
        <struct>
\end_layout

\begin_layout LyX-Code
          <param name="field">VelocityField</param>
\end_layout

\begin_layout LyX-Code
          <param name="variable">velocity</param>
\end_layout

\begin_layout LyX-Code
        </struct>
\end_layout

\begin_layout LyX-Code
        <struct> 
\end_layout

\begin_layout LyX-Code
          <param name="field">PressureField</param>
\end_layout

\begin_layout LyX-Code
          <param name="variable">pressure</param>
\end_layout

\begin_layout LyX-Code
        </struct>
\end_layout

\begin_layout LyX-Code
      </list>
\end_layout

\begin_layout LyX-Code
    </struct>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
This commands Gale to interpolate both the pressure and velocity field onto
 the new mesh.
 This interpolation can sometimes go awry.
 Often, this is because something else is going wrong.
 For example, if your velocity solution is bad and you get large velocities,
 then the mesh can turn itself inside out.
 This, in turn, will cause 
\family typewriter
EulerDeform
\family default
 to fail.
 If you are getting spurious problems with interpolation, then you can turn
 off this interpolation by removing these two fields from 
\family typewriter
EulerDeform
\family default
.
 It may slightly affect the speed of your solution, since Gale uses those
 pressure and velocity fields as a starting guess for the next time step.
\end_layout

\begin_layout Standard
Note the critical line
\end_layout

\begin_layout LyX-Code
<param name="wrapTop">True</param>
\end_layout

\begin_layout Standard
that makes the top surface conform to the simulation.
\end_layout

\begin_layout Standard
Additionally, Gale can fix the positions of the boundaries.
 For example, if you are running a shortening model, normally Gale will
 move the boundaries inward as the simulation progresses.
 If different parts of the boundary are moving at different rates (such
 as if you were simulating one slab sliding over the other), then the side
 boundary would quickly become distorted and ruin the simulation.
 To fix the right boundary, set the variable 
\family typewriter
staticRight
\family default
 to 
\family typewriter
True
\end_layout

\begin_layout LyX-Code
<param name="staticRight">True</param>
\end_layout

\begin_layout Standard
Similarly, you can independently set the left, top, bottom, front, and back
 boundaries.
\end_layout

\begin_layout Standard
Note that this will only fix the interior of that boundary.
 So setting 
\family typewriter
staticRight
\family default
 will not fix the top right or bottom right corners (in 2D) and edges (in
 3D).
 If you set both 
\family typewriter
staticRight
\family default
 and 
\family typewriter
staticBottom
\family default
, then the bottom right corner will also be fixed.
 Otherwise, you can set 
\family typewriter
staticBottomRight
\family default
 to specifically fix the bottom right corner.
\end_layout

\begin_layout Standard
If you set 
\family typewriter
staticRight
\family default
 or 
\family typewriter
staticLeft
\family default
 but do not fix the upper corners, then Gale will move the top right or
 left corner to the boundary and interpolate the height.
 This is useful if material is flowing out and you want the boundary of
 the mesh to vary as lumps go through.
 If material is actually flowing in, Gale will be unable to interpolate
 and will complain.
\end_layout

\begin_layout Standard
The 
\family typewriter
floatRightTop
\family default
 and 
\family typewriter
floatLeftTop
\family default
 variables are useful when you are using a boundary layer (see Sections
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:DruckerPrager"

\end_inset

), and you want the height of the boundary layer to match the interior.
\end_layout

\begin_layout Standard
Also note that you must include 
\family typewriter
Underworld_EulerDeform
\family default
 in the list of plugins (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Plugins"

\end_inset

) in order for this section to have any effect.
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="35" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
velocityField
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wrapTop
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wrapLeft
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wrapRight
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticRight
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticRightTop
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticRightBottom
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticRightFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticRightBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticRightTopFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticRightTopBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticRightBottomFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticRightBottomBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticLeft
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticLeftTop
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticLeftBottom
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticLeftFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticLeftBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticLeftTopFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticLeftTopBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticLeftBottomFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticLeftBottomBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticTop
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticTopFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticTopBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticBottom
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticBottomFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticBottomBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
staticBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
floatLeftTop
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
floatRightTop
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
xRightCoord
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
xLeftCoord
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Initial and Boundary Conditions
\end_layout

\begin_layout Standard
These sections specify the boundary conditions on the velocity, and the
 initial and boundary conditions for the temperature.
 See Sections 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Velocity-Boundary-Conditions"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Temperature-Boundary-Conditions"

\end_inset

, and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Temperature-Initial-Conditions"

\end_inset

 for more details.
\end_layout

\begin_layout Subsection
Variables
\begin_inset CommandInset label
LatexCommand label
name "sub:Variables"

\end_inset


\end_layout

\begin_layout Standard
The last section is where most of our numeric constants are placed.
 For example, how many time steps, how often to print output, etc.
 You may also declare variables for convenience (e.g., the number of grid
 points) and use it elsewhere, such as in the components.
 If you are using the basic set of components, then the more important parameter
s are:
\end_layout

\begin_layout Description
maxTimeSteps The number of time steps to take in the simulation.
 Each time step can cover a different amount of time.
 Gale determines how big of a step to take by dividing the grid size by
 the largest velocity during that time step.
 Unfortunately, there is no way to stop at a maximum time.
\end_layout

\begin_layout Description
dumpEvery How often to write VTK output (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:.vtk-Files-(Visualization)"

\end_inset

).
\end_layout

\begin_layout Description
checkPointEvery How often to write the .dat files (see Sections 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Checkpoint Files"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:.dat-Binary-Files"

\end_inset

).
\end_layout

\begin_layout Description
outputPath The directory to put output files in.
 Due to quirks in MPI, you may need to specify this as a full path (e.g.,
 
\family typewriter
/home/juser/simulatons/myoutput
\family default
) rather than a relative path (
\family typewriter
myoutput
\family default
).
 
\end_layout

\begin_layout Description
dim The number of dimensions of the problem (2 or 3).
\end_layout

\begin_layout Description
minX,minY,minZ,maxX,maxY,maxZ The physical size of the box you are simulating.
 Note that this may be modified by 
\family typewriter
SurfaceAdaptor
\family default
 (Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Deformed-Upper-Boundary"

\end_inset

).
\end_layout

\begin_layout Description
elementResI,elementResJ,elementResK The number of elements in each direction.
 Note that the number of grid points is one larger (e.g., 64 elements 
\begin_inset Formula $\Rightarrow$
\end_inset

 65 grid points).
\end_layout

\begin_layout Description
shadowDepth When running in parallel, every parameter only computes quantities
 over a portion of the grid.
 To do this, each processor must keep copies of points that belong to other
 processors.
 This parameter specifies how wide the region of copied points is.
 You should never need to change this from 1.
\end_layout

\begin_layout Description
gaussParticlesX,gaussParticlesY,gaussParticlesZ The number of particles
 in each direction when putting down particles using a Gaussian distribution.
 This is used when mapping quantities from the particles to the grid.
 You should never need to change this number.
\end_layout

\begin_layout Description
particlesPerCell The ideal number of particles in each element.
 Gale will attempt to keep the number of particles in each element close
 to this number.
 You need to vary this number to gauge how sensitive the results of our
 simulation are to this number.
\end_layout

\begin_layout Description
dtFactor A factor to scale the time step.
 Ordinarily, Gale will automatically choose an appropriate step size to
 ensure a stable solution.
 If you find that to be too large of a step size, you can change 
\family typewriter
dtFactor
\family default
 to a smaller number.
 The default is 1 (no scaling).
\end_layout

\begin_layout Description
dt The size of the time step.
 Ordinarily, Gale will automatically choose an appropriate step size to
 ensure a stable solution.
 For some purposes, it may be convenient to explicitly specify the time
 step.
 Be careful! The time step will then be constant over the entire simulation.
 If the grid stretches and/or velocities become larger than you expect,
 you may end up with an unstable simulation.
 The default is 0, which means to use dynamic time stepping.
\end_layout

\begin_layout Description
seed A random number seed used when placing new particles.
 You should never need to change this variable, since changing it should
 not affect the simulation.
\end_layout

\begin_layout Section
Basic Components
\begin_inset CommandInset label
LatexCommand label
name "sec:Basic-Components"

\end_inset


\end_layout

\begin_layout Standard
Gale is built on top of StGermain, which is a very general framework for
 scientific computation.
 Because StGermain is so general, you have to tell it fairly basic things
 that would be implicit in most codes.
 For example, you must tell StGermain that you want to set up a regular
 mesh and solve a finite element problem on it.
 This means you have to include a number of components in every input file.
 These components are
\end_layout

\begin_layout LyX-Code
<struct name="mesh-linear">
\end_layout

\begin_layout LyX-Code
  <param name="Type">FeMesh</param>
\end_layout

\begin_layout LyX-Code
  <param name="elementType">linear</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="linearMesh-generator">
\end_layout

\begin_layout LyX-Code
  <param name="Type">CartesianGenerator</param>
\end_layout

\begin_layout LyX-Code
  <param name="mesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <param name="dim">dim</param>
\end_layout

\begin_layout LyX-Code
  <param name="shadowDepth">shadowDepth</param>
\end_layout

\begin_layout LyX-Code
  <list name="size">
\end_layout

\begin_layout LyX-Code
    <param>elementResI</param>
\end_layout

\begin_layout LyX-Code
    <param>elementResJ</param>
\end_layout

\begin_layout LyX-Code
    <param>elementResK</param>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
  <list name="minCoord">
\end_layout

\begin_layout LyX-Code
    <param>minX</param>
\end_layout

\begin_layout LyX-Code
    <param>minY</param>
\end_layout

\begin_layout LyX-Code
    <param>minZ</param>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
  <list name="maxCoord">
\end_layout

\begin_layout LyX-Code
    <param>maxX</param>
\end_layout

\begin_layout LyX-Code
    <param>maxY</param>
\end_layout

\begin_layout LyX-Code
    <param>maxZ</param>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="velocity">
\end_layout

\begin_layout LyX-Code
  <param name="Type">MeshVariable</param>
\end_layout

\begin_layout LyX-Code
  <param name="mesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <param name="Rank">Vector</param>
\end_layout

\begin_layout LyX-Code
  <param name="DataType">Double</param>
\end_layout

\begin_layout LyX-Code
  <param name="VectorComponentCount">dim</param>
\end_layout

\begin_layout LyX-Code
  <list name="names">
\end_layout

\begin_layout LyX-Code
    <param>vx</param>
\end_layout

\begin_layout LyX-Code
    <param>vy</param>
\end_layout

\begin_layout LyX-Code
    <param>vz</param>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="velocityBCs">
\end_layout

\begin_layout LyX-Code
  <param name="Type">CompositeVC</param>
\end_layout

\begin_layout LyX-Code
  <param name="Data">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="velocityICs">
\end_layout

\begin_layout LyX-Code
  <param name="Type">CompositeVC</param>
\end_layout

\begin_layout LyX-Code
  <param name="Data">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="velocityDofLayout">
\end_layout

\begin_layout LyX-Code
  <param name="Type">DofLayout</param>
\end_layout

\begin_layout LyX-Code
  <param name="mesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <param name="BaseVariableCount">dim</param>
\end_layout

\begin_layout LyX-Code
  <list name="BaseVariables">
\end_layout

\begin_layout LyX-Code
    <param>vx</param>
\end_layout

\begin_layout LyX-Code
    <param>vy</param>
\end_layout

\begin_layout LyX-Code
    <param>vz</param>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="VelocityField">
\end_layout

\begin_layout LyX-Code
  <param name="Type">FeVariable</param>
\end_layout

\begin_layout LyX-Code
  <param name="FEMesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <param name="DofLayout">velocityDofLayout</param>
\end_layout

\begin_layout LyX-Code
  <param name="BC">velocityBCs</param>
\end_layout

\begin_layout LyX-Code
  <param name="IC">velocityICs</param>
\end_layout

\begin_layout LyX-Code
  <param name="LinkedDofInfo">velocityLinkedDofs</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="VelocityMagnitudeField">
\end_layout

\begin_layout LyX-Code
  <param name="Type">OperatorFeVariable</param>
\end_layout

\begin_layout LyX-Code
  <param name="Operator">Magnitude</param>
\end_layout

\begin_layout LyX-Code
  <param name="FeVariable">VelocityField</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="VelocityGradientsField">
\end_layout

\begin_layout LyX-Code
  <param name="Type">OperatorFeVariable</param>
\end_layout

\begin_layout LyX-Code
  <param name="Operator">Gradient</param>
\end_layout

\begin_layout LyX-Code
  <param name="FeVariable">VelocityField</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="VelocityGradientsInvariantField">
\end_layout

\begin_layout LyX-Code
  <param name="Type">OperatorFeVariable</param>
\end_layout

\begin_layout LyX-Code
  <param name="Operator">TensorInvariant</param>
\end_layout

\begin_layout LyX-Code
  <param name="FeVariable">VelocityGradientsField</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="VelocityXXField">
\end_layout

\begin_layout LyX-Code
  <param name="Type">OperatorFeVariable</param>
\end_layout

\begin_layout LyX-Code
  <param name="Operator">TakeFirstComponent</param>
\end_layout

\begin_layout LyX-Code
  <param name="FeVariable">VelocityField</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="VelocityYYField">
\end_layout

\begin_layout LyX-Code
  <param name="Type">OperatorFeVariable</param>
\end_layout

\begin_layout LyX-Code
  <param name="Operator">TakeSecondComponent</param>
\end_layout

\begin_layout LyX-Code
  <param name="FeVariable">VelocityField</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="StrainRateField">
\end_layout

\begin_layout LyX-Code
  <param name="Type">OperatorFeVariable</param>
\end_layout

\begin_layout LyX-Code
  <param name="Operator">TensorSymmetricPart</param>
\end_layout

\begin_layout LyX-Code
  <param name="FeVariable">VelocityGradientsField</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="VorticityField">
\end_layout

\begin_layout LyX-Code
  <param name="Type">OperatorFeVariable</param>
\end_layout

\begin_layout LyX-Code
  <param name="Operator">TensorAntisymmetricPart</param>
\end_layout

\begin_layout LyX-Code
  <param name="FeVariable">VelocityGradientsField</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="StrainRateInvariantField">
\end_layout

\begin_layout LyX-Code
  <param name="Type">OperatorFeVariable</param>
\end_layout

\begin_layout LyX-Code
  <param name="Operator">SymmetricTensor_Invariant</param>
\end_layout

\begin_layout LyX-Code
  <param name="FeVariable">StrainRateField</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="pressure">
\end_layout

\begin_layout LyX-Code
  <param name="Type">MeshVariable</param>
\end_layout

\begin_layout LyX-Code
  <param name="mesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <param name="Rank">Scalar</param>
\end_layout

\begin_layout LyX-Code
  <param name="DataType">Double</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="pressureDofLayout">
\end_layout

\begin_layout LyX-Code
  <param name="Type">DofLayout</param>
\end_layout

\begin_layout LyX-Code
  <param name="mesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <list name="BaseVariables">
\end_layout

\begin_layout LyX-Code
    <param>pressure</param>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="PressureField">
\end_layout

\begin_layout LyX-Code
  <param name="Type">FeVariable</param>
\end_layout

\begin_layout LyX-Code
  <param name="FEMesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <param name="DofLayout">pressureDofLayout</param>
\end_layout

\begin_layout LyX-Code
  <param name="LinkedDofInfo">pressureLinkedDofs</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="StressField">
\end_layout

\begin_layout LyX-Code
  <param name="Type">StressField</param>
\end_layout

\begin_layout LyX-Code
  <param name="StrainRateField">StrainRateField</param>
\end_layout

\begin_layout LyX-Code
  <param name="Context">context</param>
\end_layout

\begin_layout LyX-Code
  <param name="ConstitutiveMatrix">constitutiveMatrix</param>
\end_layout

\begin_layout LyX-Code
  <param name="Swarm">picIntegrationPoints</param>
\end_layout

\begin_layout LyX-Code
  <param name="Mesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <param name="IC">stressICs</param>
\end_layout

\begin_layout LyX-Code
</struct> 
\end_layout

\begin_layout LyX-Code
<struct name="ViscosityField">
\end_layout

\begin_layout LyX-Code
  <param name="Type">ViscosityField</param>
\end_layout

\begin_layout LyX-Code
  <param name="Context">context</param>
\end_layout

\begin_layout LyX-Code
  <param name="Swarm">picIntegrationPoints</param>
\end_layout

\begin_layout LyX-Code
  <param name="Mesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <param name="ConstitutiveMatrix">constitutiveMatrix</param>
\end_layout

\begin_layout LyX-Code
</struct> 
\end_layout

\begin_layout LyX-Code
<struct name="cellLayout">
\end_layout

\begin_layout LyX-Code
  <param name="Type">SingleCellLayout</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="particleLayout">
\end_layout

\begin_layout LyX-Code
  <param name="Type">GaussParticleLayout</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="gaussSwarm">
\end_layout

\begin_layout LyX-Code
  <param name="Type">IntegrationPointsSwarm</param>
\end_layout

\begin_layout LyX-Code
  <param name="CellLayout">cellLayout</param>
\end_layout

\begin_layout LyX-Code
  <param name="ParticleLayout">particleLayout</param>
\end_layout

\begin_layout LyX-Code
  <param name="FeMesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <param name="TimeIntegrator">timeIntegrator</param>
\end_layout

\begin_layout LyX-Code
  <param name="IntegrationPointMapper">gaussMapper</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="gaussMapper">
\end_layout

\begin_layout LyX-Code
  <param name="Type">GaussMapper</param>
\end_layout

\begin_layout LyX-Code
  <param name="IntegrationPointsSwarm">gaussSwarm</param>
\end_layout

\begin_layout LyX-Code
  <param name="MaterialPointsSwarm">gaussMaterialSwarm</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="backgroundLayout">
\end_layout

\begin_layout LyX-Code
  <param name="Type">BackgroundParticleLayout</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="gaussMaterialSwarm">
\end_layout

\begin_layout LyX-Code
  <param name="Type">MaterialPointsSwarm</param>
\end_layout

\begin_layout LyX-Code
  <param name="CellLayout">cellLayout</param>
\end_layout

\begin_layout LyX-Code
  <param name="ParticleLayout">backgroundLayout</param>
\end_layout

\begin_layout LyX-Code
  <param name="FeMesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="timeIntegrator">
\end_layout

\begin_layout LyX-Code
  <param name="Type">TimeIntegrator</param>
\end_layout

\begin_layout LyX-Code
  <param name="order">1</param>
\end_layout

\begin_layout LyX-Code
  <param name="simultaneous">t</param>
\end_layout

\begin_layout LyX-Code
  <param name="Context">context</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="elementCellLayout">
\end_layout

\begin_layout LyX-Code
  <param name="Type">ElementCellLayout</param>
\end_layout

\begin_layout LyX-Code
  <param name="Mesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="weights">
\end_layout

\begin_layout LyX-Code
  <param name="Type">PCDVC</param>
\end_layout

\begin_layout LyX-Code
  <param name="resolutionX">10</param>
\end_layout

\begin_layout LyX-Code
  <param name="resolutionY">10</param>
\end_layout

\begin_layout LyX-Code
  <param name="resolutionZ">10</param>
\end_layout

\begin_layout LyX-Code
  <param name="lowerT">0.6</param>
\end_layout

\begin_layout LyX-Code
  <param name="upperT">25</param>
\end_layout

\begin_layout LyX-Code
  <param name="maxDeletions">3</param>
\end_layout

\begin_layout LyX-Code
  <param name="maxSplits">3</param>
\end_layout

\begin_layout LyX-Code
  <param name="MaterialPointsSwarm">materialSwarm</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="localLayout">
\end_layout

\begin_layout LyX-Code
  <param name="Type">MappedParticleLayout</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="picIntegrationPoints">
\end_layout

\begin_layout LyX-Code
  <param name="Type">IntegrationPointsSwarm</param>
\end_layout

\begin_layout LyX-Code
  <param name="CellLayout">elementCellLayout</param>
\end_layout

\begin_layout LyX-Code
  <param name="ParticleLayout">localLayout</param>
\end_layout

\begin_layout LyX-Code
  <param name="FeMesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <param name="WeightsCalculator">weights</param>
\end_layout

\begin_layout LyX-Code
  <param name="TimeIntegrator">timeIntegrator</param>
\end_layout

\begin_layout LyX-Code
  <param name="IntegrationPointMapper">mapper</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="mapper">
\end_layout

\begin_layout LyX-Code
  <param name="Type">CoincidentMapper</param>
\end_layout

\begin_layout LyX-Code
  <param name="IntegrationPointsSwarm">picIntegrationPoints</param>
\end_layout

\begin_layout LyX-Code
  <param name="MaterialPointsSwarm">materialSwarm</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="materialSwarmParticleLayout">
\end_layout

\begin_layout LyX-Code
  <param name="Type">MeshParticleLayout</param>
\end_layout

\begin_layout LyX-Code
  <param name="mesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <param name="cellParticleCount">particlesPerCell</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="materialSwarm">
\end_layout

\begin_layout LyX-Code
  <param name="Type">MaterialPointsSwarm</param>
\end_layout

\begin_layout LyX-Code
  <param name="CellLayout">elementCellLayout</param>
\end_layout

\begin_layout LyX-Code
  <param name="ParticleLayout">materialSwarmParticleLayout</param>
\end_layout

\begin_layout LyX-Code
  <param name="FeMesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <param name="SplittingRoutine">splittingRoutine</param>
\end_layout

\begin_layout LyX-Code
  <param name="RemovalRoutine">removalRoutine</param>
\end_layout

\begin_layout LyX-Code
  <param name="EscapedRoutine">escapedRoutine</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="materialSwarmAdvector">
\end_layout

\begin_layout LyX-Code
  <param name="Type">SwarmAdvector</param>
\end_layout

\begin_layout LyX-Code
  <param name="Swarm">materialSwarm</param>
\end_layout

\begin_layout LyX-Code
  <param name="TimeIntegrator">timeIntegrator</param>
\end_layout

\begin_layout LyX-Code
  <param name="VelocityField">VelocityField</param>
\end_layout

\begin_layout LyX-Code
  <param name="PeriodicBCsManager">periodicBCsManager</param>
\end_layout

\begin_layout LyX-Code
  <param name="allowFallbackToFirstOrder">True</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="splittingRoutine">
\end_layout

\begin_layout LyX-Code
  <param name="Type">ReseedSplitting</param>
\end_layout

\begin_layout LyX-Code
  <param name="idealParticleCount">particlesPerCell</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="solutionVelocity">
\end_layout

\begin_layout LyX-Code
  <param name="Type">SolutionVector</param>
\end_layout

\begin_layout LyX-Code
  <param name="FeVariable">VelocityField</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="solutionPressure">
\end_layout

\begin_layout LyX-Code
  <param name="Type">SolutionVector</param>
\end_layout

\begin_layout LyX-Code
  <param name="FeVariable">PressureField</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="mom_force">
\end_layout

\begin_layout LyX-Code
  <param name="Type">ForceVector</param>
\end_layout

\begin_layout LyX-Code
  <param name="FeVariable">VelocityField</param>
\end_layout

\begin_layout LyX-Code
  <param name="ExtraInfo">context</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="cont_force">
\end_layout

\begin_layout LyX-Code
  <param name="Type">ForceVector</param>
\end_layout

\begin_layout LyX-Code
  <param name="FeVariable">PressureField</param>
\end_layout

\begin_layout LyX-Code
  <param name="ExtraInfo">context</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="k_matrix">
\end_layout

\begin_layout LyX-Code
  <param name="Type">StiffnessMatrix</param>
\end_layout

\begin_layout LyX-Code
  <param name="RowVariable">VelocityField</param>
\end_layout

\begin_layout LyX-Code
  <param name="ColumnVariable">VelocityField</param>
\end_layout

\begin_layout LyX-Code
  <param name="RHS">mom_force</param>
\end_layout

\begin_layout LyX-Code
  <param name="allowZeroElementContributions">False</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="constitutiveMatrix">
\end_layout

\begin_layout LyX-Code
  <param name="Type">ConstitutiveMatrixCartesian</param>
\end_layout

\begin_layout LyX-Code
  <param name="Swarm">picIntegrationPoints</param>
\end_layout

\begin_layout LyX-Code
  <param name="StiffnessMatrix">k_matrix</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="g_matrix">
\end_layout

\begin_layout LyX-Code
  <param name="Type">StiffnessMatrix</param>
\end_layout

\begin_layout LyX-Code
  <param name="RowVariable">VelocityField</param>
\end_layout

\begin_layout LyX-Code
  <param name="ColumnVariable">PressureField</param>
\end_layout

\begin_layout LyX-Code
  <param name="RHS">cont_force</param>
\end_layout

\begin_layout LyX-Code
  <param name="allowZeroElementContributions">False</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="gradientStiffnessMatrixTerm">
\end_layout

\begin_layout LyX-Code
  <param name="Type">GradientStiffnessMatrixTerm</param>
\end_layout

\begin_layout LyX-Code
  <param name="Swarm">gaussSwarm</param>
\end_layout

\begin_layout LyX-Code
  <param name="StiffnessMatrix">g_matrix</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="preconditioner">
\end_layout

\begin_layout LyX-Code
  <param name="Type">StiffnessMatrix</param>
\end_layout

\begin_layout LyX-Code
  <param name="RowVariable">PressureField</param>
\end_layout

\begin_layout LyX-Code
  <param name="ColumnVariable">PressureField</param>
\end_layout

\begin_layout LyX-Code
  <param name="RHS">cont_force</param>
\end_layout

\begin_layout LyX-Code
  <param name="allowZeroElementContributions">True</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="preconditionerTerm">
\end_layout

\begin_layout LyX-Code
  <param name="Type">UzawaPreconditionerTerm</param>
\end_layout

\begin_layout LyX-Code
  <param name="Swarm">picIntegrationPoints</param>
\end_layout

\begin_layout LyX-Code
  <param name="StiffnessMatrix">preconditioner</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="uzawa">
\end_layout

\begin_layout LyX-Code
  <param name="Type">Stokes_SLE_UzawaSolver</param>
\end_layout

\begin_layout LyX-Code
  <param name="Preconditioner">preconditioner</param>
\end_layout

\begin_layout LyX-Code
  <param name="tolerance">1.0e-5</param>
\end_layout

\begin_layout LyX-Code
  <param name="maxIterations">5000</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="stokesEqn">
\end_layout

\begin_layout LyX-Code
  <param name="Type">Stokes_SLE</param>
\end_layout

\begin_layout LyX-Code
  <param name="SLE_Solver">uzawa</param>
\end_layout

\begin_layout LyX-Code
  <param name="Context">context</param>
\end_layout

\begin_layout LyX-Code
  <param name="StressTensorMatrix">k_matrix</param>
\end_layout

\begin_layout LyX-Code
  <param name="GradientMatrix">g_matrix</param>
\end_layout

\begin_layout LyX-Code
  <param name="DivergenceMatrix"></param>
\end_layout

\begin_layout LyX-Code
  <param name="CompressibilityMatrix">c_matrix</param>
\end_layout

\begin_layout LyX-Code
  <param name="VelocityVector">solutionVelocity</param>
\end_layout

\begin_layout LyX-Code
  <param name="PressureVector">solutionPressure</param>
\end_layout

\begin_layout LyX-Code
  <param name="ForceVector">mom_force</param>
\end_layout

\begin_layout LyX-Code
  <param name="ContinuityForceVector">cont_force</param>
\end_layout

\begin_layout LyX-Code
  <param name="killNonConvergent">false</param>
\end_layout

\begin_layout LyX-Code
  <param name="nonLinearMaxIterations">nonLinearMaxIterations</param>
\end_layout

\begin_layout LyX-Code
  <param name="nonLinearTolerance">nonLinearTolerance</param>
\end_layout

\begin_layout LyX-Code
  <param name="makeConvergenceFile">false</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="c_matrix">
\end_layout

\begin_layout LyX-Code
  <param name="Type">StiffnessMatrix</param>
\end_layout

\begin_layout LyX-Code
  <param name="RowVariable">PressureField</param>
\end_layout

\begin_layout LyX-Code
  <param name="ColumnVariable">PressureField</param>
\end_layout

\begin_layout LyX-Code
  <param name="RHS">cont_force</param>
\end_layout

\begin_layout LyX-Code
  <param name="allowZeroElementContributions">True</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="mixedStabiliser">
\end_layout

\begin_layout LyX-Code
  <param name="Type">MixedStabiliserTerm</param>
\end_layout

\begin_layout LyX-Code
  <param name="Swarm">gaussSwarm</param>
\end_layout

\begin_layout LyX-Code
  <param name="picSwarm">picIntegrationPoints</param>
\end_layout

\begin_layout LyX-Code
  <param name="storeVisc">storeViscosity</param>
\end_layout

\begin_layout LyX-Code
  <param name="StiffnessMatrix">c_matrix</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="background">
\end_layout

\begin_layout LyX-Code
  <param name="Type">Everywhere</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="escapedRoutine">
\end_layout

\begin_layout LyX-Code
  <param name="Type">EscapedRoutine</param>
\end_layout

\begin_layout LyX-Code
  <param name="idealParticleCount">0</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="velocityRemesher">
\end_layout

\begin_layout LyX-Code
  <param name="Type">StripRemesher</param>
\end_layout

\begin_layout LyX-Code
  <param name="mesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <param name="meshType">regular</param>
\end_layout

\begin_layout LyX-Code
  <list name="dim">
\end_layout

\begin_layout LyX-Code
    <param>true</param>
\end_layout

\begin_layout LyX-Code
    <param>true</param>
\end_layout

\begin_layout LyX-Code
    <param>true</param>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="storeViscosity">
\end_layout

\begin_layout LyX-Code
  <param name="Type">StoreVisc</param>
\end_layout

\begin_layout LyX-Code
  <param name="MaterialPointsSwarm">materialSwarm</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="storeStress">
\end_layout

\begin_layout LyX-Code
  <param name="Type">StoreStress</param>
\end_layout

\begin_layout LyX-Code
  <param name="MaterialPointsSwarm">materialSwarm</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
For almost all simulations, you will not need to change these components.
\end_layout

\begin_layout Section
Temperature components
\begin_inset CommandInset label
LatexCommand label
name "sec:Temperature-components"

\end_inset


\end_layout

\begin_layout Standard
To configure Gale to use and evolve the temperature, you need to add the
 following components
\end_layout

\begin_layout LyX-Code
<!-- Temperature components -->
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
<struct name="temperature">
\end_layout

\begin_layout LyX-Code
  <param name="Type">MeshVariable</param>
\end_layout

\begin_layout LyX-Code
  <param name="Rank">Scalar</param>
\end_layout

\begin_layout LyX-Code
  <param name="DataType">Double</param>
\end_layout

\begin_layout LyX-Code
  <param name="mesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="temperatureBCs">
\end_layout

\begin_layout LyX-Code
  <param name="Type">CompositeVC</param>
\end_layout

\begin_layout LyX-Code
  <param name="Data">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="temperatureICs">
\end_layout

\begin_layout LyX-Code
  <param name="Type">CompositeVC</param>
\end_layout

\begin_layout LyX-Code
  <param name="Data">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="temperatureDofLayout">
\end_layout

\begin_layout LyX-Code
  <param name="Type">DofLayout</param>
\end_layout

\begin_layout LyX-Code
  <param name="mesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <list name="BaseVariables">
\end_layout

\begin_layout LyX-Code
    <param>temperature</param>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="TemperatureField">
\end_layout

\begin_layout LyX-Code
  <param name="Type">FeVariable</param>
\end_layout

\begin_layout LyX-Code
  <param name="FEMesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <param name="DofLayout">temperatureDofLayout</param>
\end_layout

\begin_layout LyX-Code
  <param name="BC">temperatureBCs</param>
\end_layout

\begin_layout LyX-Code
  <param name="IC">temperatureICs</param>
\end_layout

\begin_layout LyX-Code
  <param name="LinkedDofInfo">temperatureLinkedDofs</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="TemperatureGradientsField">
\end_layout

\begin_layout LyX-Code
  <param name="Type">OperatorFeVariable</param>
\end_layout

\begin_layout LyX-Code
  <param name="Operator">Gradient</param>
\end_layout

\begin_layout LyX-Code
  <param name="FeVariable">TemperatureField</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
  
\end_layout

\begin_layout LyX-Code
<!-- Energy Equation -->
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
<struct name="residual">
\end_layout

\begin_layout LyX-Code
  <param name="Type">ForceVector</param>
\end_layout

\begin_layout LyX-Code
  <param name="FeVariable">TemperatureField</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="massMatrix">
\end_layout

\begin_layout LyX-Code
  <param name="Type">ForceVector</param>
\end_layout

\begin_layout LyX-Code
  <param name="FeVariable">TemperatureField</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="predictorMulticorrector">
\end_layout

\begin_layout LyX-Code
  <param name="Type">AdvDiffMulticorrector</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="EnergyEqn">
\end_layout

\begin_layout LyX-Code
  <param name="Type">AdvectionDiffusionSLE</param>
\end_layout

\begin_layout LyX-Code
  <param name="SLE_Solver">predictorMulticorrector</param>
\end_layout

\begin_layout LyX-Code
  <param name="Context">context</param>
\end_layout

\begin_layout LyX-Code
  <param name="PhiField">TemperatureField</param>
\end_layout

\begin_layout LyX-Code
  <param name="Residual">residual</param>
\end_layout

\begin_layout LyX-Code
  <param name="MassMatrix">massMatrix</param>
\end_layout

\begin_layout LyX-Code
  <param name="courantFactor">0.25</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="lumpedMassMatrixForceTerm">
\end_layout

\begin_layout LyX-Code
  <param name="Type">LumpedMassMatrixForceTerm</param>
\end_layout

\begin_layout LyX-Code
  <param name="Swarm">gaussSwarm</param>
\end_layout

\begin_layout LyX-Code
  <param name="ForceVector">massMatrix</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="defaultResidualForceTerm">
\end_layout

\begin_layout LyX-Code
  <param name="Type">AdvDiffResidualForceTerm</param>
\end_layout

\begin_layout LyX-Code
  <param name="Swarm">gaussSwarm</param>
\end_layout

\begin_layout LyX-Code
  <param name="ForceVector">residual</param>
\end_layout

\begin_layout LyX-Code
  <param name="ExtraInfo">EnergyEqn</param>
\end_layout

\begin_layout LyX-Code
  <param name="VelocityField">VelocityField</param>
\end_layout

\begin_layout LyX-Code
  <param name="defaultDiffusivity">defaultDiffusivity</param>
\end_layout

\begin_layout LyX-Code
  <param name="UpwindXiFunction">Exact</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="internalHeatingTerm">
\end_layout

\begin_layout LyX-Code
  <param name="Type">RadiogenicHeatingTerm</param>
\end_layout

\begin_layout LyX-Code
  <param name="ForceVector">residual</param>
\end_layout

\begin_layout LyX-Code
  <param name="Swarm">picIntegrationPoints</param>
\end_layout

\begin_layout LyX-Code
</struct>   
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Standard
You should never need to modify these components.
\end_layout

\begin_layout Standard
You need to specify the thermal diffusivity.
 You can specify a single diffusivity for all materials by adding a line
 like 
\end_layout

\begin_layout LyX-Code
<param name="defaultDiffusivity">1</param>
\end_layout

\begin_layout Standard
to the list of variables.
 You can also override this default for each material (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Materials"

\end_inset

).
\end_layout

\begin_layout Standard
You will also need to add in initial and boundary conditions (see Sections
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Temperature-Boundary-Conditions"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Temperature-Initial-Conditions"

\end_inset

).
 Finally, you may want to set material properties for the buoyancy forces
 (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Buoyancy-Forces"

\end_inset

) and radiogenic heating (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Materials"

\end_inset

).
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
defaultDiffusivity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Shapes
\begin_inset CommandInset label
LatexCommand label
name "sec:Shapes"

\end_inset


\end_layout

\begin_layout Standard
When setting up a simulation, Gale reads in shapes to determine what to
 put where.
 For example, you can create a simulation with different materials by creating
 different shapes and putting different materials in them.
 As a simple example, you can create a 3D box
\end_layout

\begin_layout LyX-Code
<struct name="simpleBox">
\end_layout

\begin_layout LyX-Code
  <param name="Type">Box</param>
\end_layout

\begin_layout LyX-Code
  <param name="startX">0.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="endX">1.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="startY">0.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="endY">1.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="startZ">0.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="endZ">1.0</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
You can perform operations on shapes to create new shapes.
 For example, if you also create a sphere
\end_layout

\begin_layout LyX-Code
<struct name="simpleSphere">
\end_layout

\begin_layout LyX-Code
  <param name="Type">Sphere</param>
\end_layout

\begin_layout LyX-Code
  <param name="radius">1.0</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
then you can compose it with the box to create a new shape
\end_layout

\begin_layout LyX-Code
<struct name="nonSphere">
\end_layout

\begin_layout LyX-Code
  <param name="Type">Intersection</param>
\end_layout

\begin_layout LyX-Code
  <list name="shapes">
\end_layout

\begin_layout LyX-Code
    <param>simpleBox</param>
\end_layout

\begin_layout LyX-Code
    <param>!simpleSphere</param>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
Note that the exclamation point ``!'' in front of 
\family typewriter
simpleSphere
\family default
 means ``not.'' So 
\family typewriter
Intersection
\family default
 creates a shape that is the intersection of the box and everywhere outside
 of the sphere.
 You can list an arbitrary number of shapes in 
\family typewriter
Intersection
\family default
.
 Also, you can use 
\family typewriter
Union
\family default
 to create a shape that covers all of the input shapes.
\end_layout

\begin_layout Standard
In addition, every shape accepts the translation variables 
\family typewriter
CentreX
\family default
, 
\family typewriter
CentreY
\family default
, and 
\family typewriter
CentreZ
\family default
, and the Euler angles 
\family typewriter
alpha
\family default
, 
\family typewriter
beta
\family default
, and 
\family typewriter
gamma
\family default
.
 So if you modify the Box example above to
\end_layout

\begin_layout LyX-Code
<struct name="simpleBox">
\end_layout

\begin_layout LyX-Code
  <param name="Type">Box</param>
\end_layout

\begin_layout LyX-Code
  <param name="CentreX">1.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="startX">0.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="endX">1.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="startY">0.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="endY">1.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="startZ">0.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="endZ">1.0</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
then the box will actually span from 1 to 2.
\end_layout

\begin_layout Standard
The Euler angles use the 
\begin_inset Formula $y$
\end_inset

 convention, first rotating about the original 
\begin_inset Formula $z$
\end_inset

 axis an angle 
\begin_inset Formula $\gamma$
\end_inset

, then rotating around the new 
\begin_inset Formula $y$
\end_inset

 axis an angle 
\begin_inset Formula $\beta$
\end_inset

, and finally a rotation around the new 
\begin_inset Formula $z$
\end_inset

 axis an angle 
\begin_inset Formula $\alpha$
\end_inset

.
 Specifically, these rotations are expressed through the rotation matrix
\end_layout

\begin_layout Standard
\begin_inset Formula \[
R=\left(\begin{array}{ccc}
-\sin\alpha\sin\gamma+\cos\alpha\cos\beta\cos\gamma & \sin\alpha\cos\gamma+\cos\beta\sin\gamma\cos\alpha & -\cos\alpha\sin\beta\\
-\cos\alpha\sin\gamma-\cos\beta\cos\gamma\sin\alpha & \cos\alpha\cos\gamma-\cos\beta\sin\gamma\sin\alpha & \sin\alpha\sin\beta\\
\sin\beta\cos\alpha & \sin\beta\sin\alpha & \cos\beta\end{array}\right).\]

\end_inset

 So when Gale attempts to figure out whether a coordinate 
\begin_inset Formula $(x,y,z)$
\end_inset

 is inside a shape, it creates a new coordinate
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\left(\begin{array}{c}
x'\\
y'\\
z'\end{array}\right)=\left(\left(\begin{array}{c}
x\\
y\\
z\end{array}\right)-\left(\begin{array}{c}
CentreX\\
CentreY\\
CentreZ\end{array}\right)\right)R,\]

\end_inset

 which it uses in the formulas below.
\end_layout

\begin_layout Standard
Finally, you can command Gale to invert the shape with the 
\family typewriter
invert
\family default
 variable, making the inside the outside and vice versa.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CentreX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CentreY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CentreZ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
alpha
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
beta
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
gamma
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
invert
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
BelowCosinePlane 
\end_layout

\begin_layout Standard
\begin_inset Formula \[
y<offset+delta*\cos\left(\frac{\pi period}{180}*x+phase\right)\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
offset
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
delta
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
period
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
phase
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset

See also the notes for BelowPlane.
\end_layout

\begin_layout Subsection
BelowPlane
\end_layout

\begin_layout Standard
\begin_inset Formula \[
y<offset\]

\end_inset


\end_layout

\begin_layout Standard
This shape also uses the variables 
\begin_inset Formula $minX$
\end_inset

, 
\begin_inset Formula $minY$
\end_inset

, 
\begin_inset Formula $minZ$
\end_inset

, 
\begin_inset Formula $maxX$
\end_inset

, 
\begin_inset Formula $maxY$
\end_inset

, and 
\begin_inset Formula $maxZ$
\end_inset

, which are only used when computing the volume of this shape.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
offset
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
minX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
minY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
minZ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
maxX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
maxY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
maxZ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Box
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\begin{array}{c}
startX<x<endX\\
startY<y<endY\\
startZ<z<endZ\end{array}\]

\end_inset

Alternately, you can use widths, in which case 
\begin_inset Formula \[
\begin{array}{c}
|x|<widthX/2\\
|y|<widthY/2\\
|z|<widthZ/2\end{array}.\]

\end_inset

You may mix and match these specification (e.g., use start/end for 
\begin_inset Formula $x$
\end_inset

, and width for 
\begin_inset Formula $y$
\end_inset

).
 If both are specified for one coordinate, Gale will use start and end.
 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
widthX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
widthY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
widthZ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
ConvexHull
\end_layout

\begin_layout Standard
This shape is a convenience function for creating intersections of 
\family typewriter
BelowPlane
\family default
.
 The input is a list of vertices.
 From each vertex, Gale computes a vector and plane normal to this vector.
 The half spaces below the planes are then intersected to create a shape.
 At present, you may only use three vertices in 2D, and four vertices in
 3D.
 As an example, the shape
\end_layout

\begin_layout LyX-Code
<struct name="triangleShape">
\end_layout

\begin_layout LyX-Code
  <param name="Type">ConvexHull</param>
\end_layout

\begin_layout LyX-Code
  <list name="verticies">
\end_layout

\begin_layout LyX-Code
    <asciidata>
\end_layout

\begin_layout LyX-Code
      <columnDefinition name = "x" type="double"/>
\end_layout

\begin_layout LyX-Code
      <columnDefinition name = "y" type="double"/>
\end_layout

\begin_layout LyX-Code
                                      1.0      1.0
\end_layout

\begin_layout LyX-Code
                                     -1.0      1.0
\end_layout

\begin_layout LyX-Code
                                      0.0     -1.0
\end_layout

\begin_layout LyX-Code
    </asciidata>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
creates a shape with vertices at (0,2), (4,-2), (-4,-2).
\end_layout

\begin_layout Subsection
Cylinder
\end_layout

\begin_layout Standard
This shape uses a variable 
\begin_inset Formula $perpendicularAxis$
\end_inset

 to determine which direction is perpendicular to the axis of the cylinder.
 This variable accepts any of (x, y, z, X, Y, Z, i, j, k, I, J, K, 0, 1,
 2).
 For the case where 
\begin_inset Formula $perpendicularAxis=z$
\end_inset

, then
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Formula \[
\begin{array}{c}
radius^{2}>x^{2}+y^{2}\\
startX<x<endX\\
startY<y<endY\\
startZ<z<endZ\end{array}.\]

\end_inset


\begin_inset VSpace defskip
\end_inset

 
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
radius
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
startX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $-\infty$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
startY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $-\infty$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
startZ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $-\infty$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
endX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\infty$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
endY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\infty$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
endZ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\infty$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Everywhere
\end_layout

\begin_layout Standard
This is a convenience shape simply meaning everywhere.
\end_layout

\begin_layout Subsection
PolygonShape
\end_layout

\begin_layout Standard
This is primarily a two-dimensional shape.
 The input to this shape is a list of vertices.
 To figure out whether a point is inside the polygon, Gale adds up all of
 the angles of the vectors going to the vertices.
 If the point is inside the polygon, then the angles will sum to 
\begin_inset Formula $\pm2\pi$
\end_inset

, depending on which direction you specify the vertices.
 If the point is outside the polygon, then the angles sum to 0.
 A simple example is a triangle
\end_layout

\begin_layout LyX-Code
    <struct name="triangleShape">
\end_layout

\begin_layout LyX-Code
      <param name="Type">PolygonShape</param>
\end_layout

\begin_layout LyX-Code
      <list name="verticies">
\end_layout

\begin_layout LyX-Code
        <asciidata>
\end_layout

\begin_layout LyX-Code
        <columnDefinition name = "x" type="double"/>
\end_layout

\begin_layout LyX-Code
        <columnDefinition name = "y" type="double"/>
\end_layout

\begin_layout LyX-Code
                                        0.0      0.0
\end_layout

\begin_layout LyX-Code
                                        1.0      0.0
\end_layout

\begin_layout LyX-Code
                                        1.0      1.0
\end_layout

\begin_layout LyX-Code
        </asciidata>
\end_layout

\begin_layout LyX-Code
      </list>
\end_layout

\begin_layout LyX-Code
    </struct>
\end_layout

\begin_layout Standard
This creates a triangle with vertices at (0,0), (1,0), (1,1).
\end_layout

\begin_layout Standard
You can extrude this shape into three dimensions by specifying startZ and
 endZ.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
startZ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
endZ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Sphere
\end_layout

\begin_layout Standard
\begin_inset Formula \[
x^{2}+y^{2}+z^{2}<radius^{2}\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
radius
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Superellipsoid
\end_layout

\begin_layout Standard
In two dimensions
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\left(\frac{x}{radiusX}\right)^{2/epsilon1}+\left(\frac{y}{radiusY}\right)^{2/epsilon1}<1,\]

\end_inset

and in three dimensions
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Formula \[
\left(\left(\frac{x}{radiusX}\right)^{2/epsilon2}+\left(\frac{y}{radiusY}\right)^{2/epsilon2}\right)^{epsilon2/epsilon1}+\left(\frac{z}{radiusZ}\right)^{2/epsilon1}<1.\]

\end_inset


\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
radiusX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
radiusY
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
radiusZ
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
epsilon1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
epsilon2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Materials
\begin_inset CommandInset label
LatexCommand label
name "sec:Materials"

\end_inset


\end_layout

\begin_layout Standard
Gale supports two kinds of rheologies: viscous and yielding.
 You can combine these two rheologies to create a more realistic composite
 rheology.
 You then pair this composite rheology with a shape to actually lay down
 material on the grid.
 As a simple example, you can create a viscous rheology
\end_layout

\begin_layout LyX-Code
<struct name="viscousRheology">
\end_layout

\begin_layout LyX-Code
  <param name="Type">MaterialViscosity</param>
\end_layout

\begin_layout LyX-Code
  <param name="eta0">10.0</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
and a Von Mises yielding rheology
\end_layout

\begin_layout LyX-Code
<struct name="strainWeakening">
\end_layout

\begin_layout LyX-Code
  <param name="Type">StrainWeakening</param>
\end_layout

\begin_layout LyX-Code
  <param name="TimeIntegrator">timeIntegrator</param>
\end_layout

\begin_layout LyX-Code
  <param name="MaterialPointsSwarm">materialSwarm</param>
\end_layout

\begin_layout LyX-Code
  <param name="softeningStrain">0.1</param>
\end_layout

\begin_layout LyX-Code
  <param name="initialDamageFraction">0.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="initialDamageWavenumber">0.5</param>
\end_layout

\begin_layout LyX-Code
  <param name="initialDamageFactor">0.5</param>
\end_layout

\begin_layout LyX-Code
  <param name="healingRate">0.0</param>
\end_layout

\begin_layout LyX-Code
</struct>
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

<struct name="yieldingRheology">
\end_layout

\begin_layout LyX-Code
  <param name="Type">VonMises</param>
\end_layout

\begin_layout LyX-Code
  <param name="cohesion">10.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="cohesionAfterSoftening">1.0</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
and combine them together with 
\family typewriter
materialShape
\family default
 (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Shapes"

\end_inset

 on how to create shapes)
\end_layout

\begin_layout LyX-Code
<struct name="yieldingMaterial">
\end_layout

\begin_layout LyX-Code
  <param name="Type">RheologyMaterial</param>
\end_layout

\begin_layout LyX-Code
  <param name="Shape">yieldingShape</param>
\end_layout

\begin_layout LyX-Code
  <list name="Rheology">
\end_layout

\begin_layout LyX-Code
    <param>viscousRheology</param>
\end_layout

\begin_layout LyX-Code
    <param>yieldingRheology</param>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
For each material, you can specify a density, a coefficient of thermal expansivi
ty (
\begin_inset Formula $\alpha$
\end_inset

), and a thermal diffusivity.
\end_layout

\begin_layout Standard
The density and expansivity are used by the 
\family typewriter
BuoyancyForceTerm
\family default
 component (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:BouyancyForceTerm"

\end_inset

) to create buoyancy forces.
 The diffusivity is used by the temperature solver (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Temperature-components"

\end_inset

).
\end_layout

\begin_layout Standard
You can also specify multiple radiogenic heating rates (Q) and radiogenic
 timescales (
\begin_inset Formula $\lambda$
\end_inset

).
 This simulates the action of multiple radioactive materials with different
 half-lives.
 To enable this, you must provide a list of Qs and 
\begin_inset Formula $\lambda$
\end_inset

s.
 For example, to specify two different radioactive species, add something
 like
\end_layout

\begin_layout LyX-Code
<list name="heatingElements">
\end_layout

\begin_layout LyX-Code
  <struct>
\end_layout

\begin_layout LyX-Code
    <param name="Q">1.0</param>
\end_layout

\begin_layout LyX-Code
    <param name="lambda">1.0</param>
\end_layout

\begin_layout LyX-Code
  </struct>
\end_layout

\begin_layout LyX-Code
  <struct>
\end_layout

\begin_layout LyX-Code
    <param name="Q">2.0</param>
\end_layout

\begin_layout LyX-Code
    <param name="lambda">2.0</param>
\end_layout

\begin_layout LyX-Code
  </struct>
\end_layout

\begin_layout LyX-Code
</list>
\end_layout

\begin_layout Standard
At a given time 
\begin_inset Formula $t$
\end_inset

, each radioactive element will generate
\end_layout

\begin_layout Standard
\begin_inset Formula \[
Qe^{-\lambda t}\]

\end_inset

 units of energy.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
density
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
alpha
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
diffusivity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Q
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lambda
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
StoreVisc and StoreStress
\begin_inset CommandInset label
LatexCommand label
name "sub:StoreViscosity"

\end_inset


\end_layout

\begin_layout Standard
These are not rheologies per se, but rather extra fields where Gale saves
 the effective isotropic viscosity and components of the stress tensor.
 For pure viscous materials, the effective viscosity will be the same as
 the viscosity you supply.
 For yielding rheologies, the effective viscosity will change as the particle
 yields.
 These components needs a 
\family typewriter
MaterialPointsSwarm
\family default
, which in all of the sample input files is called 
\family typewriter
materialSwarm
\family default
.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MaterialPointsSwarm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Viscous
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:MaterialViscosity"

\end_inset

MaterialViscosity
\end_layout

\begin_layout Standard
This is the simplest rheology.
 There is only one variable, the viscosity 
\family typewriter
eta0
\family default
.
\end_layout

\begin_layout Standard
\align center
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
eta0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Frank-Kamenetskii"

\end_inset

Frank-Kamenetskii
\end_layout

\begin_layout Standard
This is a temperature-dependent viscosity
\begin_inset Formula \[
eta=eta0*\exp\left(-theta*T\right).\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
eta0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
theta
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Arrhenius"

\end_inset

Arrhenius
\end_layout

\begin_layout Standard
This is another temperature dependent viscosity
\end_layout

\begin_layout Standard
\begin_inset Formula \[
eta=eta0*\exp\left(\left(activationEnergy+activationVolume*(height-y)\right)/\left(T+referenceTemperature\right)\right).\]

\end_inset

 Note that 
\begin_inset Formula $height$
\end_inset

 is the height of the column, not the overall maximum height of the material.
 Also, 
\begin_inset Formula $height$
\end_inset

 does not consider material boundaries.
 So if you have an air layer, you may get surprising results.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
eta0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
activationEnergy
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
activationVolume
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
referenceTemperature
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:NonNewtonian"

\end_inset

NonNewtonian
\end_layout

\begin_layout Standard
This is a strain rate dependent rheology.
 It assumes that the material obeys the relation 
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\dot{\varepsilon}=\left(A\tau\right)^{n}\exp\left(-T_{0}/T\right),\]

\end_inset

 where 
\begin_inset Formula $\dot{\varepsilon}$
\end_inset

 is the strain rate, 
\begin_inset Formula $\tau$
\end_inset

 is the stress, and 
\begin_inset Formula $A$
\end_inset

 , 
\begin_inset Formula $T_{0}$
\end_inset

, and 
\begin_inset Formula $n$
\end_inset

 are constants.
 Using 
\begin_inset Formula \[
\tau=2\eta\dot{\varepsilon},\]

\end_inset

 we can write the viscosity as
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\eta=\frac{\dot{\varepsilon}^{\frac{1}{n}-1}\exp\left(T_{0}/nT\right)}{2A}.\]

\end_inset


\end_layout

\begin_layout Standard
When setting the viscosity for the first solve, the strain rate has not
 been calculated yet.
 So you must supply a reference strain rate for that first step.
 Gale uses this viscosity to find a solution and thus a new strain rate.
 Gale then iterates until the strain rate converges.
 
\end_layout

\begin_layout Standard
You may also set maximum and minimum values for the resulting viscosity.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
T_0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
refStrainRate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
minViscosity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
maxViscosity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Yielding
\end_layout

\begin_layout Standard
Yielding rheologies are a bit more complicated.
 
\end_layout

\begin_layout Subsubsection
StrainWeakening
\end_layout

\begin_layout Standard
First you need to create a 
\family typewriter
StrainWeakening
\family default
 component.
 
\family typewriter
StrainWeakening
\family default
 is mainly used to define an initial distribution of strain in a material
 and to calculate the accumulated strain on each particle.
 To that end, it requires a number of parameters.
\end_layout

\begin_layout Description
TimeIntegrator This is the component used for time integration to accumulate
 strain.
 Given the standard components in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Basic-Components"

\end_inset

, this will be 
\family typewriter
timeIntegrator
\family default
.
\end_layout

\begin_layout Description
MaterialPointsSwarm This is the swarm of particles associated with this
 rheology.
 Given the standard components in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Basic-Components"

\end_inset

, this will be 
\family typewriter
materialSwarm
\family default
.
\end_layout

\begin_layout Description
healingRate With this parameter, accumulated strain can decrease.
 Specifically, the time derivative of accumulated strain becomes
\begin_inset Formula \[
\frac{\sigma_{yield}}{\eta}\left(\frac{\beta}{1-\beta}-healingRate\right),\]

\end_inset

 where 
\begin_inset Formula $\beta\equiv\sigma_{yield}/\sigma$
\end_inset

, 
\begin_inset Formula $\sigma_{yield}$
\end_inset

 is the yield stress, 
\begin_inset Formula $\sigma$
\end_inset

 is some measure of the current stress (e.g., the second invariant of the
 stress tensor), and 
\begin_inset Formula $\eta$
\end_inset

 is the isotropic viscosity.
 Note that the healing rate should be between 0 and 1.
\end_layout

\begin_layout Description
initialSofteningStrain The strain at which the material starts to yield.
\end_layout

\begin_layout Description
finalSofteningStrain The strain at which the material has fully yielded.
\end_layout

\begin_layout Description
initialDamageFraction The chance that an individual material particle will
 have a non-zero initial strain.
\end_layout

\begin_layout Description
initialDamageWaveNumber The wavenumber for the initial random strain.
 To avoid having initial strain on the edges of the box, this should be
 set to the inverse of the horizontal length of the box.
\end_layout

\begin_layout Description
initialDamageFactor The maximum initial random strain for a particle is
\begin_inset Newline newline
\end_inset


\family typewriter
initialDamageFactor
\family default
*
\family typewriter
finalSofteningStrain
\family default
.
 
\end_layout

\begin_layout Description
randomSeed A random number seed used when computing which particles are
 initially strained.
\end_layout

\begin_layout Description
initialStrainShape If defined, the initial random strain will only occur
 within this shape (outside the shape the initial random strain will be
 zero).
\end_layout

\begin_layout Standard
You can also define a strain weakening ratio 
\begin_inset Formula $\alpha\equiv\min\left(1,\gamma/\gamma_{softening}\right)$
\end_inset

, where 
\begin_inset Formula $\gamma$
\end_inset

 is the accumulated strain, and 
\begin_inset Formula $\gamma_{softening}$
\end_inset

 is the softening strain.
 This allows us to define quantities like the effective cohesion 
\begin_inset Formula $C'\equiv C_{pristine}\left(1-\alpha\right)+C_{yielded}\alpha$
\end_inset

 and effective friction coefficient 
\begin_inset Formula $\tan\phi'=\tan\phi_{pristine}\left(1-\alpha\right)+\tan\phi_{yielded}\alpha$
\end_inset

.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TimeIntegrator
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MaterialPointsSwarm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
healingRate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
initialsofteningStrain
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
finalsofteningStrain
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\infty$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
initialDamageFraction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
initialDamageWaveNumber
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-1.0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
initialDamageFactor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
randomSeed
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
initialStrainShape
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:VonMises"

\end_inset

VonMises
\end_layout

\begin_layout Standard
This is the simplest yielding rheology in Gale.
 The yielding stress is simply the effective cohesion.
 Specifically, the yielding condition specifies
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\sqrt{J_{2}}=C'\]

\end_inset

where 
\begin_inset Formula $J_{2}$
\end_inset

 is the second invariant of the deviatoric stress tensor.
 This rheology only has a few input parameters:
\end_layout

\begin_layout Itemize

\family typewriter
cohesion
\family default
 and 
\family typewriter
cohesionAfterSoftening
\family default
 have the obvious meanings.
 
\end_layout

\begin_layout Itemize

\family typewriter
minimumYieldStress
\family default
 sets an absolute minimum to the stress required to make the material yield.
\end_layout

\begin_layout Itemize

\family typewriter
StrainRateSoftening
\family default
 is a Boolean variable that changes how the constitutive matrix is modified
 when the material has yielded.
 If 
\family typewriter
StrainRateSoftening
\family default
 is 
\family typewriter
True
\family default
, then the viscosity is set to 
\begin_inset Formula \[
\eta_{new}=2C'^{2}\eta/\left(C'^{2}+J_{2}\right).\]

\end_inset

 This is a way of creeping up on the correct viscosity to avoid setting
 the viscosity too low.
 Otherwise the viscosity is set to
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula \[
\eta_{new}=\eta C'/\sqrt{J_{2}},\]

\end_inset

 which essentially sets the stress of the particle to the yield stress.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cohesion
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cohesionAfterSoftening
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
minimumYieldStress
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
StrainRateSoftening
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:DruckerPrager"

\end_inset

DruckerPrager
\end_layout

\begin_layout Standard
This rheology uses the same parameters as Von Mises, but also adds a friction
 coefficient that can soften.
 Specifically, the yield condition is
\begin_inset Formula \[
\sqrt{J_{2}}=Ap+B,\]

\end_inset

where 
\begin_inset Formula $p$
\end_inset

 is the pressure.
 The value of the constants 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 are different from 2D and 3D.
 In 2D, Drucker-Prager and Mohr-Coulomb are identical.
 Specifically,
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\begin{array}{ccc}
A & = & \sin\phi'\\
B & = & C'\cos\phi'\end{array}.\]

\end_inset

 In 3D, the mapping between friction angles and cohesion to 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 is more complicated 
\begin_inset Formula \[
\begin{array}{ccc}
A & = & \frac{2\sin\phi'}{\sqrt{3}\left(3-\sin\phi'\right)}\\
B & = & \frac{6C'\cos\phi'}{\sqrt{3}\left(3-\sin\phi'\right)}\end{array}.\]

\end_inset

 You can also write a Mohr-Coulomb rheology in this form, but then the constants
 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 depend on 
\begin_inset Formula $J_{2}$
\end_inset

.
 So reducing the viscosity does not result in a linear decrease in 
\begin_inset Formula $J_{2}$
\end_inset

.
 This makes it difficult for the code to find a solution.
 In practice, the yield surface for Drucker-Prager and Mohr-Coulomb are
 not too dissimilar.
 Mohr-Coulomb's yield surface is a six-sided cone, while Drucker-Prager's
 yield surface is the smooth cone inscribing the Mohr-Coulomb segmented
 cone.
\end_layout

\begin_layout Standard
Note that 
\family typewriter
minimumYieldStress
\family default
 is interpreted differently.
 If it is zero (the default), then the actual minimum yield stress will
 be the effective cohesion.
 This is because there tends to be numerical problems when using a very
 small minimum yield stress under tension.
\end_layout

\begin_layout Standard
Also, the Drucker-Prager implementation allows you to specify that material
 near the boundary will have different yielding properties.
 This is useful for simulating frictional boundaries.
 For example, if 
\family typewriter
boundaryLeft
\family default
 is 
\family typewriter
True
\family default
, then in the element on the left boundary, Gale will use 
\family typewriter
boundaryCohesion
\family default
 instead of 
\family typewriter
cohesion
\family default
, 
\family typewriter
boundaryFrictionCoefficient
\family default
 instead of 
\family typewriter
frictionCoefficient
\family default
, etc.
\end_layout

\begin_layout Standard
Finally, DruckerPrager requires a pressure.
 If you are using 
\family typewriter
HydrostaticTerm
\family default
 (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:HydrostaticTerm"

\end_inset

), you have to remember to give it that as well.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="16" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PressureField
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
HydrostaticTerm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
frictionCoefficient
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
frictionCoefficientAfterSoftening
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
minimumYieldStress
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 (see above)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryCohesion
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryCohesionAfterSoftening
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryFrictionCoefficient
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryFrictionCoefficientAfterSoftening
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryLeft
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryRight
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryTop
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryBottom
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryFront
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
boundaryBack
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
See also Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:VonMises"

\end_inset

.
\end_layout

\begin_layout Subsubsection
FaultingMoresiMulhaus2006
\end_layout

\begin_layout Standard
This is a fairly complicated non-isotropic rheology.
 The full details can be found in Moresi and Mülhaus (2006) 
\begin_inset CommandInset citation
LatexCommand cite
key "Moresi faulting"

\end_inset

, but essentially it keeps track of which direction a material is strained.
 To do so, it uses a component called 
\family typewriter
Director
\family default
.
 For the standard components given in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Basic-Components"

\end_inset

, this would be
\end_layout

\begin_layout LyX-Code
<struct name="director">
\end_layout

\begin_layout LyX-Code
  <param name="Type">Director</param>
\end_layout

\begin_layout LyX-Code
  <param name="TimeIntegrator">timeIntegrator</param>
\end_layout

\begin_layout LyX-Code
  <param name="VelocityGradientsField">VelocityGradientsField</param>
\end_layout

\begin_layout LyX-Code
  <param name="MaterialPointsSwarm">materialSwarm</param>
\end_layout

\begin_layout LyX-Code
  <param name="initialDirectionX">0.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="initialDirectionY">1.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="initialDirectionZ">0.0</param>
\end_layout

\begin_layout LyX-Code
  <param name="dontUpdate">True</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
Otherwise, it adds one variable not present in 
\family typewriter
DruckerPrager
\family default
: 
\family typewriter
ignoreOldOrientation
\family default
.
 This tells Gale whether it should check to see whether material will weaken
 further in the current direction, or if it should try every direction equally
 each time step.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cohesion
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cohesionAfterSoftening
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
frictionCoefficient
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
frictionCoefficientAfterSoftening
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
minimumYieldStress
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ignoreOldOrientation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Boundary Conditions
\begin_inset CommandInset label
LatexCommand label
name "sec:Boundary-Conditions"

\end_inset


\end_layout

\begin_layout Standard
Gale's computational domain is logically Euclidean.
 So in 2D, there are four boundaries: 
\family typewriter
right
\family default
, 
\family typewriter
left
\family default
, 
\family typewriter
top
\family default
, and 
\family typewriter
bottom
\family default
.
 3D adds 
\family typewriter
front
\family default
 and 
\family typewriter
back
\family default
.
 Note that the boundaries in the 
\begin_inset Formula $z$
\end_inset

 axis are 
\family typewriter
front
\family default
 and 
\family typewriter
back
\family default
, not 
\family typewriter
top
\family default
 and 
\family typewriter
bottom
\family default
.
 In many cases, this makes it simple to switch between 2D and 3D.
 When doing this, you may ignore the warning that the 
\begin_inset Formula $z$
\end_inset

 boundaries are empty in 2D.
\end_layout

\begin_layout Subsection
Velocity Boundary Conditions
\begin_inset CommandInset label
LatexCommand label
name "sub:Velocity-Boundary-Conditions"

\end_inset


\end_layout

\begin_layout Standard
To impose boundary conditions on the velocity, add a composite variable
 condition (
\family typewriter
CompositeVC
\family default
) to the input file.
 Within that 
\family typewriter
CompositeVC
\family default
, add a list of conditions by using 
\family typewriter
WallVC
\family default
s.
 Within each 
\family typewriter
WallVC
\family default
, specify which boundary and what the velocity's value is.
 For example, to set the 
\begin_inset Formula $y$
\end_inset

 velocity on the bottom to zero, add
\end_layout

\begin_layout LyX-Code
<struct name="velocityBCs">
\end_layout

\begin_layout LyX-Code
  <param name="type">CompositeVC</param>
\end_layout

\begin_layout LyX-Code
  <list name="vcList">
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
      <param name="wall">bottom</param>
\end_layout

\begin_layout LyX-Code
      <list name="variables">
\end_layout

\begin_layout LyX-Code
        <struct>
\end_layout

\begin_layout LyX-Code
          <param name="name">vy</param>
\end_layout

\begin_layout LyX-Code
          <param name="type">double</param>
\end_layout

\begin_layout LyX-Code
          <param name="value">0</param>
\end_layout

\begin_layout LyX-Code
        </struct>
\end_layout

\begin_layout LyX-Code
      </list>
\end_layout

\begin_layout LyX-Code
    </struct> 
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
If, instead, you set 
\family typewriter
vy
\family default
 to a non-zero value, then the boundary will move as the simulation proceeds.
 If you want the sides to remain fixed, then you probably want flux boundaries,
 in which case you will also have to specify a few more things (see Section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Flux-Boundary-Conditions"

\end_inset

).
\end_layout

\begin_layout Standard
You can also set the velocity to a function.
 For example, to also set the 
\begin_inset Formula $x$
\end_inset

 velocity to have a Gaussian distribution 
\begin_inset Formula $\exp\left(-\left(\frac{x-0.5}{0.1}\right)^{2}\right)$
\end_inset


\end_layout

\begin_layout LyX-Code
<struct name="velocityBCs">
\end_layout

\begin_layout LyX-Code
  <param name="type">CompositeVC</param>
\end_layout

\begin_layout LyX-Code
  <list name="vcList">
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
      <param name="wall">bottom</param>
\end_layout

\begin_layout LyX-Code
      <list name="variables">
\end_layout

\begin_layout LyX-Code
        <struct>
\end_layout

\begin_layout LyX-Code
          <param name="name">vy</param>
\end_layout

\begin_layout LyX-Code
          <param name="type">double</param>
\end_layout

\begin_layout LyX-Code
          <param name="value">0</param>
\end_layout

\begin_layout LyX-Code
        </struct>
\end_layout

\begin_layout LyX-Code
        <struct>
\end_layout

\begin_layout LyX-Code
          <param name="name">vx</param>
\end_layout

\begin_layout LyX-Code
          <param name="type">func</param>
\end_layout

\begin_layout LyX-Code
          <param name="value">Gaussian</param>
\end_layout

\begin_layout LyX-Code
        </struct>
\end_layout

\begin_layout LyX-Code
      </list>
\end_layout

\begin_layout LyX-Code
    </struct> 
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<param name="GaussianHeight">1.0</param>
\end_layout

\begin_layout LyX-Code
<param name="GaussianWidth">0.1</param>
\end_layout

\begin_layout LyX-Code
<param name="GaussianCenter">0.5</param>
\end_layout

\begin_layout LyX-Code
<param name="GaussianDim">0</param>
\end_layout

\begin_layout Standard
Note that the parameters are separated out into the variables section (see
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Variables"

\end_inset

).
 In general, you can use any of the Standard Condition Functions (see Section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Standard-Condition-Functions"

\end_inset

) to specify the velocities.
\end_layout

\begin_layout Standard
If you need to specify velocities for only part of the boundary (e.g., the
 left half moves at vx=1, the right half is unconstrained), then you should
 use a 
\family typewriter
ShapeVC
\family default
 (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Fixing-Internal-Degrees"

\end_inset

).
\end_layout

\begin_layout Subsection
Flux Boundary Conditions
\begin_inset CommandInset label
LatexCommand label
name "sub:Flux-Boundary-Conditions"

\end_inset


\end_layout

\begin_layout Standard
Let's assume you wish to have material flow across the boundary instead
 of having the boundary move.
 A simple example would be like Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:General-subduction-model"

\end_inset

, where material flows in from the left and out through the bottom.
 There are three things that you must specify for this to work.
\end_layout

\begin_layout Enumerate

\series bold
The boundaries do not move.

\series default
 For the slab subduction model, you need to ensure that neither the bottom
 nor left boundaries move.
 Do this by specifying
\end_layout

\begin_deeper
\begin_layout LyX-Code

\family typewriter
<param name="staticBottom">True</param>
\begin_inset Newline newline
\end_inset

<param name="staticLeft">True</param>
\end_layout

\begin_layout Standard
in EulerDeform (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:EulerDeform"

\end_inset

).
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Velocity conditions on the boundaries.

\series default
 Again, for slab subduction this involves inflow conditions on the left
 boundary and outflow conditions on bottom.
 See Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Velocity-Boundary-Conditions"

\end_inset

 for details.
 The other boundaries have no-slip conditions.
\end_layout

\begin_layout Enumerate

\series bold
A region where new particles are created, not split from existing particles.

\series default
 When Gale advects material near an inflowing boundary, this leaves a vacuum.
 Normally, Gale creates new particles by cloning nearby particles.
 However, if the cloned particles have already undergone evolution (e.g.,
 they were strained), then the new particles would no longer be pristine.
 To fix this, you can specify regions where particles should be created
 anew by adding something like
\end_layout

\begin_deeper
\begin_layout LyX-Code

\family typewriter
<param name="originalParticleShape">leftBoundaryShape</param>
\end_layout

\begin_layout Standard
to the 
\family typewriter
ReseedSplitting
\family default
 struct.
 An example of this is in the sample input file 
\family typewriter
subduction.xml
\family default
.
\end_layout

\end_deeper
\begin_layout Subsection
Stress Boundary Conditions
\begin_inset CommandInset label
LatexCommand label
name "sub:Stress-Boundary-Conditions"

\end_inset


\end_layout

\begin_layout Standard
If the nature of your problem is that stresses are specified on the boundary
 rather than velocities, you can specify those conditions using the 
\family typewriter
StressBC
\family default
 component.
 For example, if you want to simulate an extension model with isostasy,
 this is equivalent to adding a supporting stress on the bottom.
 In equilibrium, the supporting stress cancels the force of gravity, and
 material does not flow across the boundary.
 When material piles up, the supporting stress is too weak to support the
 material, and material flows out.
 Similarly, when material thins out, the supporting stress overcomes gravity
 and material flows in.
\end_layout

\begin_layout Standard
StressBC is a component, so it must be inside the list of components (see
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Components"

\end_inset

), not outside the list like the velocity boundary conditions.
 For example, to incorporate an isostatic bottom boundary condition, you
 would specify the stress on the bottom boundary in the 
\begin_inset Formula $y$
\end_inset

 direction as a constant.
\end_layout

\begin_layout LyX-Code
<struct name="stressBC">
\end_layout

\begin_layout LyX-Code
  <param name="Type">StressBC</param>
\end_layout

\begin_layout LyX-Code
  <param name="ForceVector">mom_force</param>
\end_layout

\begin_layout LyX-Code
  <param name="Swarm">picIntegrationPoints</param>
\end_layout

\begin_layout LyX-Code
  <param name="wall">bottom</param>
\end_layout

\begin_layout LyX-Code
  <param name="y_type">double</param>
\end_layout

\begin_layout LyX-Code
  <param name="y_value">1.0</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
You can also use the Standard Condition Functions (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Standard-Condition-Functions"

\end_inset

), but due to technical issues, you must list Standard Condition Functions
 before StressBC in the list of components.
 So, for example, to add a stress condition to the left wall with a Gaussian
 shape, the complete list of components would be
\end_layout

\begin_layout LyX-Code
<struct name="conditionFunctions">
\end_layout

\begin_layout LyX-Code
  <param name="Type">StgFEM_StandardConditionFunctions</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="stressBCBottom">
\end_layout

\begin_layout LyX-Code
  <param name="Type">StressBC</param>
\end_layout

\begin_layout LyX-Code
  <param name="ForceVector">mom_force</param>
\end_layout

\begin_layout LyX-Code
  <param name="Swarm">picIntegrationPoints</param>
\end_layout

\begin_layout LyX-Code
  <param name="wall">bottom</param>
\end_layout

\begin_layout LyX-Code
  <param name="y_type">double</param>
\end_layout

\begin_layout LyX-Code
  <param name="y_value">1.0</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code
<struct name="stressBCLeft">
\end_layout

\begin_layout LyX-Code
  <param name="Type">StressBC</param>
\end_layout

\begin_layout LyX-Code
  <param name="ForceVector">mom_force</param>
\end_layout

\begin_layout LyX-Code
  <param name="Swarm">picIntegrationPoints</param>
\end_layout

\begin_layout LyX-Code
  <param name="wall">left</param>
\end_layout

\begin_layout LyX-Code
  <param name="x_type">func</param>
\end_layout

\begin_layout LyX-Code
  <param name="x_value">Gaussian</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
And then in the list of variables (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Variables"

\end_inset

), add the parameters for the 
\family typewriter
Gaussian
\family default
:
\end_layout

\begin_layout LyX-Code
<param name="GaussianHeight">1.0</param>
\end_layout

\begin_layout LyX-Code
<param name="GaussianWidth">0.1</param>
\end_layout

\begin_layout LyX-Code
<param name="GaussianCenter">0.5</param>
\end_layout

\begin_layout LyX-Code
<param name="GaussianDim">0</param>
\end_layout

\begin_layout Standard
The type can also be 
\family typewriter
HydrostaticTerm
\family default
.
 If you are using a 
\family typewriter
HydrostaticTerm
\family default
 component (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:HydrostaticTerm"

\end_inset

), then you need a 
\family typewriter
StressBC
\family default
 component on the top to act as a restoring force when the surface of the
 material dips below equilibrium.
 So it would be something like
\end_layout

\begin_layout LyX-Code
<struct name="stressBCTop">
\end_layout

\begin_layout LyX-Code
  <param name="Type">StressBC</param>
\end_layout

\begin_layout LyX-Code
  <param name="ForceVector">mom_force</param>
\end_layout

\begin_layout LyX-Code
  <param name="Swarm">picIntegrationPoints</param>
\end_layout

\begin_layout LyX-Code
  <param name="wall">top</param>
\end_layout

\begin_layout LyX-Code
  <param name="y_type">HydrostaticTerm</param>
\end_layout

\begin_layout LyX-Code
  <param name="y_value">hydrostaticTerm</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
Note that you must not have a separate 
\family typewriter
StressBC
\family default
 for each direction of the normal stress (x,y,z).
 
\family typewriter
StressBC
\family default
 will automatically apply the proper force in all directions.
\end_layout

\begin_layout Subsection
Kinetic Friction Boundary Conditions
\end_layout

\begin_layout Standard
Kinetic friction looks like a stress boundary condition that depends on
 the normal stress on the boundary.
 To be exact, kinetic friction applies a force
\end_layout

\begin_layout Standard
\begin_inset Formula \[
F=friction\_value*\sigma_{nn}\]

\end_inset

 in the direction 
\begin_inset Formula $\overrightarrow{v}_{boundary}-\overrightarrow{v}$
\end_inset

, where 
\begin_inset Formula $\overrightarrow{v}$
\end_inset

 is the velocity of the material on the boundary, 
\begin_inset Formula $\overrightarrow{v}_{boundary}$
\end_inset

 is the velocity of the boundary, and 
\begin_inset Formula $\sigma_{nn}$
\end_inset

 is the normal stress.
 This force is recomputed during every non-linear iteration to maintain
 self consistency.
\end_layout

\begin_layout Standard
Kinetic friction is a component, so it must be inside the list of components
 (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Components"

\end_inset

), not outside the list like the velocity boundary conditions.
 As an example, to add kinetic friction to a non-moving boundary you would
 add the component
\end_layout

\begin_layout LyX-Code
<struct name="kineticFriction">
\end_layout

\begin_layout LyX-Code
  <param name="Type">KineticFriction</param>
\end_layout

\begin_layout LyX-Code
  <param name="ForceVector">mom_force</param>
\end_layout

\begin_layout LyX-Code
  <param name="Swarm">picIntegrationPoints</param>
\end_layout

\begin_layout LyX-Code
  <param name="wall">bottom</param>
\end_layout

\begin_layout LyX-Code
  <param name="StressField">StressField</param>
\end_layout

\begin_layout LyX-Code
  <param name="PressureField">PressureField</param>
\end_layout

\begin_layout LyX-Code
  <param name="VelocityField">VelocityField</param>
\end_layout

\begin_layout LyX-Code
  <param name="friction_type">double</param>
\end_layout

\begin_layout LyX-Code
  <param name="friction_value">0.5</param>
\end_layout

\begin_layout LyX-Code
  <param name="vx_type">double</param>
\end_layout

\begin_layout LyX-Code
  <param name="vx_value">0.0</param>
\end_layout

\begin_layout LyX-Code
</struct> 
\end_layout

\begin_layout Standard
You can also use the standard condition functions to specify the friction
 values (e.g., if the boundary has spatially varying friction coefficients)
 and boundary velocity values.
 You have to be careful that the boundary velocities match that of the actual
 applied velocity boundary conditions.
 So, for example, if you change your bottom boundary condition so that it
 moves at a velocity 
\family typewriter
1
\family default
 in the 
\family typewriter
x
\family default
 direction, you need to remember to change 
\family typewriter
vx_value
\family default
 to 
\family typewriter
1
\family default
.
\end_layout

\begin_layout Subsection
Temperature Boundary Conditions
\begin_inset CommandInset label
LatexCommand label
name "sub:Temperature-Boundary-Conditions"

\end_inset


\end_layout

\begin_layout Standard
Setting the boundary conditions on the temperature works almost exactly
 the same as velocity boundary conditions (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Velocity-Boundary-Conditions"

\end_inset

).
 You need only change 
\family typewriter
velocityBCs
\family default
 to 
\family typewriter
temperatureBCs
\family default
 and the velocity variable (e.g., 
\family typewriter
vx
\family default
) to 
\family typewriter
temperature
\family default
.
 For example, to set the bottom temperature to 1, you would add
\end_layout

\begin_layout LyX-Code
<struct name="temperatureBCs">
\end_layout

\begin_layout LyX-Code
  <param name="type">CompositeVC</param>
\end_layout

\begin_layout LyX-Code
  <list name="vcList">
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="type">WallVC</param>
\end_layout

\begin_layout LyX-Code
      <param name="wall">bottom</param>
\end_layout

\begin_layout LyX-Code
      <list name="variables">
\end_layout

\begin_layout LyX-Code
        <struct>
\end_layout

\begin_layout LyX-Code
          <param name="name">temperature</param>
\end_layout

\begin_layout LyX-Code
          <param name="type">double</param>
\end_layout

\begin_layout LyX-Code
          <param name="value">1.0</param>
\end_layout

\begin_layout LyX-Code
        </struct>
\end_layout

\begin_layout LyX-Code
      </list>
\end_layout

\begin_layout LyX-Code
    </struct> 
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Fixing-Internal-Degrees"

\end_inset

Fixing Internal Degrees of Freedom
\end_layout

\begin_layout Standard
While the velocity and temperature boundary conditions (see Sections 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Velocity-Boundary-Conditions"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Temperature-Boundary-Conditions"

\end_inset

) can be used to specify values on the boundary, it is sometime necessary
 to specify values within the domain as well.
 For example, the region that you want to simulate may not map nicely to
 a rectangular domain.
 You can fix the internal degrees of freedom for the areas outside of your
 irregular domain with a 
\family typewriter
ShapeVC
\family default
.
 It works very similar to 
\family typewriter
WallVC
\family default
, except that you supply a shape rather than a wall for the condition to
 work on.
 For example, adding
\end_layout

\begin_layout LyX-Code
<struct>
\end_layout

\begin_layout LyX-Code
  <param name="type">ShapeVC</param>
\end_layout

\begin_layout LyX-Code
  <param name="Shape">fixedShape</param>
\end_layout

\begin_layout LyX-Code
  <list name="variables">
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="name">vy</param>
\end_layout

\begin_layout LyX-Code
      <param name="type">double</param>
\end_layout

\begin_layout LyX-Code
      <param name="value">0</param>
\end_layout

\begin_layout LyX-Code
    </struct>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct> 
\end_layout

\begin_layout Standard
to the list of 
\family typewriter
WallVC
\family default
s in the 
\family typewriter
CompositeVC
\family default
 will fix the 
\emph on
y
\emph default
 velocity in the 
\family typewriter
fixedShape
\family default
 region.
 Note that you can also employ this as a boundary condition by making 
\family typewriter
fixedShape
\family default
 only cover a wall.
 The main advantage of this approach over a 
\family typewriter
WallVC
\family default
 is that you can have it only cover a part of the wall, thus constraining
 only part of the boundary.
 So if you wanted half of the boundary to move at a certain velocity, but
 wanted the other half unconstrained, you would use a 
\family typewriter
ShapeVC
\family default
.
\end_layout

\begin_layout Section
Temperature Initial Conditions
\begin_inset CommandInset label
LatexCommand label
name "sec:Temperature-Initial-Conditions"

\end_inset


\end_layout

\begin_layout Standard
For temperature dependent problems, you need to set initial conditions for
 the temperature.
 Because we are ignoring inertial effects, the interior velocity is completely
 determined by the boundary conditions.
 Setting initial conditions is similar to setting boundary conditions.
 The only difference is to change the condition type from 
\family typewriter
WallVC
\family default
 to 
\family typewriter
AllNodesVC
\family default
.
 As an example, to set the initial temperature everywhere to 1, you would
 add
\end_layout

\begin_layout LyX-Code
<struct name="temperatureICs">
\end_layout

\begin_layout LyX-Code
  <param name="type">CompositeVC</param>
\end_layout

\begin_layout LyX-Code
  <list name="vcList">
\end_layout

\begin_layout LyX-Code
    <struct>
\end_layout

\begin_layout LyX-Code
      <param name="type">AllNodesVC</param>
\end_layout

\begin_layout LyX-Code
      <param name="wall">bottom</param>
\end_layout

\begin_layout LyX-Code
      <list name="variables">
\end_layout

\begin_layout LyX-Code
        <struct>
\end_layout

\begin_layout LyX-Code
          <param name="name">temperature</param>
\end_layout

\begin_layout LyX-Code
          <param name="type">double</param>
\end_layout

\begin_layout LyX-Code
          <param name="value">1.0</param>
\end_layout

\begin_layout LyX-Code
        </struct>
\end_layout

\begin_layout LyX-Code
      </list>
\end_layout

\begin_layout LyX-Code
    </struct> 
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:HydrostaticTerm"

\end_inset

HydrostaticTerm
\end_layout

\begin_layout Standard
This term subtracts out the hydrostatic part of the pressure as described
 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Hydrostatic-Pressure"

\end_inset

.
 It can subtract out the pressure from a two layer model with a temperature
 profile described by 
\family typewriter
the TemperatureProfile
\family default
 standard condition function (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Standard-Condition-Functions"

\end_inset

).
 Specifically, it subtracts out a density given by
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\begin{array}{cc}
0 & x>height\\
upperDensity\cdot\left(1-upperAlpha\cdot T\right) & materialBoundary>x>height\\
lowerDensity\cdot\left(1-lowerAlpha\cdot T\right) & x>materialBoundary\end{array},\]

\end_inset

 where
\end_layout

\begin_layout Standard
\align left
\begin_inset Formula \[
T=\left\{ \begin{array}{cc}
T\_0 & x>height\\
T\_0+linearCoefficient\left(height-x\right) & x<height\\
+exponentialCoefficient1\left(1-\exp\left(-exponentialCoefficient2\left(height-x\right)\right)\right)\end{array}\right..\]

\end_inset

 This component also computes a pressure by integrating this density profile
 analytically and multiplying by 
\begin_inset Formula $gravity.$
\end_inset

 Once you have created a 
\family typewriter
HydrostaticTerm
\family default
, you have to remember to pass it along to 
\family typewriter
BuoyancyForceTerm
\family default
 (Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:BouyancyForceTerm"

\end_inset

) and a 
\family typewriter
StressBC
\family default
 (Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Stress-Boundary-Conditions"

\end_inset

) in order for it to take effect.
 You also have to pass it to any 
\family typewriter
DruckerPrager
\family default
 rheologies (Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:DruckerPrager"

\end_inset

) that you are using, so that the rheology will have the correct pressure.
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
upperDensity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
upperAlpha
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lowerDensity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lowerAlpha
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
height
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
materialBoundary
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
T_0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
linearCoefficient
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
exponentialCoefficient1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
exponentialCoefficient2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
gravity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Buoyancy Forces
\begin_inset CommandInset label
LatexCommand label
name "sec:Buoyancy-Forces"

\end_inset


\end_layout

\begin_layout Standard
Gales supports two types of buoyancy forces.
 The first one, 
\family typewriter
BuoyancyForceTerm
\family default
, is more general, allowing you to specify buoyancy properties for each
 material.
 
\end_layout

\begin_layout Subsection
BouyancyForceTerm
\begin_inset CommandInset label
LatexCommand label
name "sub:BouyancyForceTerm"

\end_inset


\end_layout

\begin_layout Standard
If you add this component, then there will be a force on each particle of
\end_layout

\begin_layout Standard
\begin_inset Formula \[
F=-\rho g.\]

\end_inset

If you specify a 
\family typewriter
TemperatureField
\family default
, then the force becomes 
\end_layout

\begin_layout Standard
\begin_inset Formula \[
F=-\rho g\left(1-\alpha T\right).\]

\end_inset

 The density (
\begin_inset Formula $\rho$
\end_inset

) and coefficient of thermal expansivity (
\begin_inset Formula $\alpha$
\end_inset

) are taken from the material properties (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Materials"

\end_inset

).
 The vector 
\family typewriter
gravityDirection
\family default
 determines the direction of the force.
 In the sample input files, 
\family typewriter
ForceVector
\family default
 is always 
\family typewriter
mom_force
\family default
, and 
\family typewriter
Swarm
\family default
 is always 
\family typewriter
picIntegrationPoints
\family default
.
\end_layout

\begin_layout Standard
If you have defined a 
\family typewriter
HydrostaticTerm
\family default
 (Section ), then you need to pass it in to the 
\family typewriter
BuoyancyForceTerm
\family default
 for it to take effect.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
gravity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
gravityDirection
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(0,1,0)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TemperatureField
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ForceVector
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Swarm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
HydrostaticTerm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
BuoyancyForceTermThermoChem
\begin_inset CommandInset label
LatexCommand label
name "sub:BuoyancyForceTermThermoChem"

\end_inset


\end_layout

\begin_layout Standard
If you add this component, then there will be a vertical force on each particle
 of
\end_layout

\begin_layout Standard
\begin_inset Formula \[
F=-\rho Ra_{C}.\]

\end_inset

If you specify a 
\family typewriter
TemperatureField
\family default
, then the force becomes 
\end_layout

\begin_layout Standard
\begin_inset Formula \[
F=Ra_{T}T-\rho Ra_{C}.\]

\end_inset

 The thermal (
\begin_inset Formula $Ra_{T}$
\end_inset

) and chemical (
\begin_inset Formula $Ra_{C}$
\end_inset

) Rayleigh numbers are the same for all materials.
 In contrast to 
\family typewriter
BuoyanceForceTerm
\family default
, the force is always in the vertical (y) direction.
 In the sample input files, 
\family typewriter
ForceVector
\family default
 is always 
\family typewriter
mom_force
\family default
, and 
\family typewriter
Swarm
\family default
 is always 
\family typewriter
picIntegrationPoints
\family default
.
\end_layout

\begin_layout Standard
Note that this component does not take a 
\family typewriter
HydrostaticTerm
\family default
, so you can not use this component if you are using 
\family typewriter
HydrostaticTerm
\family default
.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RaC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RaT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TemperatureField
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ForceVector
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Swarm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Divergence Forces
\begin_inset CommandInset label
LatexCommand label
name "sec:Divergence-Forces-Input"

\end_inset


\end_layout

\begin_layout Standard
As mentioned in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Divergence-Forces"

\end_inset

, it is possible to add a divergence force to the continuity equation so
 that material is created anew.
 The first three parameters will always be the same between input files.
\end_layout

\begin_layout Description
ForceVector cont_force
\end_layout

\begin_layout Description
Swarm picIntegrationPoints
\end_layout

\begin_layout Description
GeometryMesh mesh-linear
\end_layout

\begin_layout Standard
The last three parameters specify the divergence.
\end_layout

\begin_layout Description
DomainShape The divergence is only non-zero outside of this shape.
\end_layout

\begin_layout Description
force_type This can be either ``double'' or ``func.'' If set to ``double,''
 then the divergence force will be a constant.
 If set to ``func,'' then the divergence force can be any of the Standard
 Condition Functions (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Standard-Condition-Functions"

\end_inset

).
\end_layout

\begin_layout Description
force_value If ``force_type'' is ``double,'' then this must be a number.
 If ``force_type'' is ``func,'' then it must be the textual name of one
 of the Standard Condition Functions (e.g., StepFunction).
\end_layout

\begin_layout Section
Deformed Upper Boundary
\begin_inset CommandInset label
LatexCommand label
name "sec:Deformed-Upper-Boundary"

\end_inset


\end_layout

\begin_layout Standard
Normally, Gale starts the simulation in a rectangular box.
 As the simulation proceeds, the boundaries can become distorted, in particular
 the upper boundary.
 However, you can also configure Gale to start with an initially deformed
 upper boundary by adding a 
\family typewriter
SurfaceAdaptor
\family default
 component.
 A simple example is to make the surface a sinusoid
\end_layout

\begin_layout LyX-Code
<struct name="surfaceAdaptor">
\end_layout

\begin_layout LyX-Code
  <param name="Type">SurfaceAdaptor</param>
\end_layout

\begin_layout LyX-Code
  <param name="mesh">mesh-linear</param>
\end_layout

\begin_layout LyX-Code
  <param name="sourceGenerator">cartesianGenerator</param>
\end_layout

\begin_layout LyX-Code
  <param name="surfaceType">cosine</param>
\end_layout

\begin_layout LyX-Code
  <list name="origin">
\end_layout

\begin_layout LyX-Code
    <param>0.0</param>
\end_layout

\begin_layout LyX-Code
  </list>
\end_layout

\begin_layout LyX-Code
  <param name="amplitude">0.1</param>
\end_layout

\begin_layout LyX-Code
  <param name="frequency">6.28318530718</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Standard
This sets the height of the surface to
\end_layout

\begin_layout Standard
\begin_inset Formula \[
h=h_{0}+amplitude*\cos\left(x*frequency\right),\]

\end_inset

 where 
\begin_inset Formula $h_{0}$
\end_inset

 is the original height.
\end_layout

\begin_layout Standard
The other supported functions are 
\family typewriter
sine
\family default
 and 
\family typewriter
wedge
\family default
.
 Function 
\family typewriter
sine
\family default
 takes the same arguments as the 
\family typewriter
cosine
\family default
 example above.
 Function 
\family typewriter
wedge
\family default
 takes two arguments, 
\family typewriter
offset
\family default
 and 
\family typewriter
gradient
\family default
, and sets the height to
\end_layout

\begin_layout Standard
\begin_inset Formula \[
h=\left\{ \begin{array}{cc}
h_{0} & x<offset\\
h_{0}+gradient\left(x-offset\right) & x>offset\end{array}\right..\]

\end_inset

 If you want to implement your own surface functions, look in
\end_layout

\begin_layout LyX-Code

\family typewriter
src/StGermain/Discretisation/Mesh/src/SurfaceAdaptor.c
\end_layout

\begin_layout Section
Standard Condition Functions
\begin_inset CommandInset label
LatexCommand label
name "sec:Standard-Condition-Functions"

\end_inset


\end_layout

\begin_layout Standard
Standard Condition Functions are functions that you can use to specify initial
 conditions and boundary conditions.
 At present, they take in a coordinate 
\begin_inset Formula $(x,y,z)$
\end_inset

 and output a function 
\begin_inset Formula $f(x,y,z)$
\end_inset

.
 They are all defined in the directory 
\family typewriter
src/StgFEM/plugins/StandardConditionFunctions/
\family default
.
 For the following descriptions, the sides of the box are at 
\begin_inset Formula $x_{min}$
\end_inset

 and 
\begin_inset Formula $x_{max}$
\end_inset

, and 
\begin_inset Formula $L\equiv x_{max}-x_{min}$
\end_inset

, and all names with CamelCase capitalization are variables from the input
 file.
 If you need to write your own function, see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Standard-Condition-Functions-modify"

\end_inset

.
\end_layout

\begin_layout Description
Velocity_SolidBodyRotation Returns the coordinates rotated by 
\family typewriter
SolidBodyRotationOmega
\family default
 around the 
\begin_inset Formula $z$
\end_inset

 axis, centered at the coordinate (
\family typewriter
SolidBodyRotationCentreX
\family default
, 
\family typewriter
SolidBodyRotationY
\family default
), out to a radius 
\family typewriter
RadiusCylinder
\family default
.
 Specifically, if 
\begin_inset Formula $r<RadiusCylinder$
\end_inset


\begin_inset Formula \[
\begin{array}{ccc}
f(x,y,z)_{x} & = & -SolidBodyRotationOmega(y-SolidBodyRotationCentreY)\\
f(x,y,z)_{y} & = & SolidBodyRotationOmega(x-SolidBodyRotationCentreX)\end{array},\]

\end_inset

 otherwise returns 0.
\end_layout

\begin_layout Description
Velocity_PartialRotationX Returns the 
\emph on

\begin_inset Formula $x$
\end_inset


\emph default
 component of Velocity_SolidBodyRotation.
\end_layout

\begin_layout Description
Velocity_PartialRotationY Returns the 
\begin_inset Formula $y$
\end_inset

 component of Velocity_SolidBodyRotation.
\end_layout

\begin_layout Description
TaperedRotationX If 
\begin_inset Formula $r<RadiusCylinder$
\end_inset

, returns Velocity_PartialRotationX.
 If 
\begin_inset Formula $RadiusCylinder<r<TaperedRadius$
\end_inset

, returns
\begin_inset Formula \[
VelocityPartialRotationX\left(\frac{TaperedRadius-r}{TaperedRadius-RadiusCylinder}\right).\]

\end_inset

 If 
\begin_inset Formula $r>TaperedRadius$
\end_inset

, returns 0.
\end_layout

\begin_layout Description
TaperedRotationY Similar to TaperedRotationX, but returns Velocity_PartialRotati
onY.
\end_layout

\begin_layout Description
Velocity_SimpleShear 
\begin_inset Formula $f(x,y,z)=SimpleShearFactor\left(y-SimpleShearCentreY\right)$
\end_inset


\end_layout

\begin_layout Description
Velocity_Extension 
\begin_inset Formula $f(x,y,z)=ExtensionFactor\left(x-ExtensionCentreX\right)$
\end_inset


\end_layout

\begin_layout Description
Velocity_PartialLid_TopLayer Returns 0 if the 
\begin_inset Formula $x$
\end_inset

 coordinate is within one grid point of the boundary; 1 otherwise.
\end_layout

\begin_layout Description
Velocity_LinearInterpolationLid 
\begin_inset Formula \[
f(x,y,z)=bcLeftHandSideValue+\left(\frac{bcRightHandSideValue-bcLeftHandSideValue}{L}\right)x\]

\end_inset


\end_layout

\begin_layout Description
Velocity_Lid_RampWithCentralMax 
\begin_inset Formula $f(x,y,z)=\left\{ \begin{array}{cc}
2\left(x-x_{min}\right)/L & x<L/2+x_{min}\\
1-2(x-x_{min}-L/2) & x>L/2+x_{min}\end{array}\right.$
\end_inset


\end_layout

\begin_layout Description
Velocity_SinusoidalLid 
\begin_inset Formula \[
f(x,y,z)=\sin\left(\frac{\pi\left(x-x_{min}\right)}{L}sinusoidalLidWavenumber\right)\]

\end_inset


\end_layout

\begin_layout Description
Velocity_Lid_CornerOnly Returns 1 if the coordinate is on the right boundary.
\end_layout

\begin_layout Description
Temperature_CosineHill Returns a hill defined by a cosine.
 Specifically, if we define pre-rotated coordinates
\begin_inset Formula \[
\begin{array}{ccc}
x_{pre-rotate} & = & CosineHillCentreX-SolidBodyRotationCentreX\\
y_{pre-rotate} & = & CosineHillCentreY-SolidBodyRotationCentreY\\
z_{pre-rotate} & = & CosineHillCentreZ-SolidBodyRotationCentreZ\end{array},\]

\end_inset

 and then rotate them around the 
\begin_inset Formula $z$
\end_inset

 axis by the angle 
\begin_inset Formula $\theta=SolidBodyRotationOmega*t$
\end_inset


\begin_inset Formula \[
\begin{array}{ccc}
x_{hill} & = & x_{pre-rotate}\cos\theta-y_{pre-rotate}\sin\theta\\
y_{hill} & = & x_{pre-rotate}\sin\theta+y_{pre-rotate}\cos\theta\\
z_{hill} & = & z_{pre-rotate}\end{array},\]

\end_inset

 then
\begin_inset Formula \[
f(x,y,z)=\left\{ \begin{array}{cc}
\frac{CosineHillHeight}{4}\cos\left(\frac{2\pi r}{CosineHillDiameter}\right) & r<CosineHillDiameter\\
0 & r>CosineHillDiameter\end{array}\right.,\]

\end_inset

 where 
\begin_inset Formula $r$
\end_inset

 is the distance from the center of the hill
\begin_inset Formula \[
r\equiv\sqrt{\left(x-x_{hill}\right)^{2}+\left(y-y_{hill}\right)^{2}+\left(z-z_{hill}\right)^{2}}.\]

\end_inset


\end_layout

\begin_layout Description
LinearWithSinusoidalPerturbation If you scale the 
\begin_inset Formula $y$
\end_inset

 coordinate
\begin_inset Formula \[
y_{scaled}=\left(y-y_{min}\right)/\left(y_{max}-y_{min}\right),\]

\end_inset

 then this returns 
\begin_inset Formula \[
\begin{array}{ccc}
f(x,y,z) & = & SinusoidalTempIC\_TopLayerBC\\
 &  & +\left(SinusoidalTempIC\_TopLayerBC-SinusoidalTempIC\_TopLayerBC\right)\left(1-y_{scaled}\right)\\
 &  & +SinusoidalTempIC\_PerturbationAmplitude\\
 &  & *\left(\cos\left(\pi x*SinusoidalTempIC\_HorizontalWaveNumber\right)\right.\\
 &  & +\left.sin\left(\pi ySinusoidalTempIC\_VerticalWaveNumber\right)\right)\end{array}.\]

\end_inset


\end_layout

\begin_layout Description
Temperature_Trigonometry 
\begin_inset Formula \[
f(x,y,z)=1-\frac{\pi y}{2}\sin\left(\frac{\pi x}{x_{max}-x_{min}}\right).\]

\end_inset


\end_layout

\begin_layout Description
VelicTemperatureIC 
\begin_inset Formula \[
f(x,y,z)=sigma*\cos\left(\pi wavenumberX\left(\frac{x-x_{min}}{x_{max}-x_{min}}\right)\right)\sin\left(\pi\left(y-y_{min}\right)wavenumberY\right),\]

\end_inset

where the height of the box is constrained to 
\begin_inset Formula $y_{max}-y_{min}=1$
\end_inset

.
\end_layout

\begin_layout Description
VelicTemperatureIC_SolB 
\begin_inset Formula \[
f(x,y,z)=sigma*\cos\left(\pi wavenumberX\left(\frac{x-x_{min}}{x_{max}-x_{min}}\right)\right)\sinh\left(\pi wavenumberY\left(\frac{y-y_{min}}{x-x_{min}}\right)\right),\]

\end_inset

where the height of the box is constrained to 
\begin_inset Formula $y_{max}-y_{min}=1$
\end_inset

.
\end_layout

\begin_layout Description
AnalyticalTemperatureIC First, define 
\begin_inset Formula \[
\begin{array}{ccc}
x_{0} & \equiv & x-x_{min}\\
y_{0} & \equiv & y-y_{min}\\
L & \equiv & x_{max}-x_{min}\\
H & \equiv & y_{max}-y_{min}\\
\lambda & \equiv & L/H\end{array},\]

\end_inset

and then compute some intermediate quantities
\begin_inset Formula \[
\begin{array}{ccc}
u_{0} & = & \frac{\lambda^{7/3}}{\left(1+\lambda^{4}\right)^{2/3}}\left(\frac{Ra}{2\sqrt{pi}}\right)^{2/3}\\
v_{0} & = & u_{0}/\lambda\\
Q & = & 2\sqrt{\lambda/\left(\pi u_{0}\right)}\\
T_{u} & = & \frac{1}{2}erf(\left(\frac{1}{2}\left(1-y_{0}\right)\sqrt{u_{0}/x_{0}}\right)\\
T_{l} & = & 1-\frac{1}{2}erf\left(\frac{1}{2}y_{0}\sqrt{u_{0}/\left(\lambda-x_{0}\right)}\right)\\
T_{r} & = & \frac{1}{2}+\frac{1}{2}\left(Q/\sqrt{\pi}\right)\sqrt{v_{0}/\left(y_{0}+1\right)}\exp\left(-x_{0}^{2}v_{0}/\left(4y_{0}+4\right)\right)\\
T_{s} & = & \frac{1}{2}-\frac{1}{2}\left(Q/\sqrt{\pi}\right)\sqrt{v_{0}/\left(2-y_{0}\right)}\exp\left(-\left(\lambda-x_{0}\right)^{2}v_{0}/\left(8-4y_{0}\right)\right)\\
g & = & T_{u}+T_{l}+T_{r}+T_{s}-1.5\end{array}.\]

\end_inset

 The result is 
\begin_inset Formula \[
f(x,y,z)=\left\{ \begin{array}{cc}
0 & g<0\\
g & 0<g<1\\
1 & g>1\end{array}\right..\]

\end_inset


\end_layout

\begin_layout Description
SinusoidalExtension 
\begin_inset Formula \[
\begin{array}{ccc}
f(x,y,z) & = & SinusoidalExtensionVelocity+SinusoidalExtensionAmplitude\\
 &  & *\cos\left(2\pi SinusoidalExtensionFrequency\left(t+dt-SinusoidalExtensionPhaseShift\right)\right)\end{array}\]

\end_inset


\end_layout

\begin_layout Description
StepFunction This function returns a ramp function in the axis prescribed
 by the integer 
\begin_inset Formula $StepFunctionDim$
\end_inset

, where 
\begin_inset Formula $0\Rightarrow x$
\end_inset

, 
\begin_inset Formula $1\Rightarrow y$
\end_inset

, 
\begin_inset Formula $2\Rightarrow z$
\end_inset

.
 Defining some convenient constants 
\begin_inset Formula \[
\begin{array}{ccc}
w & = & coord[dim]\\
w_{-} & = & StepFunctionLowerOffset\\
w_{+} & = & StepFunctionUpperOffset\\
V_{-} & = & StepFunctionLowerValue\\
V_{+} & = & StepFunctionUpperValue\end{array},\]

\end_inset

 if 
\begin_inset Formula $StepFunctionLessThan$
\end_inset

 is 
\family typewriter
True
\family default
, then 
\begin_inset Formula \[
f(x,y,z)=\left\{ \begin{array}{cc}
V_{-} & w<w_{-}\\
V_{-}+\left(V_{+}-V_{-}\right)\left(\frac{w-w_{-}}{w_{+}-w_{-}}\right) & w_{-}<w<w_{+}\\
V_{+} & w_{+}<w\end{array}\right.,\]

\end_inset

 otherwise it is reversed
\begin_inset Formula \[
f(x,y,z)=\left\{ \begin{array}{cc}
V_{+} & w<w_{-}\\
V_{-}+\left(V_{+}-V_{-}\right)\left(\frac{w_{+}-w}{w_{+}-w_{-}}\right) & w_{-}<w<w_{+}\\
V_{-} & w_{+}<w\end{array}\right.,\]

\end_inset


\end_layout

\begin_layout Description
StepFunctionProduct1 Using a similar scheme as StepFunction to specify the
 dimension with 
\begin_inset Newline newline
\end_inset


\begin_inset Formula $StepFunctionProduct1Dim$
\end_inset

, 
\begin_inset Formula \[
f(x,y,z)=\left\{ \begin{array}{cc}
0 & w<StepFunctionProduct1Start\\
StepFunctionProduct1Value & StepFunctionProduct1Start<w<StepFunctionProduct1End\\
0 & w>StepFunctionProduct1End\end{array}\right.\]

\end_inset


\end_layout

\begin_layout Description
StepFunctionProduct2 
\end_layout

\begin_layout Description
StepFunctionProduct3
\end_layout

\begin_layout Description
StepFunctionProduct4 These are the same as StepFunctionProduct1 except that
 they use different variables (e.g., 
\begin_inset Formula $StepFunctionProduct2Dim$
\end_inset

 instead of 
\begin_inset Formula $StepFunctionProduct1Dim$
\end_inset

).
\end_layout

\begin_layout Description
Gaussian 
\begin_inset Formula \[
f(x,y,z)=\left(GaussianHeight\right)\exp\left[-\left(\frac{GaussianCenter-coord[dim]}{GaussianWidth}\right)^{2}\right]\]

\end_inset


\end_layout

\begin_layout Description
TemperatureProfile 
\begin_inset Formula \[
f(x,y,z)=\left\{ \begin{array}{cc}
T_{0} & y>maxY\\
T_{0}+A\left(maxY-y\right)+B\left(1-\exp\left(-C\left(maxY-y\right)\right)\right) & y<maxY,H_{0}<0\\
\min\left(T_{m},T_{0}+\frac{\left(T_{m}-T_{0}\right)}{H}\left(maxY-y\right)+B\left(1-\exp\left(-C\left(maxY-y\right)\right)\right)\right) & y<maxY,H_{0}>0\end{array}\right.,\]

\end_inset

 where 
\begin_inset Formula \[
H=\min\left(H_{m},H_{o}+2dH\left|x-x_{c}\right|/\left(maxX-minX\right)\right),\]

\end_inset

 and 
\begin_inset Formula \begin{eqnarray*}
T_{0} & \equiv & TemperatureProfileTop,\\
A & \equiv & TemperatureLinearCoefficient,\\
B & \equiv & TemperatureExponentialCoefficient1,\\
C & \equiv & TemperatureExponentialCoefficient2,\\
T_{m} & \equiv & TemperatureProfileMax,\\
H_{0} & \equiv & TemperatureProfileH0,\\
H_{m} & \equiv & TemperatureProfileHm,\\
dH & \equiv & TemperatureProfiledH,\\
x_{c} & \equiv & ExtensionCentreX.\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Section
Verbosity Options
\end_layout

\begin_layout Standard
By default, Gale prints out very little when running.
 To get more information, insert
\end_layout

\begin_layout LyX-Code
<param name="journal.info">True</param>
\end_layout

\begin_layout LyX-Code
<param name="journal.debug">True</param>
\end_layout

\begin_layout LyX-Code
<param name="journal-level.info">2</param>
\end_layout

\begin_layout LyX-Code
<param name="journal-level.debug">2</param>
\end_layout

\begin_layout Standard
into the variables section (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Variables"

\end_inset

).
 This will print out more information than you need about the components,
 the solvers, and the number of iterations.
 In addition, you can get even more information about the solvers from PETSc
 by appending 
\begin_inset Quotes sld
\end_inset


\family typewriter
-ksp_monitor
\family default

\begin_inset Quotes srd
\end_inset

 to the command line.
\end_layout

\begin_layout Chapter
Output File Format
\begin_inset CommandInset label
LatexCommand label
name "cha:Output-File-Format"

\end_inset


\end_layout

\begin_layout Standard
Gale outputs two types of files: VTK files for data analysis and visualization,
 and checkpointing files for restarting a run.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:.vtk-Files-(Visualization)"

\end_inset

VTK Files: 
\family typewriter
.vts, .pvts, .vtu, and .pvtu
\family default
 (Visualization)
\end_layout

\begin_layout Standard
These files are output by the 
\family typewriter
Underworld_VTKOutput
\family default
 plugin.
 The 
\family typewriter
.vts
\family default
 and 
\family typewriter
.pvts
\family default
 files contain information about quantities on the grid, and the 
\family typewriter
.vtu
\family default
 and 
\family typewriter
.pvtu
\family default
 contain information about quantities on the particles.
 Every processor outputs its own 
\family typewriter
.vts
\family default
 and 
\family typewriter
.vtu 
\family default
file, and the 
\family typewriter
.pvts
\family default
 and 
\family typewriter
.pvtu
\family default
 are small files that have information on how to stitch them all together.
 Ordinarily, you would only open the 
\family typewriter
.pvts
\family default
 and 
\family typewriter
.pvtu
\family default
 files.
 These files are in a format understood by a wide variety of visualization
 programs, such as ParaView 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

paraview.org
\end_layout

\end_inset

 (recommended) or MayaVi 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

mayavi.sf.net
\end_layout

\end_inset

.
 VisIt 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

www.llnl.gov/visit
\end_layout

\end_inset

 can understand the raw 
\family typewriter
.vts
\family default
 and 
\family typewriter
.vtu
\family default
 files, but not the 
\family typewriter
.pvtu
\family default
 and 
\family typewriter
.pvts
\family default
 files.
 So VisIt is mostly useful for visualizing serial runs.
\end_layout

\begin_layout Standard
The 
\family typewriter
Underworld_VTKOutput
\family default
 plugin is activated by adding the lines
\end_layout

\begin_layout LyX-Code
<struct>
\end_layout

\begin_layout LyX-Code
  <param name="Type">Underworld_VTKOutput</param>
\end_layout

\begin_layout LyX-Code
  <param name="Context">context</param>
\end_layout

\begin_layout LyX-Code
</struct>
\end_layout

\begin_layout Standard
to the list of plugins.
 This line is already in the example input files.
\end_layout

\begin_layout Standard
The particle files can get quite large.
 Many times, you do not need to see every single particle.
 You can configure Gale to only output every Nth particle by setting 
\family typewriter
particleStepping
\family default
 to N.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Defaults
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
particleStepping
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Checkpoint Files"

\end_inset


\family typewriter
Checkpoint
\family default
 Files: .h5 and .xmf
\end_layout

\begin_layout Standard
These files are mostly useful for checkpointing.
 They have the bare minimum needed to restart the run: velocity, pressure,
 mesh, and particles.
 If you want a derived quantity like strain rate, it is better to use the
 VTK files.
\end_layout

\begin_layout Chapter
Benchmarks
\end_layout

\begin_layout Standard
Gale has been tested against a number of different benchmarks.
 Each benchmark tests different parts of the code, although there is some
 overlap.
 Specifically, Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:test-coverage"

\end_inset

 summarizes which parts of the code are tested by which benchmark.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="13" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Code Functionality
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benchmark Section
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stokes solver in 2D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Circular-Inclusion"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Relaxation-of-Topography"

\end_inset

,  
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Geomod-2004"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stokes solver in 3D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Falling-Sphere"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interpolation of viscosities from particles to the mesh in 2D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Circular-Inclusion"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Relaxation-of-Topography"

\end_inset

,  
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Geomod-2004"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interpolation of viscosities from particles to the mesh in 3D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Falling-Sphere"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Time stepping
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Falling-Sphere"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Circular-Inclusion"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Relaxation-of-Topography"

\end_inset

,  
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Geomod-2004"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gravity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Falling-Sphere"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Relaxation-of-Topography"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Geomod-2004"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Internal constraints
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Falling-Sphere"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No-slip boundary conditions
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Falling-Sphere"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Geomod-2004"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Non-zero velocity boundary conditions
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Circular-Inclusion"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Geomod-2004"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Free slip boundary conditions
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Circular-Inclusion"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Relaxation-of-Topography"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Free surface
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Relaxation-of-Topography"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Geomod-2004"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Drucker Prager rheology in 2D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Geomod-2004"

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:test-coverage"

\end_inset

Summary of which parts of the code are tested by which benchmarks
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
With the exception of the GeoMod benchmarks (Sections 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Geomod-2004"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Geomod-2008"

\end_inset

), the benchmarks can be carried out to high precision (~1%).
 In particular, the error should follow the relation
\end_layout

\begin_layout Standard
\begin_inset Formula \[
error\propto h+O(h^{2}),\]

\end_inset

 where 
\begin_inset Formula $h$
\end_inset

 is the size of the element.
 This means that if we plot the error from three different resolutions (high,
 medium and low) and scale it by 
\begin_inset Formula $h$
\end_inset

, we should see that the high-resolution error is closer to the medium-resolutio
n error than the low-resolution error.
 In practice, this may be difficult to achieve because there are almost
 always other sources of error besides resolution.
 
\end_layout

\begin_layout Standard
Altogether, these benchmarks give us a high degree of confidence in the
 code.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Falling-Sphere"

\end_inset

Falling Sphere
\end_layout

\begin_layout Standard
This benchmark simulates a rigid sphere falling through a cylinder filled
 with a viscous medium as in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sphere-Cylinder"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/sphere_cylinder.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Sphere-Cylinder"

\end_inset

Schematic of a Sphere falling through a Cylinder
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The file
\end_layout

\begin_layout LyX-Code

\family typewriter
input/benchmarks/falling_sphere/README
\end_layout

\begin_layout Standard
has instructions on running this benchmark.
 In an infinitely large cylinder, the analytic solution for the drag on
 a sphere is
\end_layout

\begin_layout Standard
\begin_inset Formula \[
F=6\pi\eta ru,\]

\end_inset

 where 
\begin_inset Formula $\eta$
\end_inset

 is the viscosity of the medium, 
\begin_inset Formula $r$
\end_inset

 is the radius of the sphere, and 
\begin_inset Formula $u$
\end_inset

 is the velocity of the sphere.
 Conversely, the buoyancy force is
\end_layout

\begin_layout Standard
\begin_inset Formula \[
F=\frac{4}{3}\pi r^{3}g\delta\rho,\]

\end_inset

where 
\begin_inset Formula $g$
\end_inset

 is the gravitational constant and 
\begin_inset Formula $\delta\rho$
\end_inset

 is the density difference between the sphere and the medium.
 Balancing these two forces and solving for the velocity gives
\end_layout

\begin_layout Standard
\begin_inset Formula \[
u=\frac{2}{9}r^{2}g\delta\rho/\eta.\]

\end_inset


\end_layout

\begin_layout Standard
Setting 
\begin_inset Formula $g=1$
\end_inset

, 
\begin_inset Formula $r=1$
\end_inset

, 
\begin_inset Formula $\delta\rho=0.01$
\end_inset

, and 
\begin_inset Formula $\eta=1$
\end_inset

 gives a velocity of 
\end_layout

\begin_layout Standard
\begin_inset Formula \[
u=0.00222.\]

\end_inset


\end_layout

\begin_layout Standard
In our case, we simulate a rigid sphere with a high viscosity sphere.
 This allows some internal circulation within the sphere, and so the expression
 for the velocity becomes 
\begin_inset CommandInset citation
LatexCommand cite
key "Landau & Lifschitz"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula \[
u=\frac{1}{3}\frac{r^{2}g\delta\rho}{\eta}\frac{\eta+\eta'}{\eta+\frac{3}{2}\eta'},\]

\end_inset

where 
\begin_inset Formula $\eta'$
\end_inset

 is the viscosity of the sphere.
 For our case, the background medium's viscosity is 1 and the sphere's viscosity
 is 100, so the correction is about 1%.
 This turns out to be smaller than other effects for the cases we ran.
\end_layout

\begin_layout Standard
When the boundaries are not infinitely far away, we can expand the solution
 in terms of the ratio of the radius of the sphere (
\begin_inset Formula $r$
\end_inset

) to the radius of the cylinder (
\begin_inset Formula $R$
\end_inset

).
 One solution by Habermann 
\begin_inset CommandInset citation
LatexCommand cite
key "Stokes Sphere"

\end_inset

 gives a drag force of
\end_layout

\begin_layout Standard
\begin_inset Formula \[
F_{H}=6\pi\eta ru\frac{1-0.75857\cdot\left(\frac{r}{R}\right)^{5}}{1+f_{H}\left(\frac{r}{R}\right)},\]

\end_inset

 where
\end_layout

\begin_layout Standard
\begin_inset Formula \[
f_{H}\left(\frac{r}{R}\right)=-2.1050(r/R)+2.0865(r/R)^{3}-1.7068(r/R)^{5}+0.72603(r/R)^{6}.\]

\end_inset


\end_layout

\begin_layout Standard
For our case with 
\begin_inset Formula $r=1$
\end_inset

, 
\begin_inset Formula $R=4$
\end_inset

, this gives a velocity of
\end_layout

\begin_layout Standard
\begin_inset Formula \[
u=1.122747319\cdot10^{-3}.\]

\end_inset

 The walls reduce the speed by about a factor of two.
\end_layout

\begin_layout Standard
Another solution by Faxen 
\begin_inset CommandInset citation
LatexCommand cite
key "Stokes Sphere"

\end_inset

 gives a drag force of
\end_layout

\begin_layout Standard
\begin_inset Formula \[
F_{F}=6\pi\eta ru/\left(1+f_{F}(r/R)\right),\]

\end_inset

 where
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{eqnarray*}
f_{f}(r/R) & = & -2.10444(r/R)+2.08877(r/R)^{3}-0.94813(r/R)^{5}\\
 &  & -1.372(r/R)^{6}+3.87(r/R)^{8}-4.19(r/R)^{10}.\end{eqnarray*}

\end_inset

For our case, this gives a speed of 
\end_layout

\begin_layout Standard
\begin_inset Formula \[
u=1.12293603939\cdot10^{-3},\]

\end_inset

which agrees closely with the result from Habermann.
\end_layout

\begin_layout Standard
Another possible artifact is that we do not simulate an infinitely long
 cylinder.
 This turns out to be a small effect.
 We use a cylinder with a height of 8, and place the sphere halfway down.
 We did runs where the cylinder was twice as tall, and the results were
 essentially unchanged.
\end_layout

\begin_layout Standard
The errors in the computed velocity compared to the Faxen solution are plotted
 in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Error-in-velocity"

\end_inset

.
 These were done with resolutions of 8
\begin_inset Formula $\times$
\end_inset

16
\begin_inset Formula $\times$
\end_inset

8, 16
\begin_inset Formula $\times$
\end_inset

32
\begin_inset Formula $\times$
\end_inset

16, 32
\begin_inset Formula $\times$
\end_inset

64
\begin_inset Formula $\times$
\end_inset

32, and 64
\begin_inset Formula $\times$
\end_inset

128
\begin_inset Formula $\times$
\end_inset

64, corresponding to grid sizes (
\begin_inset Formula $h$
\end_inset

) of 0.5, 0.25, 0.125, and 0.0625.
 Because of the symmetries of the problem we only have to simulate a quarter
 of the domain.
 As we increase the resolution (decrease 
\begin_inset Formula $h$
\end_inset

), the error decreases.
 Since we are simulating a high viscosity sphere rather than a completely
 rigid sphere, the velocity inside the sphere is not uniform.
 The error bars indicate the variation in velocity across the sphere.
 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Sphere_Error.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Error-in-velocity"

\end_inset

Error in computed velocity vs.
 resolution
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Scaling the error with resolution gives Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Scaled-error-velocity"

\end_inset

.
 The error scales linearly with resolution, giving us confidence that we
 can accurately solve this problem.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Sphere_Scaled_Error.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Scaled-error-velocity"

\end_inset

As in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Error-in-velocity"

\end_inset

, but with the error scaled with 
\begin_inset Formula $h$
\end_inset

.
 So the higher resolution errors are multiplied by 2, 4, and 8.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Circular-Inclusion"

\end_inset

Circular Inclusion
\end_layout

\begin_layout Standard
Schmid and Podladchikov 
\begin_inset CommandInset citation
LatexCommand cite
key "Clast"

\end_inset

 derived a simple analytic solution for the pressure and velocity fields
 for a circular inclusion under simple shear as in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:inclusion-setup"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/inclusion_setup.eps
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:inclusion-setup"

\end_inset

Schematic for the circular inclusion benchmark
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The file 
\family typewriter
input/benchmarks/circular_inclusion/README
\family default
 has instructions on how to run this benchmark.
 
\end_layout

\begin_layout Standard
Because of the symmetry of the problem, we only have to solve over the top
 right quarter of the domain.
 For the velocity boundary conditions, the analytic solution is a bit complicate
d.
 So we used the simple relation
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{eqnarray*}
v_{x} & = & -\dot{\epsilon}y,\\
v_{y} & = & \dot{\epsilon}x,\end{eqnarray*}

\end_inset

 for the boundaries, where 
\begin_inset Formula $\dot{\epsilon}=1$
\end_inset

 is the magnitude of the shear and 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

 are the coordinates.
 This induces an error of order 
\begin_inset Formula $r_{i}^{2}/r^{2}$
\end_inset

, where 
\begin_inset Formula $r_{i}=0.1$
\end_inset

 is the radius of the inclusion, and 
\begin_inset Formula $r$
\end_inset

 is the radius.
 We have the boundaries at 80 times the radius of the inclusion, giving
 an error of about 0.01%, which is much smaller than the other errors we
 are looking at.
 Just to make sure, we did runs with the boundaries at 40 times the radius
 of the inclusion and got very similar results.
\end_layout

\begin_layout Standard
A characteristic of the analytic solution is that the pressure is zero inside
 the inclusion, while outside it follows the relation
\end_layout

\begin_layout Standard
\begin_inset Formula \[
p_{m}=4\dot{\epsilon}\frac{\mu_{m}\left(\mu_{i}-\mu_{m}\right)}{\mu_{i}+\mu_{m}}\frac{r_{i}^{2}}{r^{2}}\cos\left(2\theta\right),\]

\end_inset

where 
\begin_inset Formula $\mu_{i}=2$
\end_inset

 is the viscosity of the inclusion and 
\begin_inset Formula $\mu_{m}=1$
\end_inset

 is the viscosity of the background media.
 Many numerical codes that solve Stokes flow (Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:simple momentum conservation"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:continuity"

\end_inset

), including Gale, assume that pressure, velocity, and viscosity are continuous.
 The pressure discontinuity at the surface of the inclusion violates that
 assumption, so the error tends to concentrate near the surface of the inclusion.
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Pressure-inclusion"

\end_inset

 plots the error in the pressure along the line 
\begin_inset Formula $y=x/2$
\end_inset

 for different resolutions.
 Inside the inclusion near the surface, the pressure is consistently wrong.
 The pressure does not converge with higher resolution, giving us a clue
 that the numerical scheme is not completely accurate.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/inclusion_r8_p.png
	width 100col%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Pressure-inclusion"

\end_inset

Pressure along the line 
\begin_inset Formula $y=x/2$
\end_inset

 for resolutions of 128
\begin_inset Formula $\times$
\end_inset

128 (blue), 256
\begin_inset Formula $\times$
\end_inset

256 (red), and 512
\begin_inset Formula $\times$
\end_inset

512 (black).
 The inclusion has a radius 
\begin_inset Formula $r_{i}=0.1.$
\end_inset

 Note that the pressure should be zero inside the inclusion, but the numerical
 solutions consistently underestimate the pressure.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Outside the inclusion, the error is better behaved.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Pressure-Error"

\end_inset

 plots the error in the pressure along the line 
\begin_inset Formula $y=x/2$
\end_inset

 outside the inclusion for different resolutions.
 While there are still problems near the surface, away from the surface
 the solutions are quite good.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Scaled-pressure-error"

\end_inset

 plots the error scaled with resolution, and we can see that the error scales
 linearly with resolution.
 This gives us confidence that, at least away from the inclusion, the code
 is giving the right answer.
 This kind of result, where the solution is bad close to the surface, but
 good otherwise, is typical for numerical solutions of this problem 
\begin_inset CommandInset citation
LatexCommand cite
key "FD Stokes"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/inclusion_r8_p_error.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Pressure-Error"

\end_inset

Error in the pressure outside the inclusion along the line 
\begin_inset Formula $y=x/2$
\end_inset

 for resolutions of 128
\begin_inset Formula $\times$
\end_inset

128 (blue), 256
\begin_inset Formula $\times$
\end_inset

256 (red), and 512
\begin_inset Formula $\times$
\end_inset

512 (black).
 The inclusion has a radius 
\begin_inset Formula $r_{i}=0.1.$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/inclusion_r8_p_scaled_error.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Scaled-pressure-error"

\end_inset

As in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Pressure-Error"

\end_inset

, but with the error scaled with 
\begin_inset Formula $h$
\end_inset

.
 So the medium-resolution error is multiplied by 2 and the high-resolution
 error is multiplied by 4.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Relaxation-of-Topography"

\end_inset

Relaxation of Topography
\end_layout

\begin_layout Standard
Given an infinitely deep purely viscous medium with an infinitesimal initial
 sinusoidal height profile, the topography will decay exponentially with
 the timescale 
\begin_inset CommandInset citation
LatexCommand cite
key "Folds"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula \[
t_{r}=\frac{4\pi\eta}{gL},\]

\end_inset

 where 
\begin_inset Formula $\eta$
\end_inset

 is the viscosity, 
\begin_inset Formula $g$
\end_inset

 is the gravitational constant, and 
\begin_inset Formula $L$
\end_inset

 is the wavelength of the initial sinusoid.
 
\end_layout

\begin_layout Standard
In our case, we simulate a medium with finite depth and finite height.
 The internal fields decay exponentially with depth with a length scale
 of 
\begin_inset Formula $L/2\pi.$
\end_inset

 The error in the solution due to a finite height is of order 
\begin_inset Formula $\left(2\pi A/L\right)^{2},$
\end_inset

 where 
\begin_inset Formula $A$
\end_inset

 is the amplitude of the sinusoid.
 We use 
\begin_inset Formula $L=1$
\end_inset

 and 
\begin_inset Formula $A=0.01,$
\end_inset

 giving errors of order 0.2% and 0.4%.
\end_layout

\begin_layout Standard
The file 
\family typewriter
input/benchmarks/sinusoid/README
\family default
 explains how to run this benchmark.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Strain-topo"

\end_inset

 shows the results of a low-resolution run.
 Even this run is not particularly small (128
\begin_inset Formula $\times$
\end_inset

256), because we need fairly high resolution to be able to accurately resolve
 the small (1%) height difference.
 Also note that we use symmetry to only simulate half of the wavelength.
 
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Paraview_topography.png
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Strain-topo"

\end_inset

Strain rate and velocities for a sinusoidal topography relaxing under gravity
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Running the code with multiple resolutions and measuring the error in the
 height in the trough gives Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:topo-error"

\end_inset

.
 Scaling the error with resolution gives Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:scaled-topo-error"

\end_inset

.
 The error decreases linearly with increasing resolution, giving us confidence
 in our ability to accurately track topography.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/topo_error.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:topo-error"

\end_inset

Error in the height at the trough
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/topo_scaled_error.eps
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:scaled-topo-error"

\end_inset

As in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:topo-error"

\end_inset

, but with the error scaled with 
\begin_inset Formula $h$
\end_inset

.
 So the medium-resolution error is multiplied by 2 and the high-resolution
 error is multiplied by 4.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Divergence"

\end_inset

Divergence
\end_layout

\begin_layout Standard
This benchmark tests the implementation of the divergence term in equation
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:divergence"

\end_inset

.
 In 2D, a constant divergence is applied to a square domain, and the velocity
 on the corners is set to enforce a spreading from the center of the square.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Divergence_v_sri"

\end_inset

 shows the velocity and strain rate invariant for a numerical solution.
 For a constant divergence 
\begin_inset Formula $d$
\end_inset

, the analytic solution for this setup is
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\begin{array}{ccc}
v_{x} & = & x\cdot d/2\\
v_{y} & = & y\cdot d/2\end{array}.\]

\end_inset

 In 3D, the analytic solution is
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\begin{array}{ccc}
v_{x} & = & x\cdot d/3\\
v_{y} & = & y\cdot d/3\\
v_{z} & = & z\cdot d/3\end{array}.\]

\end_inset

 In both cases, the strain rate invariant equals 
\begin_inset Formula $\sqrt{d/2}$
\end_inset

.
 As shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Divergence_2D_error"

\end_inset

, the main source of error in 2D comes from inaccuracies in the solver.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Divergence_3D_error"

\end_inset

 paints a different picture in 3D, where the main source of error comes
 from having a finite number of particles.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/divergence_v.png
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Divergence_v_sri"

\end_inset

Velocity and Strain Rate Invariant solution for the 2D Divergence benchmark.
 The variation in the strain rate invariant is uniformly small.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/divergence_2D_error.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Divergence_2D_error"

\end_inset

Maximum error in the strain rate invariant for the 2D Divergence benchmark
 vs tolerance in the linear solver.
 The resolution is kept at 32
\begin_inset Formula $\times$
\end_inset

32, and the number of particles per cell is kept at 30.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/divergence_3D_error.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Divergence_3D_error"

\end_inset

Maximum error in the strain rate invariant for the 3D Divergence benchmark
 vs the number of particles in each cell.
 The resolution is kept at 16
\begin_inset Formula $\times$
\end_inset

16
\begin_inset Formula $\times$
\end_inset

16, and the tolerance in the linear solver is kept at 
\begin_inset Formula $10^{-7}$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Drucker-Prager
\end_layout

\begin_layout Subsection
Analytic Treatment
\end_layout

\begin_layout Standard
For the Drucker-Prager rheology in 2D, we can write the yielding relation
 as 
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\sigma_{ns}=\sigma_{nn}\tan\varphi+C,\]

\end_inset

 where 
\begin_inset Formula $\sigma_{ns}$
\end_inset

 is the shear stress perpendicular to the fault plane, 
\begin_inset Formula $\sigma_{nn}$
\end_inset

 is the shear stress parallel to the fault plane, 
\begin_inset Formula $\phi$
\end_inset

 is the internal angle of friction, and 
\begin_inset Formula $C$
\end_inset

 is the cohesion.
 Decomposing this into principal stresses 
\begin_inset Formula $\sigma_{I}$
\end_inset

, 
\begin_inset Formula $\sigma_{II}$
\end_inset

, and 
\begin_inset Formula $\sigma_{III}$
\end_inset

 gives
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\sin\left(2\Theta\right)\left(\sigma_{I}-\sigma_{III}\right)/2=\tan\varphi\left(\left(\sigma_{I}+\sigma_{III}\right)/2+\cos\left(2\Theta\right)\left(\sigma_{I}-\sigma_{III}\right)/2\right)+C,\]

\end_inset

 where 
\begin_inset Formula $\Theta$
\end_inset

 is the angle that the fault makes relative to the maximum shear stress.
 Assuming that the fault forms where the shear stress 
\begin_inset Formula $\sigma_{I}-\sigma_{III}$
\end_inset

 is a minimum, a little algebra gives us
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\Theta=\pm\left(\frac{\pi}{4}+\frac{\varphi}{2}\right).\]

\end_inset

 Using this, we can construct a simple plasticity experiment and make sure
 that Gale gives the correct faulting angle.
\end_layout

\begin_layout Subsection
Model Setup
\end_layout

\begin_layout Standard
We performed a shortening experiment as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Mohr-Coulomb-setup"

\end_inset

.
 We only solve the Stokes equation and look at the strain rate invariant
 to find incipient faults.
 We do not take any time steps, removing any confounding effects they may
 cause.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Mohr_Coulomb_setup.eps
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Mohr-Coulomb-setup"

\end_inset

The setup for the shortening experiment.
 The box is 1 unit on a side, and the low viscosity region has a radius
 of 0.01 (its size is exaggerated).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Numerical Results
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Mohr-Coulomb-sri"

\end_inset

 shows the results for three different resolutions for 
\begin_inset Formula $\varphi=45\textdegree$
\end_inset

.
 There is not much difference between the medium (256
\begin_inset Formula $\times$
\end_inset

256) and high (512
\begin_inset Formula $\times$
\end_inset

512) resolution results, suggesting that we have sufficient resolution.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Mohr-Coulomb-comparison"

\end_inset

 shows a plot of the numerical vs.
 analytic results for several different angles for medium resolution.
 This gives us confidence that, at least in compression in 2D, our Drucker-Prage
r implementation gives the correct results.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Mohr_coulomb_resolutions.png
	lyxscale 25
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Mohr-Coulomb-sri"

\end_inset

Strain rate invariant for the shortening experiment with 
\begin_inset Formula $\varphi=45\textdegree$
\end_inset

 with three different resolutions: 128
\begin_inset Formula $\times$
\end_inset

128, 256
\begin_inset Formula $\times$
\end_inset

256, and 512
\begin_inset Formula $\times$
\end_inset

512.
 Any differences between the medium and high resolution runs are swamped
 by uncertainties in determining the overall angle of faulting.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/mohr_coulomb_angles.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Mohr-Coulomb-comparison"

\end_inset

Numerical vs analytic results for fault angles as a function of internal
 angle of friction.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Geomod-2004"

\end_inset

Geomod 2004
\end_layout

\begin_layout Standard
Two benchmarks were created to validate numerical codes against analog sandbox
 experiments 
\begin_inset CommandInset citation
LatexCommand cite
key "Buiter et al Numerical Sandbox"

\end_inset

: one benchmark simulates extension, and the other simulates shortening.
 A number of investigators with different codes ran these benchmarks, giving
 us a good standard against which to compare.
\end_layout

\begin_layout Subsection
Extension
\end_layout

\begin_layout Standard
This benchmark simulates a sandbox being extended as in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Extension-model-setup"

\end_inset

.
 The right side and half of the bottom are translated to the right.
 This creates a velocity discontinuity at the center which is the initial
 seed for localization.
 Gale's implementation of this benchmark is in 
\family typewriter
input/benchmarks/extension.xml
\family default
.
\end_layout

\begin_layout Standard
Like half of the codes in the benchmark, boundary friction was not included.
 Rather, the material is held fixed to the bottom boundary, and the velocity
 discontinuity is smoothed over 0.2 cm.
 In addition, the exact background viscosity is not prescribed by the benchmark.
 We have used 
\begin_inset Formula $10^{12}Pa\cdot s$
\end_inset

, the same as used in the I2ELVIS calculations.
 This value is somewhere in the middle of the range of values used in the
 calculations for other codes.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Extension_setup.png
	lyxscale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Extension-model-setup"

\end_inset

Extension model setup.
 Reproduced, with permission, from Buiter et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Buiter et al Numerical Sandbox"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A comparison against the other codes is in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Comparison-extension"

\end_inset

.
 While it is difficult to perform exact comparisons, Gale produces similar
 fault patterns.
 It is interesting to note that this qualitative comparison holds true even
 though the code is not exactly convergent.
 For example, Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:extension-convergence"

\end_inset

 shows a run with varying resolution.
 Changing the resolution alters the details, but, after a certain minimum
 resolution, does not change the character of the solution.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Extension_comparision.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Comparison-extension"

\end_inset

Strain rate invariant for the numerical extension models after 5 cm of extension.
 The resolutions of the various models are: I2ELVIS: 400
\begin_inset Formula $\times$
\end_inset

75, LAPEX-2D: 301
\begin_inset Formula $\times$
\end_inset

71, Microfem: 201
\begin_inset Formula $\times$
\end_inset

61, SloMo: 401
\begin_inset Formula $\times$
\end_inset

71, Sopale: 401
\begin_inset Formula $\times$
\end_inset

71, Gale: 1024
\begin_inset Formula $\times$
\end_inset

128.
 Upper images reproduced, with permission, from Buiter et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Buiter et al Numerical Sandbox"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/extension_sensitivity.pdf
	lyxscale 50
	width 90col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:extension-convergence"

\end_inset

Strain rate invariant for the extension model after 5 cm of extension for
 four different resolutions: (a) 128x16, (b) 256x32, (c) 512x64, and (d)
 1024x128.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Shortening
\end_layout

\begin_layout Standard
This benchmark simulates a sandbox being shortened as in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Shortening-model-setup"

\end_inset

.
 The right side is moved to the left, creating a velocity discontinuity
 at the bottom right corner.
 Gale's implementation of this benchmark is in 
\family typewriter
input/benchmarks/shortening.xml
\family default
.
 
\end_layout

\begin_layout Standard
Like most of the codes in the benchmark, we applied diffusion (diffusion
 coefficient 
\begin_inset Formula $10^{-6}m^{2}\, s^{-1}$
\end_inset

) to the top surface to smooth steep slope angles.
 This lies within the range used in calculations by the other codes (LAPEX-2D:
 
\begin_inset Formula $10^{-6}m^{2}\, s^{-1}$
\end_inset

, Microfem: unspecified, Sopale: 
\begin_inset Formula $10^{-9}m^{2}\, s^{-1}$
\end_inset

).
 Again, the exact background viscosity is not prescribed by the benchmark,
 so we have used 
\begin_inset Formula $10^{12}Pa\cdot s$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Shortening_setup.png
	lyxscale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Shortening-model-setup"

\end_inset

Shortening model setup.
 Reproduced, with permission, from Buiter et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Buiter et al Numerical Sandbox"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
A comparison against the other codes' calculations at 14 cm of cumulative
 shortening is in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:shortening-compare"

\end_inset

.
 There is more variance among the different codes, so it is difficult to
 tell whether Gale's behavior agrees with the other codes.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:shortening-convergence"

\end_inset

 shows a run with a few different resolutions, and even there we see marked
 differences in behavior as we increase resolution.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Shortening_comparison.png
	lyxscale 50
	width 80col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:shortening-compare"

\end_inset

Strain rate invariant for the numerical shortening models after 14 cm of
 shortening.
 The resolutions of the various models are: I2ELVIS: 900
\begin_inset Formula $\times$
\end_inset

75, LAPEX-2D: 351
\begin_inset Formula $\times$
\end_inset

71, Microfem: 201
\begin_inset Formula $\times$
\end_inset

36, Sopale: 401
\begin_inset Formula $\times$
\end_inset

71, Gale: 512
\begin_inset Formula $\times$
\end_inset

128.
 The upper portion of the figure is reproduced, with permission, from Buiter
 et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Buiter et al Numerical Sandbox"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/shortening_sensitivity.pdf
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:shortening-convergence"

\end_inset

Strain rate invariant for the shortening model after 14 cm of shortening
 for three different resolutions: (a) 128
\begin_inset Formula $\times$
\end_inset

32, (b) 256
\begin_inset Formula $\times$
\end_inset

64, and (c) 512
\begin_inset Formula $\times$
\end_inset

128.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Geomod-2008"

\end_inset

Geomod 2008
\end_layout

\begin_layout Standard
Using the lessons learned from the Geomod 2004 benchmarks, new benchmarks
 were created that would make it easier to compare numerical experiments
 with each other and with analog experiments 
\begin_inset CommandInset citation
LatexCommand cite
key "Geomod 2008"

\end_inset

.
\end_layout

\begin_layout Subsection
Stable Wedge
\end_layout

\begin_layout Standard
This benchmark simulates a wall pushing a wedge as in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Wedge_setup"

\end_inset

.
 There is an analytic solution 
\color none

\begin_inset CommandInset citation
LatexCommand cite
key "Dahlen Wedge"

\end_inset

 which details what 
\color inherit
the friction on the bottom and sides should be to provide enough resistance
 so that the wedge does not collapse under its own weight, but not so much
 as to cause any internal deformation as it slides.
 The derivation of the solution assumes that the friction along the sides
 has no cohesion.
 So the force at the tip will go to zero as the thickness of the material
 goes to zero.
 However, analog experiments suggest a finite cohesion, so this benchmark
 specifies a boundary cohesion.
\end_layout

\begin_layout Standard
We modeled the wedge using a relatively low viscosity (
\begin_inset Formula $1Pa\cdot s$
\end_inset

) air layer on top.
 This low viscosity region does not, for the most part, affect the dynamics.
\end_layout

\begin_layout Standard
We modeled boundary friction by first fixing the sand to the boundary.
 We then modify the material properties in the element next to the boundary
 so that it provides the correct resistance.
 So in the bulk, the sand's internal angle of friction is 
\begin_inset Formula $36\textdegree$
\end_inset

 weakening to 
\begin_inset Formula $31\textdegree$
\end_inset

, while in the element at the boundary the internal angle of friction is
 
\begin_inset Formula $16\textdegree$
\end_inset

 weakening to 
\begin_inset Formula $14\textdegree$
\end_inset

.
 Similarly, in the bulk, the cohesion is 
\begin_inset Formula $10\, Pa$
\end_inset

, while at the boundary the cohesion is 
\begin_inset Formula $10\, Pa$
\end_inset

 weakening to 
\begin_inset Formula $0.01\, Pa$
\end_inset

.
 If we do not weaken the cohesion, when we try to model an unstable wedge
 by reducing the internal angle of friction, the wedge never collapses on
 itself.
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Stable_sri"

\end_inset

 shows the strain rate invariant after the wall has moved 4 cm, and Figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Stable_particles"

\end_inset

 shows the particles.
 The bulk translates with almost no deformation, although, as expected,
 the tip deforms.
 The odd structures at the tip are below the grid resolution.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Stable_unstable"

\end_inset

 shows a simulation when we reduce the boundary friction to 
\begin_inset Formula $1\textdegree$
\end_inset

.
 The wedge quickly becomes unstable and collapses.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Geomod2008_wedge_setup.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Wedge_setup"

\end_inset

Set up for the stable wedge benchmark.
 Image courtesy of Susanne Buiter.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Stable_wedge_sri.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Stable_sri"

\end_inset

Strain rate invariant for the stable wedge benchmark within the wedge.
 Outside the wedge, the strain rates are large because of the air's low
 viscosity.
 The resolution is 512x128, and the wedge has translated 4 cm.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Stable_wedge_particles.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Stable_particles"

\end_inset

Material particles for the stable wedge benchmark.
 The deformation at the tip is caused by a finite boundary cohesion, although
 the actual structure is not resolved.
 The resolution is 512x128, and the wedge has translated 4 cm.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Stable_wedge_unstable.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Stable_unstable"

\end_inset

Strain rate invariant and velocity arrows for the stable wedge benchmark,
 but with the boundary friction angle reduced to 
\begin_inset Formula $1\textdegree$
\end_inset

.
 Note that the strain rates are much higher than in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Stable_sri"

\end_inset

.
 The wedge collapses almost immediately.
 The resolution is 512x128, and the wedge has translated 0.17 cm.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Unstable Shortening
\end_layout

\begin_layout Standard
This benchmark simulates a wall pushing against a wall of sand as in Figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Unstable-setup"

\end_inset

.
 There are three layers of sand, with the middle layer being a little heavier
 and sticking a little more to the boundary.
 Otherwise it is identical.
 Figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:unstable_sri_128"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:unstable_sri_256"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:unstable_sri_512"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:unstable_particles_128"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:unstable_particles_256"

\end_inset

, and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:unstable_particles_512"

\end_inset

 show results at different times and different resolutions.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Geomod2008_unstable_setup.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Unstable-setup"

\end_inset

Set up for the unstable shortening benchmark.
 Image courtesy of Susanne Buiter.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Geomod2008_unstable_sri128x32.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:unstable_sri_128"

\end_inset

Strain rate invariant for the unstable shortening benchmark with a resolution
 of 128x32.
 The snapshots are taken at 0, 2.5, 5, 7.5, and 10 cm of shortening.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Geomod2008_unstable_sri256x64.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:unstable_sri_256"

\end_inset

Strain rate invariant for the unstable shortening benchmark with a resolution
 of 256x64.
 The snapshots are taken at 0, 2.5, 5, 7.5, and 10 cm of shortening.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Geomod2008_unstable_sri512x128.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:unstable_sri_512"

\end_inset

Strain rate invariant for the unstable shortening benchmark with a resolution
 of 512x128.
 The snapshots are taken at 0, 2.5, 5, 7.5, and 10 cm of shortening.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Geomod2008_unstable_particles128x32.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:unstable_particles_128"

\end_inset

Material particles for the unstable shortening benchmark with a resolution
 of 128x32.
 The snapshots are taken at 0, 2.5, 5, 7.5, and 10 cm of shortening.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Geomod2008_unstable_particles256x64.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:unstable_particles_256"

\end_inset

Material particles for the unstable shortening benchmark with a resolution
 of 256x64.
 The snapshots are taken at 0, 2.5, 5, 7.5, and 10 cm of shortening.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Geomod2008_unstable_particles512x128.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:unstable_particles_512"

\end_inset

Material particles for the unstable shortening benchmark with a resolution
 of 512x128.
 The snapshots are taken at 0, 2.5, 5, 7.5, and 10 cm of shortening.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Brittle Shortening
\end_layout

\begin_layout Standard
This benchmark is very similar to unstable shortening.
 The only difference is that part of the bottom is also moving along as
 shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Brittle_setup"

\end_inset

.
 This causes the deformation to start from inside the sand box, rather than
 along the walls.
 Figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:brittle_sri_128"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:brittle_sri_256"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:brittle_sri_512"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:brittle_particles_128"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:brittle_particles_256"

\end_inset

, and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:brittle_particles_512"

\end_inset

 show results at different times and different resolutions.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Geomod2008_brittle_setup.eps

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Brittle_setup"

\end_inset

Set up for the brittle shortening benchmark.
 Image courtesy of Susanne Buiter.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Geomod2008_brittle_sri128x32.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:brittle_sri_128"

\end_inset

Strain rate invariant for the brittle shortening benchmark with a resolution
 of 128x32.
 The snapshots are taken at 0, 2.5, 5, 7.5, and 10 cm of shortening.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Geomod2008_brittle_sri256x64.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:brittle_sri_256"

\end_inset

Strain rate invariant for the brittle shortening benchmark with a resolution
 of 256x64.
 The snapshots are taken at 0, 2.5, 5, 7.5, and 10 cm of shortening.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Geomod2008_brittle_sri512x128.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:brittle_sri_512"

\end_inset

Strain rate invariant for the brittle shortening benchmark with a resolution
 of 512x128.
 The snapshots are taken at 0, 2.5, 5, 7.5, and 10 cm of shortening.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Geomod2008_brittle_particles128x32.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:brittle_particles_128"

\end_inset

Material particles for the brittle shortening benchmark with a resolution
 of 128x32.
 The snapshots are taken at 0, 2.5, 5, 7.5, and 10 cm of shortening.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Geomod2008_brittle_particles256x64.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:brittle_particles_256"

\end_inset

Material particles for the brittle shortening benchmark with a resolution
 of 256x64.
 The snapshots are taken at 0, 2.5, 5, 7.5, and 10 cm of shortening.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Geomod2008_brittle_particles512x128.png
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:brittle_particles_512"

\end_inset

Material particles for the brittle shortening benchmark with a resolution
 of 512x128.
 The snapshots are taken at 0, 2.5, 5, 7.5, and 10 cm of shortening.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
License 
\end_layout

\begin_layout Standard

\series bold
GNU GENERAL PUBLIC LICENSE Version 2, June 1991.
 Copyright (C) 1989, 1991 Free Software Foundation, Inc.
 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
\series default
 
\begin_inset Newline newline
\end_inset


\series medium
Everyone is permitted to copy and distribute verbatim copies of this license
 document, but changing it is not allowed.
\end_layout

\begin_layout Section*
Preamble
\end_layout

\begin_layout Standard
The licenses for most software are designed to take away your freedom to
 share and change it.
 By contrast, the GNU General Public License is intended to guarantee your
 freedom to share and change free software -- to make sure the software
 is free for all its users.
 This General Public License applies to most of the Free Software Foundation's
 software and to any other program whose authors commit to using it.
 (Some other Free Software Foundation software is covered by the GNU Library
 General Public License instead.) You can apply it to your programs, too.
\end_layout

\begin_layout Standard
When we speak of free software, we are referring to freedom, not price.
 Our General Public Licenses are designed to make sure that you have the
 freedom to distribute copies of free software (and charge for this service
 if you wish), that you receive source code or can get it if you want it,
 that you can change the software or use pieces of it in new free programs;
 and that you know you can do these things.
\end_layout

\begin_layout Standard
To protect your rights, we need to make restrictions that forbid anyone
 to deny you these rights or to ask you to surrender the rights.
 These restrictions translate to certain responsibilities for you if you
 distribute copies of the software, or if you modify it.
\end_layout

\begin_layout Standard
For example, if you distribute copies of such a program, whether gratis
 or for a fee, you must give the recipients all the rights that you have.
 You must make sure that they, too, receive or can get the source code.
 And you must show them these terms so they know their rights.
\end_layout

\begin_layout Standard
We protect your rights with two steps:
\end_layout

\begin_layout Enumerate
Copyright the software, and 
\end_layout

\begin_layout Enumerate
Offer you this license which gives you legal permission to copy, distribute
 and/or modify the software.
\end_layout

\begin_layout Standard
Also, for each author's protection and ours, we want to make certain that
 everyone understands that there is no warranty for this free software.
 If the software is modified by someone else and passed on, we want its
 recipients to know that what they have is not the original, so that any
 problems introduced by others will not reflect on the original authors'
 reputations.
\end_layout

\begin_layout Standard
Finally, any free program is threatened constantly by software patents.
 We wish to avoid the danger that redistributors of a free program will
 individually obtain patent licenses, in effect making the program proprietary.
 To prevent this, we have made it clear that any patent must be licensed
 for everyone's free use or not licensed at all.
 
\end_layout

\begin_layout Standard
The precise terms and conditions for copying, distribution and modification
 follow.
\end_layout

\begin_layout Section*
GNU GENERAL PUBLIC LICENSE TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION
 AND MODIFICATION 
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{itemize}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
item[0.]
\end_layout

\end_inset

This License applies to any program or other work which contains a notice
 placed by the copyright holder saying it may be distributed under the terms
 of this General Public License.
 The "Program" below refers to any such program or work, and a "work based
 on the Program" means either the Program or any derivative work under copyright
 law: that is to say, a work containing the Program or a portion of it,
 either verbatim or with modifications and/or translated into another language.
 (Hereinafter, translation is included without limitation in the term "modificat
ion.") Each licensee is addressed as "you."
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Activities other than copying, distribution and modification are not covered
 by this License; they are outside its scope.
 The act of running the Program is not restricted, and the output from the
 Program is covered only if its contents constitute a work based on the
 Program (independent of having been made by running the Program).
 Whether that is true depends on what the Program does.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{itemize}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
You may copy and distribute verbatim copies of the Program's source code
 as you receive it, in any medium, provided that you conspicuously and appropria
tely publish on each copy an appropriate copyright notice and disclaimer
 of warranty; keep intact all the notices that refer to this License and
 to the absence of any warranty; and give any other recipients of the Program
 a copy of this License along with the Program.
 
\end_layout

\begin_deeper
\begin_layout Standard
You may charge a fee for the physical act of transferring a copy, and you
 may at your option offer warranty protection in exchange for a fee.
 
\end_layout

\end_deeper
\begin_layout Enumerate
You may modify your copy or copies of the Program or any portion of it,
 thus forming a work based on the Program, and copy and distribute such
 modifications or work under the terms of Section 1 above, provided that
 you also meet all of these conditions: 
\end_layout

\begin_deeper
\begin_layout Enumerate
You must cause the modified files to carry prominent notices stating that
 you changed the files and the date of any change.
 
\end_layout

\begin_layout Enumerate
You must cause any work that you distribute or publish, that in whole or
 in part contains or is derived from the Program or any part thereof, to
 be licensed as a whole at no charge to all third parties under the terms
 of this License.
 
\end_layout

\begin_layout Enumerate
If the modified program normally reads commands interactively when run,
 you must cause it, when started running for such interactive use in the
 most ordinary way, to print or display an announcement including an appropriate
 copyright notice and a notice that there is no warranty (or else, saying
 that you provide a warranty) and that users may redistribute the program
 under these conditions, and telling the user how to view a copy of this
 License.
 (Exception: if the Program itself is interactive but does not normally
 print such an announcement, your work based on the Program is not required
 to print an announcement.) 
\end_layout

\begin_layout Standard
These requirements apply to the modified work as a whole.
 If identifiable sections of that work are not derived from the Program,
 and can be reasonably considered independent and separate works in themselves,
 then this License, and its terms, do not apply to those sections when you
 distribute them as separate works.
 But when you distribute the same sections as part of a whole which is a
 work based on the Program, the distribution of the whole must be on the
 terms of this License, whose permissions for other licensees extend to
 the entire whole, and thus to each and every part regardless of who wrote
 it.
 
\end_layout

\begin_layout Standard
Thus, it is not the intent of this section to claim rights or contest your
 rights to work written entirely by you; rather, the intent is to exercise
 the right to control the distribution of derivative or collective works
 based on the Program.
 
\end_layout

\begin_layout Standard
In addition, mere aggregation of another work not based on the Program with
 the Program (or with a work based on the Program) on a volume of a storage
 or distribution medium does not bring the other work under the scope of
 this License.
 
\end_layout

\end_deeper
\begin_layout Enumerate
You may copy and distribute the Program (or a work based on it, under Section
 2) in object code or executable form under the terms of Sections 1 and
 2 above provided that you also do one of the following: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Accompany it with the complete corresponding machine-readable source code,
 which must be distributed under the terms of Sections 1 and 2 above on
 a medium customarily used for software interchange; or, 
\end_layout

\begin_layout Enumerate
Accompany it with a written offer, valid for at least three years, to give
 any third party, for a charge no more than your cost of physically performing
 source distribution, a complete machine-readable copy of the corresponding
 source code, to be distributed under the terms of Sections 1 and 2 above
 on a medium customarily used for software interchange; or, 
\end_layout

\begin_layout Enumerate
Accompany it with the information you received as to the offer to distribute
 corresponding source code.
 (This alternative is allowed only for noncommercial distribution and only
 if you received the program in object code or executable form with such
 an offer, in accord with Subsection b above.) 
\end_layout

\begin_layout Standard
The source code for a work means the preferred form of the work for making
 modifications to it.
 For an executable work, complete source code means all the source code
 for all modules it contains, plus any associated interface definition files,
 plus the scripts used to control compilation and installation of the executable.
 However, as a special exception, the source code distributed need not include
 anything that is normally distributed (in either source or binary form)
 with the major components (compiler, kernel, and so on) of the operating
 system on which the executable runs, unless that component itself accompanies
 the executable.
\end_layout

\begin_layout Standard
If distribution of executable or object code is made by offering access
 to copy from a designated place, then offering equivalent access to copy
 the source code from the same place counts as distribution of the source
 code, even though third parties are not compelled to copy the source along
 with the object code.
 
\end_layout

\end_deeper
\begin_layout Enumerate
You may not copy, modify, sublicense, or distribute the Program except as
 expressly provided under this License.
 Any attempt otherwise to copy, modify, sublicense or distribute the Program
 is void, and will automatically terminate your rights under this License.
 However, parties who have received copies, or rights, from you under this
 License will not have their licenses terminated so long as such parties
 remain in full compliance.
 
\end_layout

\begin_layout Enumerate
You are not required to accept this License, since you have not signed it.
 However, nothing else grants you permission to modify or distribute the
 Program or its derivative works.
 These actions are prohibited by law if you do not accept this License.
 Therefore, by modifying or distributing the Program (or any work based
 on the Program), you indicate your acceptance of this License to do so,
 and all its terms and conditions for copying, distributing or modifying
 the Program or works based on it.
 
\end_layout

\begin_layout Enumerate
Each time you redistribute the Program (or any work based on the Program),
 the recipient automatically receives a license from the original licensor
 to copy, distribute or modify the Program subject to these terms and conditions.
 You may not impose any further restrictions on the recipients' exercise
 of the rights granted herein.
 You are not responsible for enforcing compliance by third parties to this
 License.
 
\end_layout

\begin_layout Enumerate
If, as a consequence of a court judgment or allegation of patent infringement
 or for any other reason (not limited to patent issues), conditions are
 imposed on you (whether by court order, agreement or otherwise) that contradict
 the conditions of this License, they do not excuse you from the conditions
 of this License.
 If you cannot distribute so as to satisfy simultaneously your obligations
 under this License and any other pertinent obligations, then as a consequence
 you may not distribute the Program at all.
 For example, if a patent license would not permit royalty-free redistribution
 of the Program by all those who receive copies directly or indirectly through
 you, then the only way you could satisfy both it and this License would
 be to refrain entirely from distribution of the Program.
\end_layout

\begin_deeper
\begin_layout Standard
If any portion of this section is held invalid or unenforceable under any
 particular circumstance, the balance of the section is intended to apply
 and the section as a whole is intended to apply in other circumstances.
\end_layout

\begin_layout Standard
It is not the purpose of this section to induce you to infringe any patents
 or other property right claims or to contest validity of any such claims;
 this section has the sole purpose of protecting the integrity of the free
 software distribution system, which is implemented by public license practices.
 Many people have made generous contributions to the wide range of software
 distributed through that system in reliance on consistent application of
 that system; it is up to the author/donor to decide if he or she is willing
 to distribute software through any other system and a licensee cannot impose
 that choice.
 
\end_layout

\begin_layout Standard
This section is intended to make thoroughly clear what is believed to be
 a consequence of the rest of this License.
 
\end_layout

\end_deeper
\begin_layout Enumerate
If the distribution and/or use of the Program is restricted in certain countries
 either by patents or by copyrighted interfaces, the original copyright
 holder who places the Program under this License may add an explicit geographic
al distribution limitation excluding those countries, so that distribution
 is permitted only in or among countries not thus excluded.
 In such case, this License incorporates the limitation as if written in
 the body of this License.
 
\end_layout

\begin_layout Enumerate
The Free Software Foundation may publish revised and/or new versions of
 the General Public License from time to time.
 Such new versions will be similar in spirit to the present version, but
 may differ in detail to address new problems or concerns.
 
\end_layout

\begin_deeper
\begin_layout Standard
Each version is given a distinguishing version number.
 If the Program specifies a version number of this License which applies
 to it and "any later version," you have the option of following the terms
 and conditions either of that version or of any later version published
 by the Free Software Foundation.
 If the Program does not specify a version number of this License, you may
 choose any version ever published by the Free Software Foundation.
\end_layout

\end_deeper
\begin_layout Enumerate
If you wish to incorporate parts of the Program into other free programs
 whose distribution conditions are different, write to the author to ask
 for permission.
 For software which is copyrighted by the Free Software Foundation, write
 to the Free Software Foundation; we sometimes make exceptions for this.
 Our decision will be guided by the two goals of preserving the free status
 of all derivatives of our free software and of promoting the sharing and
 reuse of software generally.
 
\end_layout

\begin_layout Subsection*
NO WARRANTY 
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{itemize}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
item[11.]
\end_layout

\end_inset

BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR
 THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.
 EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER
 PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
 EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH
 YOU.
 SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY
 SERVICING, REPAIR OR CORRECTION.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
item[12.]
\end_layout

\end_inset

IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL
 ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE
 THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING
 ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF
 THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS
 OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR
 THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
 EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY
 OF SUCH DAMAGES.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{itemize}
\end_layout

\end_inset


\end_layout

\begin_layout Section*
END OF TERMS AND CONDITIONS 
\end_layout

\begin_layout Subsection*
How to Apply These Terms to Your New Programs
\end_layout

\begin_layout Standard
If you develop a new program, and you want it to be of the greatest possible
 use to the public, the best way to achieve this is to make it free software
 which everyone can redistribute and change under these terms.
 
\end_layout

\begin_layout Standard
To do so, attach the following notices to the program.
 It is safest to attach them to the start of each source file to most effectivel
y convey the exclusion of warranty; and each file should have at least the
 "copyright" line and a pointer to where the full notice is found.
 For example:
\end_layout

\begin_layout Quote
One line to give the program's name and a brief idea of what it does.
 Copyright 
\size footnotesize
© (
\size default
year) (name of author) 
\end_layout

\begin_layout Quote
This program is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License as published by the Free
 Software Foundation; either version 2 of the License, or (at your option)
 any later version.
 
\end_layout

\begin_layout Quote
This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
 
\end_layout

\begin_layout Quote
You should have received a copy of the GNU General Public License along
 with this program; if not, write to the Free Software Foundation, Inc.,
 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA 
\end_layout

\begin_layout Standard
Also add information on how to contact you by electronic and paper mail.
 
\end_layout

\begin_layout Standard
If the program is interactive, make it output a short notice like this when
 it starts in an interactive mode: 
\end_layout

\begin_layout Quote
Gnomovision version 69, Copyright © year name of author Gnomovision comes
 with ABSOLUTELY NO WARRANTY; for details type `show w'.
 This is free software, and you are welcome to redistribute it under certain
 conditions; type `show c' for details.
 
\end_layout

\begin_layout Standard
The hypothetical commands `show w' and `show c' should show the appropriate
 parts of the General Public License.
 Of course, the commands you use may be called something other than `show
 w' and `show c'; they could even be mouse-clicks or menu items -- whatever
 suits your program.
 
\end_layout

\begin_layout Standard
You should also get your employer (if you work as a programmer) or your
 school, if any, to sign a "copyright disclaimer" for the program, if necessary.
 Here is a sample; alter the names: 
\end_layout

\begin_layout Quote
Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovisi
on' (which makes passes at compilers) written by James Hacker.
 
\end_layout

\begin_layout Quote
(signature of Ty Coon)
\begin_inset Newline newline
\end_inset

1 April 1989 
\begin_inset Newline newline
\end_inset

Ty Coon, President of Vice 
\end_layout

\begin_layout Standard
This General Public License does not permit incorporating your program into
 proprietary programs.
 If your program is a subroutine library, you may consider it more useful
 to permit linking proprietary applications with the library.
 If this is what you want to do, use the GNU Library General Public License
 instead of this License.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "1"
key "Fullsack"

\end_inset

Fullsack, Phillipe (1995).
 An arbitrary Lagrangian-Eulerian formulation for creeping flows and its
 application in tectonic models, 
\emph on
Geophys.
 J.
 Int., 120
\emph default
, 1-23.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "2"
key "VPAC"

\end_inset

Quenette, S., B.
 Appelbe, M.
 Gurnis, L.
 Hodkinson, L.
 Moresi, and P.
 Sunter (2005), An Investigation into Design for Performance and Code Maintainab
ility in High Performance Computing, 
\emph on
ANZIAM J
\emph default
.
\emph on
, 46
\emph default
(e)
\emph on
,
\emph default
 C1001-C1016.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "3"
key "Underworld"

\end_inset

Moresi, L.N., F.
 Dufour, and H.-B.
 Mühlhaus (2003), A Lagrangian integration point finite element method for
 large deformation modeling of viscoelastic geomaterials, 
\emph on
J.
 Comp.
 Phys., 184
\series bold
,
\series default
\emph default
 476-497.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "4"
key "Moresi faulting"

\end_inset

Moresi, L.N., and H.-B.
 Mühlhaus (2006), Anisotropic viscous models of large-deformation Mohr-Coulomb
 failure, 
\emph on
Philosophical Magazine, 86
\emph default
(21)
\emph on
,
\emph default
 3287-3305.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "5"
key "Uzawa"

\end_inset

 Moresi, L.N., and V.S.
 Solomatov (1995), Numerical investigation of 2D convection with extremely
 large viscosity variations, 
\emph on
Phys.
 Fluids,
\emph default
 
\emph on
7
\emph default
(9)
\emph on
,
\emph default
 2154-2162.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "6"
key "Ellipsis"

\end_inset

O'Neill, C., L.
 Moresi, D.
 Müller, R.
 Albert, and F.
 Dufour (2006), Ellipsis 3D: a particle-in-cell finite element hybrid code
 for modelling mantle convection and lithospheric deformation, 
\shape italic
Comput.
 Geosci
\shape default
.
 
\shape italic
32
\emph on
(10)
\shape default
\emph default
, 1769-1779.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "7"
key "Citcom"

\end_inset

Zhong, S., M.T.
 Zuber, L.N.
 Moresi, and M.
 Gurnis (2000), The role of temperature-dependent viscosity and surface
 plates in spherical shell models of mantle convection, 
\shape italic
J.
 Geophys.
 Res.
\shape default
, 
\shape italic
105
\shape default
, 11,063-11,082.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "8"
key "Clast"

\end_inset

Schmid, D.W., and Y.Y.
 Podladchikov (2003), Analytical solutions for deformable elliptical inclusions
 in general shear, 
\shape italic
Geophys.
 J.
 Int.
\shape default
, 
\shape italic
155
\shape default
, 269-288.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "9"
key "Landau & Lifschitz"

\end_inset

 Landau, L.D., and E.M.
 Lifshitz (1987), 
\emph on
Fluid Mechanics
\emph default
, Pergamon Press, 61-62.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "10"
key "Folds"

\end_inset

 Johnson, A.M., and R.C.
 Fletcher (1994), 
\emph on
Folding of Viscous Layers
\emph default
, Columbia University Press, 19.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "11"
key "Buiter et al Numerical Sandbox"

\end_inset

Buiter, Susanne J.H., and Andrey Yu.
 Babeyko, Susan Ellis, Taras V.
 Gerya, Boris J.P.
 Kaus, Antje Kellner, Guido Schreurs, and Yasuhiro Yamada (2006), The numerical
 sandbox: comparison of model results for a shortening and an extension
 experiment, 
\emph on
Analogue and Numerical Modelling of Crustal-Scale Processes
\emph default
, 
\emph on
253
\emph default
, edited by S.J.H Buiter and G.
 Schreurs, pp.
 29-64, Geological Society, London, Special Publications, doi: 10.1144/GSL.SP.2006.2
53.01.02.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "12"
key "Stokes Sphere"

\end_inset

Lindgren, E.R.
 (1999), The Motion of a Sphere in an Incompressible Viscous Fluid at Reynolds
 Numbers Considerably Less Than One, 
\shape italic
Physica Scriptae
\shape default
, 
\shape italic
60
\shape default
, 97-110.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "13"
key "FD Stokes"

\end_inset

 Deubelbeiss, Yolanda, and Boris J.P.
 Kaus (2007), A comparison of finite difference formultions for the Stokes
 equations in presence of strongly varying viscosity, poster presented at
 2007 AGU.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "14"
key "Stable Stokes"

\end_inset

Dohrmann, C., and 
\color none
P.
 Bochev (2004), A stabilized finite element method for the Stokes problem
 based on polynomial pressure projections, 
\shape italic
\color inherit
Int.
 J.
 Num.
 Meth.
 Fluids.
\shape default
\color none
, 
\emph on
\color inherit
46,
\emph default
\color none
 183-201
\end_layout

\begin_layout Bibliography

\color none
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "15"
key "Fast Solvers"

\end_inset

Elman, H.C., D.J.
 Silvester, and A.J.
 Wathen (2005), 
\shape italic
\color inherit
Finite Elements and Fast Iterative Solvers: with Applications in Incompressible
 Fluid Dynamics
\shape default
\color none
, Oxford University Press
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "16"
key "Geomod 2008"

\end_inset

Buiter, S., and G.
 Schreurs, http://www.geodynamics.no/benchmarks/benchmark-annum2008.html
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "17"
key "Dahlen Wedge"

\end_inset

Dahlen, F.A.
 (1984), Noncohesive Critical Wedges: An Exact Solution,
\shape italic
 J.
 Geophys.
 Res., 89
\shape default
, B12, 10125-10133
\end_layout

\end_body
\end_document
