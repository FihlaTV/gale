StGermain Framework revision 3605. Copyright (C) 2003-2005 VPAC.
StGermain Discretisation Library revision 3605. Copyright (C) 2003-2005 VPAC.
StGermain FEM Discretisation Framework revision 566. Copyright (C) 2003-2005 VPAC.
Watching rank: 0
WallVC (ptr): 0x806b5d8
	dictionary (ptr): 0x8060610
	_dictionaryEntryName (ptr): 0x804b039
		_dictionaryEntryName: boundaryCondition
	_wall: Left
	_entryCount: 1
	_entryTbl (ptr): 0x806c7d8
		_entryTbl[0]:
			varName (ptr): 0x8060480
				varName: vx
			value:
				type: VC_ValueType_Double
				asDouble: -1
	_mesh (ptr): 0x8068ff0
VariableCondition (ptr): 0x806b5d8
Stg_Component (ptr): 0x806b5d8
Stg_Object (ptr): 0x806b5d8
	Stg_Class (ptr): 0x806b5d8
		sizeOfSelf: 192
		_deleteSelf: Yes
		type: WallVC
		_delete (func ptr): 0xb7dfff77
		_print (func ptr): 0xb7dfffbd
		_copy (func ptr): 0xb7e0056e
	name: WallVC
	nameAllocationType: NON_GLOBAL
	_defaultConstructor (func ptr): 0xb7dff248
	_construct (func ptr): 0xb7e00783
	_build (func ptr): 0xb7e00741
	_initialise (func ptr): 0xb7ea9de2
	_execute (func ptr): 0xb7ea9ea6
	_destroy (func ptr): 0xb7ea9ed6
	isConstructed: True
	isBuilt: True
	isInitialised: False
	hasExecuted: False
	isDestroyed: False
	constructor function name: WallVC-Construct
	build function name: WallVC-Build
	initialise function name: WallVC-Initialise
	execute function name: WallVC-Execute
	destroy function name: WallVC-Destroy
	_getSet (func ptr): 0xb7e007d2
	_getVariableCount (func ptr): 0xb7e00b68
	_getVariableIndex (func ptr): 0xb7e00b7f
	_getValueIndex (func ptr): 0xb7e00c5a
	_getValueCount (func ptr): 0xb7e00c62
	_getValue (func ptr): 0xb7e00c79
	variable_Register (ptr): 0x8061c80
	conFunc_Register (ptr): (nil)
	_set (ptr): 0x806c998
	indexCount: 7
	indexTbl (ptr): 0x806c9d8
		indexTbl[0]: 0
		indexTbl[1]: 7
		indexTbl[2]: 14
		indexTbl[3]: 21
		indexTbl[4]: 28
		indexTbl[5]: 35
		indexTbl[6]: 42
	vcVarCountTbl (ptr): 0x806ca00
		vcVarCountTbl[0]: 1
		vcVarCountTbl[1]: 1
		vcVarCountTbl[2]: 1
		vcVarCountTbl[3]: 1
		vcVarCountTbl[4]: 1
		vcVarCountTbl[5]: 1
		vcVarCountTbl[6]: 1
	vcTbl (ptr): 0x806ca28
		vcTbl[0][0]:
			varIndex: 1
			valIndex: 0
		vcTbl[1][0]:
			varIndex: 1
			valIndex: 0
		vcTbl[2][0]:
			varIndex: 1
			valIndex: 0
		vcTbl[3][0]:
			varIndex: 1
			valIndex: 0
		vcTbl[4][0]:
			varIndex: 1
			valIndex: 0
		vcTbl[5][0]:
			varIndex: 1
			valIndex: 0
		vcTbl[6][0]:
			varIndex: 1
			valIndex: 0
	valueCount: 1
	valueTbl (ptr): 0x806ca88
		valueTbl[0]:
			type: VC_ValueType_Double
			asDouble: -1
0: *** Printing destination array ***
	destinationArray[(gnode) 0][(dof)0-2]: -1,   0, 
	destinationArray[(gnode) 1][(dof)0-2]:  1,   2, 
	destinationArray[(gnode) 2][(dof)0-2]:  3,   4, 
	destinationArray[(gnode) 3][(dof)0-2]:  5,   6, 
	destinationArray[(gnode) 4][(dof)0-2]:  7,   8, 
	destinationArray[(gnode) 5][(dof)0-2]:  9,  10, 
	destinationArray[(gnode) 6][(dof)0-2]: 11,  12, 
	destinationArray[(gnode) 7][(dof)0-2]: -1,  13, 
	destinationArray[(gnode) 8][(dof)0-2]: 14,  15, 
	destinationArray[(gnode) 9][(dof)0-2]: 16,  17, 
	destinationArray[(gnode)10][(dof)0-2]: 18,  19, 
	destinationArray[(gnode)11][(dof)0-2]: 20,  21, 
	destinationArray[(gnode)12][(dof)0-2]: 22,  23, 
	destinationArray[(gnode)13][(dof)0-2]: 24,  25, 
	destinationArray[(gnode)14][(dof)0-2]: -1,  26, 
	destinationArray[(gnode)15][(dof)0-2]: 27,  28, 
	destinationArray[(gnode)16][(dof)0-2]: 29,  30, 
	destinationArray[(gnode)17][(dof)0-2]: 31,  32, 
	destinationArray[(gnode)18][(dof)0-2]: 33,  34, 
	destinationArray[(gnode)19][(dof)0-2]: 35,  36, 
	destinationArray[(gnode)20][(dof)0-2]: 37,  38, 
	destinationArray[(gnode)21][(dof)0-2]: -1,  39, 
	destinationArray[(gnode)22][(dof)0-2]: 40,  41, 
	destinationArray[(gnode)23][(dof)0-2]: 42,  43, 
	destinationArray[(gnode)24][(dof)0-2]: 44,  45, 
	destinationArray[(gnode)25][(dof)0-2]: 46,  47, 
	destinationArray[(gnode)26][(dof)0-2]: 48,  49, 
	destinationArray[(gnode)27][(dof)0-2]: 50,  51, 
	destinationArray[(gnode)28][(dof)0-2]: -1,  52, 
	destinationArray[(gnode)29][(dof)0-2]: 53,  54, 
	destinationArray[(gnode)30][(dof)0-2]: 55,  56, 
	destinationArray[(gnode)31][(dof)0-2]: 57,  58, 
	destinationArray[(gnode)32][(dof)0-2]: 59,  60, 
	destinationArray[(gnode)33][(dof)0-2]: 61,  62, 
	destinationArray[(gnode)34][(dof)0-2]: 63,  64, 
	destinationArray[(gnode)35][(dof)0-2]: -1,  65, 
	destinationArray[(gnode)36][(dof)0-2]: 66,  67, 
	destinationArray[(gnode)37][(dof)0-2]: 68,  69, 
	destinationArray[(gnode)38][(dof)0-2]: 70,  71, 
	destinationArray[(gnode)39][(dof)0-2]: 72,  73, 
	destinationArray[(gnode)40][(dof)0-2]: 74,  75, 
	destinationArray[(gnode)41][(dof)0-2]: 76,  77, 
	destinationArray[(gnode)42][(dof)0-2]: -1,  78, 
	destinationArray[(gnode)43][(dof)0-2]: 79,  80, 
	destinationArray[(gnode)44][(dof)0-2]: 81,  82, 
	destinationArray[(gnode)45][(dof)0-2]: 83,  84, 
	destinationArray[(gnode)46][(dof)0-2]: 85,  86, 
	destinationArray[(gnode)47][(dof)0-2]: 87,  88, 
	destinationArray[(gnode)48][(dof)0-2]: 89,  90, 
0: *** Printing location matrix ***
	LM[(g/l el) 0/ 0][(enodes)0-4]({ 0} -1,  0,), ({ 1}  1,  2,), ({ 8} 14, 15,), ({ 7} -1, 13,), 
	LM[(g/l el) 1/ 1][(enodes)0-4]({ 1}  1,  2,), ({ 2}  3,  4,), ({ 9} 16, 17,), ({ 8} 14, 15,), 
	LM[(g/l el) 2/ 2][(enodes)0-4]({ 2}  3,  4,), ({ 3}  5,  6,), ({10} 18, 19,), ({ 9} 16, 17,), 
	LM[(g/l el) 3/ 3][(enodes)0-4]({ 3}  5,  6,), ({ 4}  7,  8,), ({11} 20, 21,), ({10} 18, 19,), 
	LM[(g/l el) 4/ 4][(enodes)0-4]({ 4}  7,  8,), ({ 5}  9, 10,), ({12} 22, 23,), ({11} 20, 21,), 
	LM[(g/l el) 5/ 5][(enodes)0-4]({ 5}  9, 10,), ({ 6} 11, 12,), ({13} 24, 25,), ({12} 22, 23,), 
	LM[(g/l el) 6/ 6][(enodes)0-4]({ 7} -1, 13,), ({ 8} 14, 15,), ({15} 27, 28,), ({14} -1, 26,), 
	LM[(g/l el) 7/ 7][(enodes)0-4]({ 8} 14, 15,), ({ 9} 16, 17,), ({16} 29, 30,), ({15} 27, 28,), 
	LM[(g/l el) 8/ 8][(enodes)0-4]({ 9} 16, 17,), ({10} 18, 19,), ({17} 31, 32,), ({16} 29, 30,), 
	LM[(g/l el) 9/ 9][(enodes)0-4]({10} 18, 19,), ({11} 20, 21,), ({18} 33, 34,), ({17} 31, 32,), 
	LM[(g/l el)10/10][(enodes)0-4]({11} 20, 21,), ({12} 22, 23,), ({19} 35, 36,), ({18} 33, 34,), 
	LM[(g/l el)11/11][(enodes)0-4]({12} 22, 23,), ({13} 24, 25,), ({20} 37, 38,), ({19} 35, 36,), 
	LM[(g/l el)12/12][(enodes)0-4]({14} -1, 26,), ({15} 27, 28,), ({22} 40, 41,), ({21} -1, 39,), 
	LM[(g/l el)13/13][(enodes)0-4]({15} 27, 28,), ({16} 29, 30,), ({23} 42, 43,), ({22} 40, 41,), 
	LM[(g/l el)14/14][(enodes)0-4]({16} 29, 30,), ({17} 31, 32,), ({24} 44, 45,), ({23} 42, 43,), 
	LM[(g/l el)15/15][(enodes)0-4]({17} 31, 32,), ({18} 33, 34,), ({25} 46, 47,), ({24} 44, 45,), 
	LM[(g/l el)16/16][(enodes)0-4]({18} 33, 34,), ({19} 35, 36,), ({26} 48, 49,), ({25} 46, 47,), 
	LM[(g/l el)17/17][(enodes)0-4]({19} 35, 36,), ({20} 37, 38,), ({27} 50, 51,), ({26} 48, 49,), 
	LM[(g/l el)18/18][(enodes)0-4]({21} -1, 39,), ({22} 40, 41,), ({29} 53, 54,), ({28} -1, 52,), 
	LM[(g/l el)19/19][(enodes)0-4]({22} 40, 41,), ({23} 42, 43,), ({30} 55, 56,), ({29} 53, 54,), 
	LM[(g/l el)20/20][(enodes)0-4]({23} 42, 43,), ({24} 44, 45,), ({31} 57, 58,), ({30} 55, 56,), 
	LM[(g/l el)21/21][(enodes)0-4]({24} 44, 45,), ({25} 46, 47,), ({32} 59, 60,), ({31} 57, 58,), 
	LM[(g/l el)22/22][(enodes)0-4]({25} 46, 47,), ({26} 48, 49,), ({33} 61, 62,), ({32} 59, 60,), 
	LM[(g/l el)23/23][(enodes)0-4]({26} 48, 49,), ({27} 50, 51,), ({34} 63, 64,), ({33} 61, 62,), 
	LM[(g/l el)24/24][(enodes)0-4]({28} -1, 52,), ({29} 53, 54,), ({36} 66, 67,), ({35} -1, 65,), 
	LM[(g/l el)25/25][(enodes)0-4]({29} 53, 54,), ({30} 55, 56,), ({37} 68, 69,), ({36} 66, 67,), 
	LM[(g/l el)26/26][(enodes)0-4]({30} 55, 56,), ({31} 57, 58,), ({38} 70, 71,), ({37} 68, 69,), 
	LM[(g/l el)27/27][(enodes)0-4]({31} 57, 58,), ({32} 59, 60,), ({39} 72, 73,), ({38} 70, 71,), 
	LM[(g/l el)28/28][(enodes)0-4]({32} 59, 60,), ({33} 61, 62,), ({40} 74, 75,), ({39} 72, 73,), 
	LM[(g/l el)29/29][(enodes)0-4]({33} 61, 62,), ({34} 63, 64,), ({41} 76, 77,), ({40} 74, 75,), 
	LM[(g/l el)30/30][(enodes)0-4]({35} -1, 65,), ({36} 66, 67,), ({43} 79, 80,), ({42} -1, 78,), 
	LM[(g/l el)31/31][(enodes)0-4]({36} 66, 67,), ({37} 68, 69,), ({44} 81, 82,), ({43} 79, 80,), 
	LM[(g/l el)32/32][(enodes)0-4]({37} 68, 69,), ({38} 70, 71,), ({45} 83, 84,), ({44} 81, 82,), 
	LM[(g/l el)33/33][(enodes)0-4]({38} 70, 71,), ({39} 72, 73,), ({46} 85, 86,), ({45} 83, 84,), 
	LM[(g/l el)34/34][(enodes)0-4]({39} 72, 73,), ({40} 74, 75,), ({47} 87, 88,), ({46} 85, 86,), 
	LM[(g/l el)35/35][(enodes)0-4]({40} 74, 75,), ({41} 76, 77,), ({48} 89, 90,), ({47} 87, 88,), 
In FeVariable_PrintLocalDiscreteValues: for FeVariable "velocity":
node 0 (global index 0):
	dof 0 "vx":      1 - (from BC)
	dof 1 "vy":      1 - (eq num 0)
node 1 (global index 1):
	dof 0 "vx":      1 - (eq num 1)
	dof 1 "vy":      1 - (eq num 2)
node 2 (global index 2):
	dof 0 "vx":      1 - (eq num 3)
	dof 1 "vy":      1 - (eq num 4)
node 3 (global index 3):
	dof 0 "vx":      1 - (eq num 5)
	dof 1 "vy":      1 - (eq num 6)
node 4 (global index 4):
	dof 0 "vx":      1 - (eq num 7)
	dof 1 "vy":      1 - (eq num 8)
node 5 (global index 5):
	dof 0 "vx":      1 - (eq num 9)
	dof 1 "vy":      1 - (eq num 10)
node 6 (global index 6):
	dof 0 "vx":      1 - (eq num 11)
	dof 1 "vy":      1 - (eq num 12)
node 7 (global index 7):
	dof 0 "vx": 0.858779 - (from BC)
	dof 1 "vy": 0.858779 - (eq num 13)
node 8 (global index 8):
	dof 0 "vx": 0.847553 - (eq num 14)
	dof 1 "vy": 0.847553 - (eq num 15)
node 9 (global index 9):
	dof 0 "vx": 0.818164 - (eq num 16)
	dof 1 "vy": 0.818164 - (eq num 17)
node 10 (global index 10):
	dof 0 "vx": 0.781836 - (eq num 18)
	dof 1 "vy": 0.781836 - (eq num 19)
node 11 (global index 11):
	dof 0 "vx": 0.752447 - (eq num 20)
	dof 1 "vy": 0.752447 - (eq num 21)
node 12 (global index 12):
	dof 0 "vx": 0.741221 - (eq num 22)
	dof 1 "vy": 0.741221 - (eq num 23)
node 13 (global index 13):
	dof 0 "vx": 0.752447 - (eq num 24)
	dof 1 "vy": 0.752447 - (eq num 25)
node 14 (global index 14):
	dof 0 "vx": 0.695106 - (from BC)
	dof 1 "vy": 0.695106 - (eq num 26)
node 15 (global index 15):
	dof 0 "vx": 0.676942 - (eq num 27)
	dof 1 "vy": 0.676942 - (eq num 28)
node 16 (global index 16):
	dof 0 "vx": 0.629389 - (eq num 29)
	dof 1 "vy": 0.629389 - (eq num 30)
node 17 (global index 17):
	dof 0 "vx": 0.570611 - (eq num 31)
	dof 1 "vy": 0.570611 - (eq num 32)
node 18 (global index 18):
	dof 0 "vx": 0.523058 - (eq num 33)
	dof 1 "vy": 0.523058 - (eq num 34)
node 19 (global index 19):
	dof 0 "vx": 0.504894 - (eq num 35)
	dof 1 "vy": 0.504894 - (eq num 36)
node 20 (global index 20):
	dof 0 "vx": 0.523058 - (eq num 37)
	dof 1 "vy": 0.523058 - (eq num 38)
node 21 (global index 21):
	dof 0 "vx": 0.495106 - (from BC)
	dof 1 "vy": 0.495106 - (eq num 39)
node 22 (global index 22):
	dof 0 "vx": 0.476942 - (eq num 40)
	dof 1 "vy": 0.476942 - (eq num 41)
node 23 (global index 23):
	dof 0 "vx": 0.429389 - (eq num 42)
	dof 1 "vy": 0.429389 - (eq num 43)
node 24 (global index 24):
	dof 0 "vx": 0.370611 - (eq num 44)
	dof 1 "vy": 0.370611 - (eq num 45)
node 25 (global index 25):
	dof 0 "vx": 0.323058 - (eq num 46)
	dof 1 "vy": 0.323058 - (eq num 47)
node 26 (global index 26):
	dof 0 "vx": 0.304894 - (eq num 48)
	dof 1 "vy": 0.304894 - (eq num 49)
node 27 (global index 27):
	dof 0 "vx": 0.323058 - (eq num 50)
	dof 1 "vy": 0.323058 - (eq num 51)
node 28 (global index 28):
	dof 0 "vx": 0.258778 - (from BC)
	dof 1 "vy": 0.258778 - (eq num 52)
node 29 (global index 29):
	dof 0 "vx": 0.247553 - (eq num 53)
	dof 1 "vy": 0.247553 - (eq num 54)
node 30 (global index 30):
	dof 0 "vx": 0.218164 - (eq num 55)
	dof 1 "vy": 0.218164 - (eq num 56)
node 31 (global index 31):
	dof 0 "vx": 0.181836 - (eq num 57)
	dof 1 "vy": 0.181836 - (eq num 58)
node 32 (global index 32):
	dof 0 "vx": 0.152447 - (eq num 59)
	dof 1 "vy": 0.152447 - (eq num 60)
node 33 (global index 33):
	dof 0 "vx": 0.141221 - (eq num 61)
	dof 1 "vy": 0.141221 - (eq num 62)
node 34 (global index 34):
	dof 0 "vx": 0.152447 - (eq num 63)
	dof 1 "vy": 0.152447 - (eq num 64)
node 35 (global index 35):
	dof 0 "vx": -5.222e-08 - (from BC)
	dof 1 "vy": -5.222e-08 - (eq num 65)
node 36 (global index 36):
	dof 0 "vx": -4.98358e-08 - (eq num 66)
	dof 1 "vy": -4.98358e-08 - (eq num 67)
node 37 (global index 37):
	dof 0 "vx": -4.35941e-08 - (eq num 68)
	dof 1 "vy": -4.35941e-08 - (eq num 69)
node 38 (global index 38):
	dof 0 "vx": -3.58788e-08 - (eq num 70)
	dof 1 "vy": -3.58788e-08 - (eq num 71)
node 39 (global index 39):
	dof 0 "vx": -2.9637e-08 - (eq num 72)
	dof 1 "vy": -2.9637e-08 - (eq num 73)
node 40 (global index 40):
	dof 0 "vx": -2.72529e-08 - (eq num 74)
	dof 1 "vy": -2.72529e-08 - (eq num 75)
node 41 (global index 41):
	dof 0 "vx": -2.9637e-08 - (eq num 76)
	dof 1 "vy": -2.9637e-08 - (eq num 77)
node 42 (global index 42):
	dof 0 "vx": -0.258779 - (from BC)
	dof 1 "vy": -0.258779 - (eq num 78)
node 43 (global index 43):
	dof 0 "vx": -0.247553 - (eq num 79)
	dof 1 "vy": -0.247553 - (eq num 80)
node 44 (global index 44):
	dof 0 "vx": -0.218164 - (eq num 81)
	dof 1 "vy": -0.218164 - (eq num 82)
node 45 (global index 45):
	dof 0 "vx": -0.181836 - (eq num 83)
	dof 1 "vy": -0.181836 - (eq num 84)
node 46 (global index 46):
	dof 0 "vx": -0.152447 - (eq num 85)
	dof 1 "vy": -0.152447 - (eq num 86)
node 47 (global index 47):
	dof 0 "vx": -0.141222 - (eq num 87)
	dof 1 "vy": -0.141222 - (eq num 88)
node 48 (global index 48):
	dof 0 "vx": -0.152447 - (eq num 89)
	dof 1 "vy": -0.152447 - (eq num 90)

display of Values in 2D box X:{ 0.00- 1.20}, Y:{ 0.00- 1.20}
	with 6 elements in X (dx= 0.20) and 6 elements in Y (dy= 0.20)

          |  xNode=  0   |  xNode=  1   |  xNode=  2   |  xNode=  3   |  xNode=  4   |  xNode=  5   |  xNode=  6   |
          ----------------------------------------------------------------------------------------------------------
yNode=  6 |(-0.26,-0.26 )|(-0.25,-0.25 )|(-0.22,-0.22 )|(-0.18,-0.18 )|(-0.15,-0.15 )|(-0.14,-0.14 )|(-0.15,-0.15 )|
          |--------------*--------------*--------------*--------------*--------------*--------------*--------------|
yNode=  5 |(-0.00,-0.00 )|(-0.00,-0.00 )|(-0.00,-0.00 )|(-0.00,-0.00 )|(-0.00,-0.00 )|(-0.00,-0.00 )|(-0.00,-0.00 )|
          |--------------*--------------*--------------*--------------*--------------*--------------*--------------|
yNode=  4 |( 0.26, 0.26 )|( 0.25, 0.25 )|( 0.22, 0.22 )|( 0.18, 0.18 )|( 0.15, 0.15 )|( 0.14, 0.14 )|( 0.15, 0.15 )|
          |--------------*--------------*--------------*--------------*--------------*--------------*--------------|
yNode=  3 |( 0.50, 0.50 )|( 0.48, 0.48 )|( 0.43, 0.43 )|( 0.37, 0.37 )|( 0.32, 0.32 )|( 0.30, 0.30 )|( 0.32, 0.32 )|
          |--------------*--------------*--------------*--------------*--------------*--------------*--------------|
yNode=  2 |( 0.70, 0.70 )|( 0.68, 0.68 )|( 0.63, 0.63 )|( 0.57, 0.57 )|( 0.52, 0.52 )|( 0.50, 0.50 )|( 0.52, 0.52 )|
          |--------------*--------------*--------------*--------------*--------------*--------------*--------------|
yNode=  1 |( 0.86, 0.86 )|( 0.85, 0.85 )|( 0.82, 0.82 )|( 0.78, 0.78 )|( 0.75, 0.75 )|( 0.74, 0.74 )|( 0.75, 0.75 )|
          |--------------*--------------*--------------*--------------*--------------*--------------*--------------|
yNode=  0 |( 1.00, 1.00 )|( 1.00, 1.00 )|( 1.00, 1.00 )|( 1.00, 1.00 )|( 1.00, 1.00 )|( 1.00, 1.00 )|( 1.00, 1.00 )|
          ----------------------------------------------------------------------------------------------------------



Testing the min and max functions
	Min global magnitude = 0.000000
	Max global magnitude = 1.414214


Testing the local boundary functions
	MinLocalXCoord = 0.000000
	MinLocalYCoord = 0.000000
	MinLocalZCoord = 0.000000
	MaxLocalXCoord = 1.200000
	MaxLocalYCoord = 1.200000
	MaxLocalZCoord = 0.000000
Testing the global boundary functions
	MinGlobalXCoord = 0.000000
	MinGlobalYCoord = 0.000000
	MinGlobalZCoord = 0.000000
	MaxGlobalXCoord = 1.200000
	MaxGlobalYCoord = 1.200000
	MaxGlobalZCoord = 0.000000


Testing Interpolation at some coords:
	velocity interpolated at ( 0.00, 0.00) = ( 1.00, 1.00)
	velocity derivative interpolated at ( 0.00, 0.00): 
	derivative - 
	      0     -0.70611     
	      0     -0.70611     
	velocity interpolated at ( 0.10, 0.10) = ( 0.93, 0.93)
	velocity derivative interpolated at ( 0.10, 0.10): 
	derivative - 
	-0.028064     -0.73417     
	-0.028064     -0.73417     
	velocity interpolated at ( 0.20, 0.60) = ( 0.48, 0.48)
	velocity derivative interpolated at ( 0.20, 0.60): 
	derivative - 
	-0.090818          -1     
	-0.090818          -1     
	velocity interpolated at ( 0.55, 0.10) = ( 0.90, 0.90)
	velocity derivative interpolated at ( 0.55, 0.10): 
	derivative - 
	-0.090818     -1.0454     
	-0.090818     -1.0454     
	velocity interpolated at ( 0.65, 0.60) = ( 0.36, 0.36)
	velocity derivative interpolated at ( 0.65, 0.60): 
	derivative - 
	-0.23776          -1     
	-0.23776          -1     
	velocity interpolated at ( 1.10, 1.10) = (-0.07,-0.07)
	velocity derivative interpolated at ( 1.10, 1.10): 
	derivative - 
	-0.028064     -0.73417     
	-0.028064     -0.73417     
	velocity interpolated at ( 1.20, 1.20) = (-0.15,-0.15)
	velocity derivative interpolated at ( 1.20, 1.20): 
	derivative - 
	-0.056129     -0.76224     
	-0.056129     -0.76224     
Testing Derivatives at some coords with linear velocity solution:
	velocity derivative interpolated at ( 0.00, 0.00): 
	derivative - 
	    2.3         0.1     
	     -3           1     
	velocity derivative interpolated at ( 0.10, 0.10): 
	derivative - 
	    2.3         0.1     
	     -3           1     
	velocity derivative interpolated at ( 0.20, 0.60): 
	derivative - 
	    2.3         0.1     
	     -3           1     
	velocity derivative interpolated at ( 0.55, 0.10): 
	derivative - 
	    2.3         0.1     
	     -3           1     
	velocity derivative interpolated at ( 0.65, 0.60): 
	derivative - 
	    2.3         0.1     
	     -3           1     
	velocity derivative interpolated at ( 1.10, 1.10): 
	derivative - 
	    2.3         0.1     
	     -3           1     
	velocity derivative interpolated at ( 1.20, 1.20): 
	derivative - 
	    2.3         0.1     
	     -3           1     
Testing Set at some nodes:
	Before update: values at nodes 0 to 10:
	(0.000000,0.000000), (0.460000,-0.600000), (0.920000,-1.200000), (1.380000,-1.800000), (1.840000,-2.400000), (2.300000,-3.000000), (2.760000,-3.600000), (0.020000,0.200000), (0.480000,-0.400000), (0.940000,-1.000000), 
	After update: values at nodes 0 to 10:
	(0.000000,0.000000), (100.000000,110.000000), (200.000000,220.000000), (300.000000,330.000000), (400.000000,440.000000), (500.000000,550.000000), (600.000000,660.000000), (700.000000,770.000000), (800.000000,880.000000), (900.000000,990.000000), 
