StGermain Framework. Copyright (C) 2003-2005 VPAC.
StGermain Discretisation Library. Copyright (C) 2003-2005 VPAC.
StGermain FEM Discretisation Framework. Copyright (C) 2003-2005 VPAC.
Watching rank: 0

Creating Stg_Components from the component-list

	Instantiating Sphere as testShape

Constructing Stg_Components from the live-component register

	Constructing testShape..

***  REGULAR node/element layout tests ***

***  Balanced: 6*1*1 elements ***
Creating Geometry, Decomps and Layouts:
Creating F.E. Mesh:
Creating Vars:
Creating VC:
Building:
Building mesh:
Building Variable Conditions:
Creating EQ num:
Building FE Eq num:
Initialising:
Building LM:
V.C. applied: 	type: WallVC, set: Left
0: *** Printing destination array ***
	destinationArray[(gnode) 0][(dof)0-3]: -1,   0,   1, 
	destinationArray[(gnode) 1][(dof)0-3]:  2,   0,   3, 
	destinationArray[(gnode) 2][(dof)0-3]:  4,   0,   5, 
	destinationArray[(gnode) 3][(dof)0-3]:  6,   0,   1, 
	destinationArray[(gnode) 4][(dof)0-3]: -1,   7,   1, 
	destinationArray[(gnode) 5][(dof)0-3]:  8,   9,  10, 
	destinationArray[(gnode) 6][(dof)0-3]: 11,   9,  12, 
	destinationArray[(gnode) 7][(dof)0-3]: 13,  14,   1, 
	destinationArray[(gnode) 8][(dof)0-3]: -1,  15,   1, 
	destinationArray[(gnode) 9][(dof)0-3]: 16,   9,  17, 
	destinationArray[(gnode)10][(dof)0-3]: 18,   9,  19, 
	destinationArray[(gnode)11][(dof)0-3]: 20,  21,   1, 
	destinationArray[(gnode)12][(dof)0-3]: -1,  22,   1, 
	destinationArray[(gnode)13][(dof)0-3]: 23,  24,  25, 
	destinationArray[(gnode)14][(dof)0-3]: 26,  27,  28, 
	destinationArray[(gnode)15][(dof)0-3]: 29,  30,   1, 
	destinationArray[(gnode)16][(dof)0-3]: -1,   0,   1, 
	destinationArray[(gnode)17][(dof)0-3]: 31,   0,  32, 
	destinationArray[(gnode)18][(dof)0-3]: 33,   0,  34, 
	destinationArray[(gnode)19][(dof)0-3]: 35,   0,   1, 
	destinationArray[(gnode)20][(dof)0-3]: -1,  36,   1, 
	destinationArray[(gnode)21][(dof)0-3]: 37,  38,  39, 
	destinationArray[(gnode)22][(dof)0-3]: 40,  41,  42, 
	destinationArray[(gnode)23][(dof)0-3]: 43,  44,   1, 
	destinationArray[(gnode)24][(dof)0-3]: -1,  45,   1, 
	destinationArray[(gnode)25][(dof)0-3]: 46,  47,  48, 
	destinationArray[(gnode)26][(dof)0-3]: 49,  50,  51, 
	destinationArray[(gnode)27][(dof)0-3]: 52,  53,   1, 
	destinationArray[(gnode)28][(dof)0-3]: -1,  54,   1, 
	destinationArray[(gnode)29][(dof)0-3]: 55,  56,  57, 
	destinationArray[(gnode)30][(dof)0-3]: 58,  59,  60, 
	destinationArray[(gnode)31][(dof)0-3]: 61,  62,   1, 
	destinationArray[(gnode)32][(dof)0-3]: -1,   0,   1, 
	destinationArray[(gnode)33][(dof)0-3]: 63,   0,  64, 
	destinationArray[(gnode)34][(dof)0-3]: 65,   0,  66, 
	destinationArray[(gnode)35][(dof)0-3]: 67,   0,   1, 
	destinationArray[(gnode)36][(dof)0-3]: -1,  68,   1, 
	destinationArray[(gnode)37][(dof)0-3]: 69,  70,  71, 
	destinationArray[(gnode)38][(dof)0-3]: 72,  73,  74, 
	destinationArray[(gnode)39][(dof)0-3]: 75,  76,   1, 
	destinationArray[(gnode)40][(dof)0-3]: -1,  77,   1, 
	destinationArray[(gnode)41][(dof)0-3]: 78,  79,  80, 
	destinationArray[(gnode)42][(dof)0-3]: 81,  82,  83, 
	destinationArray[(gnode)43][(dof)0-3]: 84,  85,   1, 
	destinationArray[(gnode)44][(dof)0-3]: -1,  86,   1, 
	destinationArray[(gnode)45][(dof)0-3]: 87,  88,  89, 
	destinationArray[(gnode)46][(dof)0-3]: 90,  91,  92, 
	destinationArray[(gnode)47][(dof)0-3]: 93,  94,   1, 
	destinationArray[(gnode)48][(dof)0-3]: -1,   0,   1, 
	destinationArray[(gnode)49][(dof)0-3]: 95,   0,  96, 
	destinationArray[(gnode)50][(dof)0-3]: 97,   0,  98, 
	destinationArray[(gnode)51][(dof)0-3]: 99,   0,   1, 
	destinationArray[(gnode)52][(dof)0-3]: -1, 100,   1, 
	destinationArray[(gnode)53][(dof)0-3]:101, 102, 103, 
	destinationArray[(gnode)54][(dof)0-3]:104, 105, 106, 
	destinationArray[(gnode)55][(dof)0-3]:107, 108,   1, 
	destinationArray[(gnode)56][(dof)0-3]: -1, 109,   1, 
	destinationArray[(gnode)57][(dof)0-3]:110, 111, 112, 
	destinationArray[(gnode)58][(dof)0-3]:113, 114, 115, 
	destinationArray[(gnode)59][(dof)0-3]:116, 117,   1, 
	destinationArray[(gnode)60][(dof)0-3]: -1, 118,   1, 
	destinationArray[(gnode)61][(dof)0-3]:119, 120, 121, 
	destinationArray[(gnode)62][(dof)0-3]:122, 123, 124, 
	destinationArray[(gnode)63][(dof)0-3]:125, 126,   1, 
0: *** Printing location matrix ***
	LM[(g/l el) 0/ 0][(enodes)0-8]({ 0} -1,  0,  1,), ({ 1}  2,  0,  3,), ({ 5}  8,  9, 10,), ({ 4} -1,  7,  1,), ({16} -1,  0,  1,), ({17} 31,  0, 32,), ({21} 37, 38, 39,), ({20} -1, 36,  1,), 
	LM[(g/l el) 1/ 1][(enodes)0-8]({ 1}  2,  0,  3,), ({ 2}  4,  0,  5,), ({ 6} 11,  9, 12,), ({ 5}  8,  9, 10,), ({17} 31,  0, 32,), ({18} 33,  0, 34,), ({22} 40, 41, 42,), ({21} 37, 38, 39,), 
	LM[(g/l el) 2/ 2][(enodes)0-8]({ 2}  4,  0,  5,), ({ 3}  6,  0,  1,), ({ 7} 13, 14,  1,), ({ 6} 11,  9, 12,), ({18} 33,  0, 34,), ({19} 35,  0,  1,), ({23} 43, 44,  1,), ({22} 40, 41, 42,), 
	LM[(g/l el) 3/ 3][(enodes)0-8]({ 4} -1,  7,  1,), ({ 5}  8,  9, 10,), ({ 9} 16,  9, 17,), ({ 8} -1, 15,  1,), ({20} -1, 36,  1,), ({21} 37, 38, 39,), ({25} 46, 47, 48,), ({24} -1, 45,  1,), 
	LM[(g/l el) 4/ 4][(enodes)0-8]({ 5}  8,  9, 10,), ({ 6} 11,  9, 12,), ({10} 18,  9, 19,), ({ 9} 16,  9, 17,), ({21} 37, 38, 39,), ({22} 40, 41, 42,), ({26} 49, 50, 51,), ({25} 46, 47, 48,), 
	LM[(g/l el) 5/ 5][(enodes)0-8]({ 6} 11,  9, 12,), ({ 7} 13, 14,  1,), ({11} 20, 21,  1,), ({10} 18,  9, 19,), ({22} 40, 41, 42,), ({23} 43, 44,  1,), ({27} 52, 53,  1,), ({26} 49, 50, 51,), 
	LM[(g/l el) 6/ 6][(enodes)0-8]({ 8} -1, 15,  1,), ({ 9} 16,  9, 17,), ({13} 23, 24, 25,), ({12} -1, 22,  1,), ({24} -1, 45,  1,), ({25} 46, 47, 48,), ({29} 55, 56, 57,), ({28} -1, 54,  1,), 
	LM[(g/l el) 7/ 7][(enodes)0-8]({ 9} 16,  9, 17,), ({10} 18,  9, 19,), ({14} 26, 27, 28,), ({13} 23, 24, 25,), ({25} 46, 47, 48,), ({26} 49, 50, 51,), ({30} 58, 59, 60,), ({29} 55, 56, 57,), 
	LM[(g/l el) 8/ 8][(enodes)0-8]({10} 18,  9, 19,), ({11} 20, 21,  1,), ({15} 29, 30,  1,), ({14} 26, 27, 28,), ({26} 49, 50, 51,), ({27} 52, 53,  1,), ({31} 61, 62,  1,), ({30} 58, 59, 60,), 
	LM[(g/l el) 9/ 9][(enodes)0-8]({16} -1,  0,  1,), ({17} 31,  0, 32,), ({21} 37, 38, 39,), ({20} -1, 36,  1,), ({32} -1,  0,  1,), ({33} 63,  0, 64,), ({37} 69, 70, 71,), ({36} -1, 68,  1,), 
	LM[(g/l el)10/10][(enodes)0-8]({17} 31,  0, 32,), ({18} 33,  0, 34,), ({22} 40, 41, 42,), ({21} 37, 38, 39,), ({33} 63,  0, 64,), ({34} 65,  0, 66,), ({38} 72, 73, 74,), ({37} 69, 70, 71,), 
	LM[(g/l el)11/11][(enodes)0-8]({18} 33,  0, 34,), ({19} 35,  0,  1,), ({23} 43, 44,  1,), ({22} 40, 41, 42,), ({34} 65,  0, 66,), ({35} 67,  0,  1,), ({39} 75, 76,  1,), ({38} 72, 73, 74,), 
	LM[(g/l el)12/12][(enodes)0-8]({20} -1, 36,  1,), ({21} 37, 38, 39,), ({25} 46, 47, 48,), ({24} -1, 45,  1,), ({36} -1, 68,  1,), ({37} 69, 70, 71,), ({41} 78, 79, 80,), ({40} -1, 77,  1,), 
	LM[(g/l el)13/13][(enodes)0-8]({21} 37, 38, 39,), ({22} 40, 41, 42,), ({26} 49, 50, 51,), ({25} 46, 47, 48,), ({37} 69, 70, 71,), ({38} 72, 73, 74,), ({42} 81, 82, 83,), ({41} 78, 79, 80,), 
	LM[(g/l el)14/14][(enodes)0-8]({22} 40, 41, 42,), ({23} 43, 44,  1,), ({27} 52, 53,  1,), ({26} 49, 50, 51,), ({38} 72, 73, 74,), ({39} 75, 76,  1,), ({43} 84, 85,  1,), ({42} 81, 82, 83,), 
	LM[(g/l el)15/15][(enodes)0-8]({24} -1, 45,  1,), ({25} 46, 47, 48,), ({29} 55, 56, 57,), ({28} -1, 54,  1,), ({40} -1, 77,  1,), ({41} 78, 79, 80,), ({45} 87, 88, 89,), ({44} -1, 86,  1,), 
	LM[(g/l el)16/16][(enodes)0-8]({25} 46, 47, 48,), ({26} 49, 50, 51,), ({30} 58, 59, 60,), ({29} 55, 56, 57,), ({41} 78, 79, 80,), ({42} 81, 82, 83,), ({46} 90, 91, 92,), ({45} 87, 88, 89,), 
	LM[(g/l el)17/17][(enodes)0-8]({26} 49, 50, 51,), ({27} 52, 53,  1,), ({31} 61, 62,  1,), ({30} 58, 59, 60,), ({42} 81, 82, 83,), ({43} 84, 85,  1,), ({47} 93, 94,  1,), ({46} 90, 91, 92,), 
	LM[(g/l el)18/18][(enodes)0-8]({32} -1,  0,  1,), ({33} 63,  0, 64,), ({37} 69, 70, 71,), ({36} -1, 68,  1,), ({48} -1,  0,  1,), ({49} 95,  0, 96,), ({53}101,102,103,), ({52} -1,100,  1,), 
	LM[(g/l el)19/19][(enodes)0-8]({33} 63,  0, 64,), ({34} 65,  0, 66,), ({38} 72, 73, 74,), ({37} 69, 70, 71,), ({49} 95,  0, 96,), ({50} 97,  0, 98,), ({54}104,105,106,), ({53}101,102,103,), 
	LM[(g/l el)20/20][(enodes)0-8]({34} 65,  0, 66,), ({35} 67,  0,  1,), ({39} 75, 76,  1,), ({38} 72, 73, 74,), ({50} 97,  0, 98,), ({51} 99,  0,  1,), ({55}107,108,  1,), ({54}104,105,106,), 
	LM[(g/l el)21/21][(enodes)0-8]({36} -1, 68,  1,), ({37} 69, 70, 71,), ({41} 78, 79, 80,), ({40} -1, 77,  1,), ({52} -1,100,  1,), ({53}101,102,103,), ({57}110,111,112,), ({56} -1,109,  1,), 
	LM[(g/l el)22/22][(enodes)0-8]({37} 69, 70, 71,), ({38} 72, 73, 74,), ({42} 81, 82, 83,), ({41} 78, 79, 80,), ({53}101,102,103,), ({54}104,105,106,), ({58}113,114,115,), ({57}110,111,112,), 
	LM[(g/l el)23/23][(enodes)0-8]({38} 72, 73, 74,), ({39} 75, 76,  1,), ({43} 84, 85,  1,), ({42} 81, 82, 83,), ({54}104,105,106,), ({55}107,108,  1,), ({59}116,117,  1,), ({58}113,114,115,), 
	LM[(g/l el)24/24][(enodes)0-8]({40} -1, 77,  1,), ({41} 78, 79, 80,), ({45} 87, 88, 89,), ({44} -1, 86,  1,), ({56} -1,109,  1,), ({57}110,111,112,), ({61}119,120,121,), ({60} -1,118,  1,), 
	LM[(g/l el)25/25][(enodes)0-8]({41} 78, 79, 80,), ({42} 81, 82, 83,), ({46} 90, 91, 92,), ({45} 87, 88, 89,), ({57}110,111,112,), ({58}113,114,115,), ({62}122,123,124,), ({61}119,120,121,), 
	LM[(g/l el)26/26][(enodes)0-8]({42} 81, 82, 83,), ({43} 84, 85,  1,), ({47} 93, 94,  1,), ({46} 90, 91, 92,), ({58}113,114,115,), ({59}116,117,  1,), ({63}125,126,  1,), ({62}122,123,124,), 
LinkedDofInfo (ptr): 0x8081dec
Stg_Class (ptr): 0x8081dec
	sizeOfSelf: 108
	_deleteSelf: Yes
	type: LinkedDofInfo
	_delete (func ptr): 0x4002bf7b
	_print (func ptr): 0x4002bfb5
	_copy (func ptr): 0x4002c258
3 Linked dof sets active:
	Set 0: has eqNum 0
	Set 1: has eqNum 1
	Set 2: has eqNum 9
Linked dof sets table:
	Node 0: -1, 0, 1, 
	Node 1: -1, 0, -1, 
	Node 2: -1, 0, -1, 
	Node 3: -1, 0, 1, 
	Node 4: -1, -1, 1, 
	Node 5: -1, 2, -1, 
	Node 6: -1, 2, -1, 
	Node 7: -1, -1, 1, 
	Node 8: -1, -1, 1, 
	Node 9: -1, 2, -1, 
	Node 10: -1, 2, -1, 
	Node 11: -1, -1, 1, 
	Node 12: -1, -1, 1, 
	Node 13: -1, -1, -1, 
	Node 14: -1, -1, -1, 
	Node 15: -1, -1, 1, 
	Node 16: -1, 0, 1, 
	Node 17: -1, 0, -1, 
	Node 18: -1, 0, -1, 
	Node 19: -1, 0, 1, 
	Node 20: -1, -1, 1, 
	Node 21: -1, -1, -1, 
	Node 22: -1, -1, -1, 
	Node 23: -1, -1, 1, 
	Node 24: -1, -1, 1, 
	Node 25: -1, -1, -1, 
	Node 26: -1, -1, -1, 
	Node 27: -1, -1, 1, 
	Node 28: -1, -1, 1, 
	Node 29: -1, -1, -1, 
	Node 30: -1, -1, -1, 
	Node 31: -1, -1, 1, 
	Node 32: -1, 0, 1, 
	Node 33: -1, 0, -1, 
	Node 34: -1, 0, -1, 
	Node 35: -1, 0, 1, 
	Node 36: -1, -1, 1, 
	Node 37: -1, -1, -1, 
	Node 38: -1, -1, -1, 
	Node 39: -1, -1, 1, 
	Node 40: -1, -1, 1, 
	Node 41: -1, -1, -1, 
	Node 42: -1, -1, -1, 
	Node 43: -1, -1, 1, 
	Node 44: -1, -1, 1, 
	Node 45: -1, -1, -1, 
	Node 46: -1, -1, -1, 
	Node 47: -1, -1, 1, 
	Node 48: -1, 0, 1, 
	Node 49: -1, 0, -1, 
	Node 50: -1, 0, -1, 
	Node 51: -1, 0, 1, 
	Node 52: -1, -1, 1, 
	Node 53: -1, -1, -1, 
	Node 54: -1, -1, -1, 
	Node 55: -1, -1, 1, 
	Node 56: -1, -1, 1, 
	Node 57: -1, -1, -1, 
	Node 58: -1, -1, -1, 
	Node 59: -1, -1, 1, 
	Node 60: -1, -1, 1, 
	Node 61: -1, -1, -1, 
	Node 62: -1, -1, -1, 
	Node 63: -1, -1, 1, 
Cleaning Up:
