<?xml version="1.0"?>
<!DOCTYPE StGermainData SYSTEM "stgermain.dtd">
<StGermainData xmlns="http://www.vpac.org/StGermain/XML_IO_Handler/Jun2003">

<param name="Name">lucContour</param>
<param name="Author">...</param>
<param name="Organisation">MCC</param>
<param name="Project">gLucifer</param>
<param name="Location">./gLucifer/DrawingObjects/src/</param>
<param name="Project Web">http://mcc.monash.edu.au/gLucifer</param>
<param name="Copyright">Copyright (c) 2005, Monash Cluster Computing</param>
<param name="License">http://www.opensource.org/licenses/bsd-license.php</param>
<param name="Parent">lucOpenGLDrawingObject</param>
<param name="Reference">...</param>
<param name="Summary">...</param>
<param name="Description">Visualises a scalar field by the use of contour lines at specific intervals. It gets the value of the field on a grid and uses a 2D form of the Marching Cubes algorithm to draw the contours.</param>

<!--Now the interesting stuff-->


<list name="Params">
	<struct>
		<param name="Name">resolution</param>
		<param name="Type">UnsignedInt</param>
		<param name="Default">8</param>
		<param name="Description">The default value for the resolutionX, resolutionY and resolutionZ. If these values aren't set the sampling grid will be uniform with this number of verticies in each direction.</param>
	</struct>
	<struct>
		<param name="Name">resolutionX</param>
		<param name="Type">UnsignedInt</param>
		<param name="Default">defaultResolution</param>
		<param name="Description">The number of grid points in the X direction.</param>
	</struct>
	<struct>
		<param name="Name">resolutionY</param>
		<param name="Type">UnsignedInt</param>
		<param name="Default">defaultResolution</param>
		<param name="Description">The number of grid points in the Y direction.</param>
	</struct>
	<struct>
		<param name="Name">resolutionZ</param>
		<param name="Type">UnsignedInt</param>
		<param name="Default">defaultResolution</param>
		<param name="Description">The number of grid points in the Z direction.</param>
	</struct>
	<struct>
		<param name="Name">colour</param>
		<param name="Type">String</param>
		<param name="Default">"black"</param>
		<param name="Description">The colour of the contour lines. (If a lucColourMap is given - then this colour will not be used)</param>
	</struct>
	<struct>
		<param name="Name">lineWidth</param>
		<param name="Type">Double</param>
		<param name="Default">1.0</param>
		<param name="Description">The width of each contour line.</param>
	</struct>
	<struct>
		<param name="Name">interval</param>
		<param name="Type">Double</param>
		<param name="Default">-1.0</param>
		<param name="Description">If this number if positive, contours will be drawn from the minimum value of the field to the maximum value of the field at this interval. If this number is negative, this feature will not be used.</param>
	</struct>

</list>

<list name="Dependencies">
	<struct>
		<param name="Essential">True</param>
		<param name="Name">FieldVariable</param>
		<param name="Type">FieldVariable</param>
		<param name="Description">The field that you want to visualise with contour lines.</param>
	</struct>
	<struct>
		<param name="Essential">No</param>
		<param name="Name">ColourMap</param>
		<param name="Type">lucColourMap</param>
		<param name="Description">You may colour each of the contour lines with a colour map if you specify it here. This will override the 'colour' given as a parameter.</param>
	</struct>
</list>
<!-- Add an exmaple XML if possible -->
<param name="Example">...</param>

</StGermainData>
